<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="378" onload="init(evt)" viewBox="0 0 1200 378" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="378" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python main.py -t 20 -e 2000 -g 10 -p best_params.yaml</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="367.00"> </text><svg id="frames" x="10" width="1180" total_samples="35946"><g><title>run_simulation (agent.py:500) (54 samples, 0.15%)</title><rect x="0.0306%" y="132" width="0.1502%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="54"/><text x="0.2806%" y="142.50"></text></g><g><title>__init__ (agent.py:57) (118 samples, 0.33%)</title><rect x="0.1920%" y="148" width="0.3283%" height="15" fill="rgb(217,0,24)" fg:x="69" fg:w="118"/><text x="0.4420%" y="158.50"></text></g><g><title>run_simulation (agent.py:508) (125 samples, 0.35%)</title><rect x="0.1920%" y="132" width="0.3477%" height="15" fill="rgb(221,193,54)" fg:x="69" fg:w="125"/><text x="0.4420%" y="142.50"></text></g><g><title>update (agent.py:148) (68 samples, 0.19%)</title><rect x="0.5731%" y="148" width="0.1892%" height="15" fill="rgb(248,212,6)" fg:x="206" fg:w="68"/><text x="0.8231%" y="158.50"></text></g><g><title>rotate_center (agent.py:243) (44 samples, 0.12%)</title><rect x="0.6398%" y="164" width="0.1224%" height="15" fill="rgb(208,68,35)" fg:x="230" fg:w="44"/><text x="0.8898%" y="174.50"></text></g><g><title>check_radar (agent.py:119) (550 samples, 1.53%)</title><rect x="0.8457%" y="164" width="1.5301%" height="15" fill="rgb(232,128,0)" fg:x="304" fg:w="550"/><text x="1.0957%" y="174.50"></text></g><g><title>check_radar (agent.py:121) (75 samples, 0.21%)</title><rect x="2.4565%" y="164" width="0.2086%" height="15" fill="rgb(207,160,47)" fg:x="883" fg:w="75"/><text x="2.7065%" y="174.50"></text></g><g><title>check_radar (agent.py:122) (69 samples, 0.19%)</title><rect x="2.6651%" y="164" width="0.1920%" height="15" fill="rgb(228,23,34)" fg:x="958" fg:w="69"/><text x="2.9151%" y="174.50"></text></g><g><title>check_radar (agent.py:123) (268 samples, 0.75%)</title><rect x="2.8571%" y="164" width="0.7456%" height="15" fill="rgb(218,30,26)" fg:x="1027" fg:w="268"/><text x="3.1071%" y="174.50"></text></g><g><title>check_radar (agent.py:125) (56 samples, 0.16%)</title><rect x="3.6026%" y="164" width="0.1558%" height="15" fill="rgb(220,122,19)" fg:x="1295" fg:w="56"/><text x="3.8526%" y="174.50"></text></g><g><title>check_radar (agent.py:126) (43 samples, 0.12%)</title><rect x="3.7584%" y="164" width="0.1196%" height="15" fill="rgb(250,228,42)" fg:x="1351" fg:w="43"/><text x="4.0084%" y="174.50"></text></g><g><title>check_radar (agent.py:127) (250 samples, 0.70%)</title><rect x="3.8780%" y="164" width="0.6955%" height="15" fill="rgb(240,193,28)" fg:x="1394" fg:w="250"/><text x="4.1280%" y="174.50"></text></g><g><title>run_simulation (agent.py:553) (1,442 samples, 4.01%)</title><rect x="0.5731%" y="132" width="4.0116%" height="15" fill="rgb(216,20,37)" fg:x="206" fg:w="1442"/><text x="0.8231%" y="142.50">run_..</text></g><g><title>update (agent.py:208) (1,352 samples, 3.76%)</title><rect x="0.8235%" y="148" width="3.7612%" height="15" fill="rgb(206,188,39)" fg:x="296" fg:w="1352"/><text x="1.0735%" y="158.50">upda..</text></g><g><title>run_simulation (agent.py:595) (218 samples, 0.61%)</title><rect x="4.5986%" y="132" width="0.6065%" height="15" fill="rgb(217,207,13)" fg:x="1653" fg:w="218"/><text x="4.8486%" y="142.50"></text></g><g><title>run_simulation (agent.py:614) (893 samples, 2.48%)</title><rect x="5.3247%" y="132" width="2.4843%" height="15" fill="rgb(231,73,38)" fg:x="1914" fg:w="893"/><text x="5.5747%" y="142.50">ru..</text></g><g><title>run (neat/population.py:89) (3,088 samples, 8.59%)</title><rect x="0.0223%" y="116" width="8.5907%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="3088"/><text x="0.2723%" y="126.50">run (neat/po..</text></g><g><title>run_simulation (agent.py:615) (289 samples, 0.80%)</title><rect x="7.8089%" y="132" width="0.8040%" height="15" fill="rgb(210,31,41)" fg:x="2807" fg:w="289"/><text x="8.0589%" y="142.50"></text></g><g><title>run_population (agent.py:653) (3,092 samples, 8.60%)</title><rect x="0.0167%" y="100" width="8.6018%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="3092"/><text x="0.2667%" y="110.50">run_populati..</text></g><g><title>&lt;module&gt; (main.py:102) (3,103 samples, 8.63%)</title><rect x="0.0167%" y="68" width="8.6324%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="3103"/><text x="0.2667%" y="78.50">&lt;module&gt; (ma..</text></g><g><title>start_simulation (main.py:35) (3,103 samples, 8.63%)</title><rect x="0.0167%" y="84" width="8.6324%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="3103"/><text x="0.2667%" y="94.50">start_simula..</text></g><g><title>run_simulation (agent.py:500) (38 samples, 0.11%)</title><rect x="8.6630%" y="132" width="0.1057%" height="15" fill="rgb(235,183,28)" fg:x="3114" fg:w="38"/><text x="8.9130%" y="142.50"></text></g><g><title>__init__ (agent.py:57) (109 samples, 0.30%)</title><rect x="8.7743%" y="148" width="0.3032%" height="15" fill="rgb(221,5,38)" fg:x="3154" fg:w="109"/><text x="9.0243%" y="158.50"></text></g><g><title>run_simulation (agent.py:508) (111 samples, 0.31%)</title><rect x="8.7743%" y="132" width="0.3088%" height="15" fill="rgb(247,18,42)" fg:x="3154" fg:w="111"/><text x="9.0243%" y="142.50"></text></g><g><title>rotate_center (agent.py:240) (44 samples, 0.12%)</title><rect x="9.1860%" y="164" width="0.1224%" height="15" fill="rgb(241,131,45)" fg:x="3302" fg:w="44"/><text x="9.4360%" y="174.50"></text></g><g><title>update (agent.py:148) (89 samples, 0.25%)</title><rect x="9.1804%" y="148" width="0.2476%" height="15" fill="rgb(249,31,29)" fg:x="3300" fg:w="89"/><text x="9.4304%" y="158.50"></text></g><g><title>rotate_center (agent.py:243) (40 samples, 0.11%)</title><rect x="9.3168%" y="164" width="0.1113%" height="15" fill="rgb(225,111,53)" fg:x="3349" fg:w="40"/><text x="9.5668%" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:647) (52 samples, 0.14%)</title><rect x="9.8731%" y="244" width="0.1447%" height="15" fill="rgb(238,160,17)" fg:x="3549" fg:w="52"/><text x="10.1231%" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:89) (39 samples, 0.11%)</title><rect x="9.9093%" y="260" width="0.1085%" height="15" fill="rgb(214,148,48)" fg:x="3562" fg:w="39"/><text x="10.1593%" y="270.50"></text></g><g><title>_validate_data (sklearn/base.py:420) (110 samples, 0.31%)</title><rect x="9.7730%" y="212" width="0.3060%" height="15" fill="rgb(232,36,49)" fg:x="3513" fg:w="110"/><text x="10.0230%" y="222.50"></text></g><g><title>inner_f (sklearn/utils/validation.py:72) (106 samples, 0.29%)</title><rect x="9.7841%" y="228" width="0.2949%" height="15" fill="rgb(209,103,24)" fg:x="3517" fg:w="106"/><text x="10.0341%" y="238.50"></text></g><g><title>transform (sklearn/preprocessing/_data.py:791) (125 samples, 0.35%)</title><rect x="9.7396%" y="196" width="0.3477%" height="15" fill="rgb(229,88,8)" fg:x="3501" fg:w="125"/><text x="9.9896%" y="206.50"></text></g><g><title>prepare_single_trajectory (reward.py:132) (157 samples, 0.44%)</title><rect x="9.6979%" y="180" width="0.4368%" height="15" fill="rgb(213,181,19)" fg:x="3486" fg:w="157"/><text x="9.9479%" y="190.50"></text></g><g><title>get_reward (agent.py:231) (254 samples, 0.71%)</title><rect x="9.6868%" y="164" width="0.7066%" height="15" fill="rgb(254,191,54)" fg:x="3482" fg:w="254"/><text x="9.9368%" y="174.50"></text></g><g><title>prepare_single_trajectory (reward.py:137) (59 samples, 0.16%)</title><rect x="10.2292%" y="180" width="0.1641%" height="15" fill="rgb(241,83,37)" fg:x="3677" fg:w="59"/><text x="10.4792%" y="190.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (62 samples, 0.17%)</title><rect x="10.4740%" y="228" width="0.1725%" height="15" fill="rgb(233,36,39)" fg:x="3765" fg:w="62"/><text x="10.7240%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (102 samples, 0.28%)</title><rect x="10.4740%" y="212" width="0.2838%" height="15" fill="rgb(226,3,54)" fg:x="3765" fg:w="102"/><text x="10.7240%" y="222.50"></text></g><g><title>forward (reward.py:52) (150 samples, 0.42%)</title><rect x="10.4101%" y="196" width="0.4173%" height="15" fill="rgb(245,192,40)" fg:x="3742" fg:w="150"/><text x="10.6601%" y="206.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (45 samples, 0.13%)</title><rect x="10.9192%" y="228" width="0.1252%" height="15" fill="rgb(238,167,29)" fg:x="3925" fg:w="45"/><text x="11.1692%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (75 samples, 0.21%)</title><rect x="10.9164%" y="212" width="0.2086%" height="15" fill="rgb(232,182,51)" fg:x="3924" fg:w="75"/><text x="11.1664%" y="222.50"></text></g><g><title>forward (reward.py:54) (102 samples, 0.28%)</title><rect x="10.8802%" y="196" width="0.2838%" height="15" fill="rgb(231,60,39)" fg:x="3911" fg:w="102"/><text x="11.1302%" y="206.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (41 samples, 0.11%)</title><rect x="11.2363%" y="228" width="0.1141%" height="15" fill="rgb(208,69,12)" fg:x="4039" fg:w="41"/><text x="11.4863%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (74 samples, 0.21%)</title><rect x="11.2363%" y="212" width="0.2059%" height="15" fill="rgb(235,93,37)" fg:x="4039" fg:w="74"/><text x="11.4863%" y="222.50"></text></g><g><title>forward (reward.py:56) (104 samples, 0.29%)</title><rect x="11.2029%" y="196" width="0.2893%" height="15" fill="rgb(213,116,39)" fg:x="4027" fg:w="104"/><text x="11.4529%" y="206.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (51 samples, 0.14%)</title><rect x="11.5479%" y="228" width="0.1419%" height="15" fill="rgb(222,207,29)" fg:x="4151" fg:w="51"/><text x="11.7979%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (78 samples, 0.22%)</title><rect x="11.5451%" y="212" width="0.2170%" height="15" fill="rgb(206,96,30)" fg:x="4150" fg:w="78"/><text x="11.7951%" y="222.50"></text></g><g><title>forward (reward.py:58) (102 samples, 0.28%)</title><rect x="11.5173%" y="196" width="0.2838%" height="15" fill="rgb(218,138,4)" fg:x="4140" fg:w="102"/><text x="11.7673%" y="206.50"></text></g><g><title>forward (reward.py:60) (64 samples, 0.18%)</title><rect x="11.8233%" y="196" width="0.1780%" height="15" fill="rgb(250,191,14)" fg:x="4250" fg:w="64"/><text x="12.0733%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (61 samples, 0.17%)</title><rect x="11.8316%" y="212" width="0.1697%" height="15" fill="rgb(239,60,40)" fg:x="4253" fg:w="61"/><text x="12.0816%" y="222.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (61 samples, 0.17%)</title><rect x="11.8316%" y="228" width="0.1697%" height="15" fill="rgb(206,27,48)" fg:x="4253" fg:w="61"/><text x="12.0816%" y="238.50"></text></g><g><title>get_reward (agent.py:232) (638 samples, 1.77%)</title><rect x="10.3934%" y="164" width="1.7749%" height="15" fill="rgb(225,35,8)" fg:x="3736" fg:w="638"/><text x="10.6434%" y="174.50">g..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (632 samples, 1.76%)</title><rect x="10.4101%" y="180" width="1.7582%" height="15" fill="rgb(250,213,24)" fg:x="3742" fg:w="632"/><text x="10.6601%" y="190.50"></text></g><g><title>forward (reward.py:61) (60 samples, 0.17%)</title><rect x="12.0013%" y="196" width="0.1669%" height="15" fill="rgb(247,123,22)" fg:x="4314" fg:w="60"/><text x="12.2513%" y="206.50"></text></g><g><title>update (agent.py:157) (1,027 samples, 2.86%)</title><rect x="9.4447%" y="148" width="2.8571%" height="15" fill="rgb(231,138,38)" fg:x="3395" fg:w="1027"/><text x="9.6947%" y="158.50">up..</text></g><g><title>get_reward (agent.py:233) (48 samples, 0.13%)</title><rect x="12.1683%" y="164" width="0.1335%" height="15" fill="rgb(231,145,46)" fg:x="4374" fg:w="48"/><text x="12.4183%" y="174.50"></text></g><g><title>check_radar (agent.py:119) (481 samples, 1.34%)</title><rect x="12.4687%" y="164" width="1.3381%" height="15" fill="rgb(251,118,11)" fg:x="4482" fg:w="481"/><text x="12.7187%" y="174.50"></text></g><g><title>check_radar (agent.py:120) (37 samples, 0.10%)</title><rect x="13.8068%" y="164" width="0.1029%" height="15" fill="rgb(217,147,25)" fg:x="4963" fg:w="37"/><text x="14.0568%" y="174.50"></text></g><g><title>check_radar (agent.py:121) (73 samples, 0.20%)</title><rect x="13.9098%" y="164" width="0.2031%" height="15" fill="rgb(247,81,37)" fg:x="5000" fg:w="73"/><text x="14.1598%" y="174.50"></text></g><g><title>check_radar (agent.py:122) (58 samples, 0.16%)</title><rect x="14.1128%" y="164" width="0.1614%" height="15" fill="rgb(209,12,38)" fg:x="5073" fg:w="58"/><text x="14.3628%" y="174.50"></text></g><g><title>check_radar (agent.py:123) (351 samples, 0.98%)</title><rect x="14.2742%" y="164" width="0.9765%" height="15" fill="rgb(227,1,9)" fg:x="5131" fg:w="351"/><text x="14.5242%" y="174.50"></text></g><g><title>check_radar (agent.py:125) (54 samples, 0.15%)</title><rect x="15.2507%" y="164" width="0.1502%" height="15" fill="rgb(248,47,43)" fg:x="5482" fg:w="54"/><text x="15.5007%" y="174.50"></text></g><g><title>check_radar (agent.py:126) (50 samples, 0.14%)</title><rect x="15.4009%" y="164" width="0.1391%" height="15" fill="rgb(221,10,30)" fg:x="5536" fg:w="50"/><text x="15.6509%" y="174.50"></text></g><g><title>check_radar (agent.py:127) (253 samples, 0.70%)</title><rect x="15.5400%" y="164" width="0.7038%" height="15" fill="rgb(210,229,1)" fg:x="5586" fg:w="253"/><text x="15.7900%" y="174.50"></text></g><g><title>run_simulation (agent.py:553) (2,557 samples, 7.11%)</title><rect x="9.1777%" y="132" width="7.1134%" height="15" fill="rgb(222,148,37)" fg:x="3299" fg:w="2557"/><text x="9.4277%" y="142.50">run_simula..</text></g><g><title>update (agent.py:208) (1,388 samples, 3.86%)</title><rect x="12.4298%" y="148" width="3.8613%" height="15" fill="rgb(234,67,33)" fg:x="4468" fg:w="1388"/><text x="12.6798%" y="158.50">upda..</text></g><g><title>check_array (sklearn/utils/validation.py:647) (59 samples, 0.16%)</title><rect x="16.6694%" y="228" width="0.1641%" height="15" fill="rgb(247,98,35)" fg:x="5992" fg:w="59"/><text x="16.9194%" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:89) (52 samples, 0.14%)</title><rect x="16.6889%" y="244" width="0.1447%" height="15" fill="rgb(247,138,52)" fg:x="5999" fg:w="52"/><text x="16.9389%" y="254.50"></text></g><g><title>_validate_data (sklearn/base.py:420) (132 samples, 0.37%)</title><rect x="16.5192%" y="196" width="0.3672%" height="15" fill="rgb(213,79,30)" fg:x="5938" fg:w="132"/><text x="16.7692%" y="206.50"></text></g><g><title>inner_f (sklearn/utils/validation.py:72) (125 samples, 0.35%)</title><rect x="16.5387%" y="212" width="0.3477%" height="15" fill="rgb(246,177,23)" fg:x="5945" fg:w="125"/><text x="16.7887%" y="222.50"></text></g><g><title>transform (sklearn/preprocessing/_data.py:791) (149 samples, 0.41%)</title><rect x="16.4775%" y="180" width="0.4145%" height="15" fill="rgb(230,62,27)" fg:x="5923" fg:w="149"/><text x="16.7275%" y="190.50"></text></g><g><title>prepare_single_trajectory (reward.py:132) (182 samples, 0.51%)</title><rect x="16.4302%" y="164" width="0.5063%" height="15" fill="rgb(216,154,8)" fg:x="5906" fg:w="182"/><text x="16.6802%" y="174.50"></text></g><g><title>prepare_single_trajectory (reward.py:135) (36 samples, 0.10%)</title><rect x="16.9365%" y="164" width="0.1002%" height="15" fill="rgb(244,35,45)" fg:x="6088" fg:w="36"/><text x="17.1865%" y="174.50"></text></g><g><title>get_reward (agent.py:231) (262 samples, 0.73%)</title><rect x="16.4107%" y="148" width="0.7289%" height="15" fill="rgb(251,115,12)" fg:x="5899" fg:w="262"/><text x="16.6607%" y="158.50"></text></g><g><title>prepare_single_trajectory (reward.py:137) (37 samples, 0.10%)</title><rect x="17.0367%" y="164" width="0.1029%" height="15" fill="rgb(240,54,50)" fg:x="6124" fg:w="37"/><text x="17.2867%" y="174.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (98 samples, 0.27%)</title><rect x="17.2397%" y="212" width="0.2726%" height="15" fill="rgb(233,84,52)" fg:x="6197" fg:w="98"/><text x="17.4897%" y="222.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (62 samples, 0.17%)</title><rect x="17.5124%" y="212" width="0.1725%" height="15" fill="rgb(207,117,47)" fg:x="6295" fg:w="62"/><text x="17.7624%" y="222.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (62 samples, 0.17%)</title><rect x="17.5124%" y="228" width="0.1725%" height="15" fill="rgb(249,43,39)" fg:x="6295" fg:w="62"/><text x="17.7624%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (167 samples, 0.46%)</title><rect x="17.2342%" y="196" width="0.4646%" height="15" fill="rgb(209,38,44)" fg:x="6195" fg:w="167"/><text x="17.4842%" y="206.50"></text></g><g><title>forward (reward.py:52) (213 samples, 0.59%)</title><rect x="17.1646%" y="180" width="0.5926%" height="15" fill="rgb(236,212,23)" fg:x="6170" fg:w="213"/><text x="17.4146%" y="190.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (40 samples, 0.11%)</title><rect x="17.8434%" y="212" width="0.1113%" height="15" fill="rgb(242,79,21)" fg:x="6414" fg:w="40"/><text x="18.0934%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (67 samples, 0.19%)</title><rect x="17.8434%" y="196" width="0.1864%" height="15" fill="rgb(211,96,35)" fg:x="6414" fg:w="67"/><text x="18.0934%" y="206.50"></text></g><g><title>forward (reward.py:54) (109 samples, 0.30%)</title><rect x="17.8017%" y="180" width="0.3032%" height="15" fill="rgb(253,215,40)" fg:x="6399" fg:w="109"/><text x="18.0517%" y="190.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (42 samples, 0.12%)</title><rect x="18.1689%" y="212" width="0.1168%" height="15" fill="rgb(211,81,21)" fg:x="6531" fg:w="42"/><text x="18.4189%" y="222.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (42 samples, 0.12%)</title><rect x="18.2858%" y="212" width="0.1168%" height="15" fill="rgb(208,190,38)" fg:x="6573" fg:w="42"/><text x="18.5358%" y="222.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (42 samples, 0.12%)</title><rect x="18.2858%" y="228" width="0.1168%" height="15" fill="rgb(235,213,38)" fg:x="6573" fg:w="42"/><text x="18.5358%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (86 samples, 0.24%)</title><rect x="18.1689%" y="196" width="0.2392%" height="15" fill="rgb(237,122,38)" fg:x="6531" fg:w="86"/><text x="18.4189%" y="206.50"></text></g><g><title>forward (reward.py:56) (112 samples, 0.31%)</title><rect x="18.1300%" y="180" width="0.3116%" height="15" fill="rgb(244,218,35)" fg:x="6517" fg:w="112"/><text x="18.3800%" y="190.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (37 samples, 0.10%)</title><rect x="18.5167%" y="212" width="0.1029%" height="15" fill="rgb(240,68,47)" fg:x="6656" fg:w="37"/><text x="18.7667%" y="222.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (40 samples, 0.11%)</title><rect x="18.6196%" y="212" width="0.1113%" height="15" fill="rgb(210,16,53)" fg:x="6693" fg:w="40"/><text x="18.8696%" y="222.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (40 samples, 0.11%)</title><rect x="18.6196%" y="228" width="0.1113%" height="15" fill="rgb(235,124,12)" fg:x="6693" fg:w="40"/><text x="18.8696%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (82 samples, 0.23%)</title><rect x="18.5111%" y="196" width="0.2281%" height="15" fill="rgb(224,169,11)" fg:x="6654" fg:w="82"/><text x="18.7611%" y="206.50"></text></g><g><title>forward (reward.py:58) (114 samples, 0.32%)</title><rect x="18.4722%" y="180" width="0.3171%" height="15" fill="rgb(250,166,2)" fg:x="6640" fg:w="114"/><text x="18.7222%" y="190.50"></text></g><g><title>forward (reward.py:60) (63 samples, 0.18%)</title><rect x="18.8422%" y="180" width="0.1753%" height="15" fill="rgb(242,216,29)" fg:x="6773" fg:w="63"/><text x="19.0922%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (60 samples, 0.17%)</title><rect x="18.8505%" y="196" width="0.1669%" height="15" fill="rgb(230,116,27)" fg:x="6776" fg:w="60"/><text x="19.1005%" y="206.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (59 samples, 0.16%)</title><rect x="18.8533%" y="212" width="0.1641%" height="15" fill="rgb(228,99,48)" fg:x="6777" fg:w="59"/><text x="19.1033%" y="222.50"></text></g><g><title>get_reward (agent.py:232) (728 samples, 2.03%)</title><rect x="17.1396%" y="148" width="2.0253%" height="15" fill="rgb(253,11,6)" fg:x="6161" fg:w="728"/><text x="17.3896%" y="158.50">g..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (720 samples, 2.00%)</title><rect x="17.1619%" y="164" width="2.0030%" height="15" fill="rgb(247,143,39)" fg:x="6169" fg:w="720"/><text x="17.4119%" y="174.50">_..</text></g><g><title>forward (reward.py:61) (53 samples, 0.15%)</title><rect x="19.0174%" y="180" width="0.1474%" height="15" fill="rgb(236,97,10)" fg:x="6836" fg:w="53"/><text x="19.2674%" y="190.50"></text></g><g><title>run_simulation (agent.py:554) (1,064 samples, 2.96%)</title><rect x="16.2911%" y="132" width="2.9600%" height="15" fill="rgb(233,208,19)" fg:x="5856" fg:w="1064"/><text x="16.5411%" y="142.50">run..</text></g><g><title>run_simulation (agent.py:595) (164 samples, 0.46%)</title><rect x="19.2873%" y="132" width="0.4562%" height="15" fill="rgb(216,164,2)" fg:x="6933" fg:w="164"/><text x="19.5373%" y="142.50"></text></g><g><title>run_simulation (agent.py:614) (892 samples, 2.48%)</title><rect x="19.8409%" y="132" width="2.4815%" height="15" fill="rgb(220,129,5)" fg:x="7132" fg:w="892"/><text x="20.0909%" y="142.50">ru..</text></g><g><title>run_population (agent.py:653) (5,153 samples, 14.34%)</title><rect x="8.6491%" y="100" width="14.3354%" height="15" fill="rgb(242,17,10)" fg:x="3109" fg:w="5153"/><text x="8.8991%" y="110.50">run_population (agent...</text></g><g><title>run (neat/population.py:89) (5,150 samples, 14.33%)</title><rect x="8.6574%" y="116" width="14.3270%" height="15" fill="rgb(242,107,0)" fg:x="3112" fg:w="5150"/><text x="8.9074%" y="126.50">run (neat/population.p..</text></g><g><title>run_simulation (agent.py:615) (238 samples, 0.66%)</title><rect x="22.3224%" y="132" width="0.6621%" height="15" fill="rgb(251,28,31)" fg:x="8024" fg:w="238"/><text x="22.5724%" y="142.50"></text></g><g><title>&lt;module&gt; (main.py:113) (5,155 samples, 14.34%)</title><rect x="8.6491%" y="68" width="14.3410%" height="15" fill="rgb(233,223,10)" fg:x="3109" fg:w="5155"/><text x="8.8991%" y="78.50">&lt;module&gt; (main.py:113)</text></g><g><title>start_simulation (main.py:35) (5,155 samples, 14.34%)</title><rect x="8.6491%" y="84" width="14.3410%" height="15" fill="rgb(215,21,27)" fg:x="3109" fg:w="5155"/><text x="8.8991%" y="94.50">start_simulation (main..</text></g><g><title>&lt;module&gt; (main.py:12) (52 samples, 0.14%)</title><rect x="22.9900%" y="68" width="0.1447%" height="15" fill="rgb(232,23,21)" fg:x="8264" fg:w="52"/><text x="23.2400%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (52 samples, 0.14%)</title><rect x="22.9900%" y="84" width="0.1447%" height="15" fill="rgb(244,5,23)" fg:x="8264" fg:w="52"/><text x="23.2400%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (52 samples, 0.14%)</title><rect x="22.9900%" y="100" width="0.1447%" height="15" fill="rgb(226,81,46)" fg:x="8264" fg:w="52"/><text x="23.2400%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (52 samples, 0.14%)</title><rect x="22.9900%" y="116" width="0.1447%" height="15" fill="rgb(247,70,30)" fg:x="8264" fg:w="52"/><text x="23.2400%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (52 samples, 0.14%)</title><rect x="22.9900%" y="132" width="0.1447%" height="15" fill="rgb(212,68,19)" fg:x="8264" fg:w="52"/><text x="23.2400%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (52 samples, 0.14%)</title><rect x="22.9900%" y="148" width="0.1447%" height="15" fill="rgb(240,187,13)" fg:x="8264" fg:w="52"/><text x="23.2400%" y="158.50"></text></g><g><title>&lt;module&gt; (agent.py:19) (46 samples, 0.13%)</title><rect x="23.0067%" y="164" width="0.1280%" height="15" fill="rgb(223,113,26)" fg:x="8270" fg:w="46"/><text x="23.2567%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (46 samples, 0.13%)</title><rect x="23.0067%" y="180" width="0.1280%" height="15" fill="rgb(206,192,2)" fg:x="8270" fg:w="46"/><text x="23.2567%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (46 samples, 0.13%)</title><rect x="23.0067%" y="196" width="0.1280%" height="15" fill="rgb(241,108,4)" fg:x="8270" fg:w="46"/><text x="23.2567%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (46 samples, 0.13%)</title><rect x="23.0067%" y="212" width="0.1280%" height="15" fill="rgb(247,173,49)" fg:x="8270" fg:w="46"/><text x="23.2567%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (46 samples, 0.13%)</title><rect x="23.0067%" y="228" width="0.1280%" height="15" fill="rgb(224,114,35)" fg:x="8270" fg:w="46"/><text x="23.2567%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (46 samples, 0.13%)</title><rect x="23.0067%" y="244" width="0.1280%" height="15" fill="rgb(245,159,27)" fg:x="8270" fg:w="46"/><text x="23.2567%" y="254.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (179 samples, 0.50%)</title><rect x="23.8246%" y="148" width="0.4980%" height="15" fill="rgb(245,172,44)" fg:x="8564" fg:w="179"/><text x="24.0746%" y="158.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (109 samples, 0.30%)</title><rect x="24.3226%" y="148" width="0.3032%" height="15" fill="rgb(236,23,11)" fg:x="8743" fg:w="109"/><text x="24.5726%" y="158.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (107 samples, 0.30%)</title><rect x="24.3282%" y="164" width="0.2977%" height="15" fill="rgb(205,117,38)" fg:x="8745" fg:w="107"/><text x="24.5782%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (300 samples, 0.83%)</title><rect x="23.8218%" y="132" width="0.8346%" height="15" fill="rgb(237,72,25)" fg:x="8563" fg:w="300"/><text x="24.0718%" y="142.50"></text></g><g><title>forward (reward.py:52) (374 samples, 1.04%)</title><rect x="23.7439%" y="116" width="1.0404%" height="15" fill="rgb(244,70,9)" fg:x="8535" fg:w="374"/><text x="23.9939%" y="126.50"></text></g><g><title>relu (torch/nn/functional.py:1457) (46 samples, 0.13%)</title><rect x="24.6564%" y="132" width="0.1280%" height="15" fill="rgb(217,125,39)" fg:x="8863" fg:w="46"/><text x="24.9064%" y="142.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (88 samples, 0.24%)</title><rect x="24.9624%" y="148" width="0.2448%" height="15" fill="rgb(235,36,10)" fg:x="8973" fg:w="88"/><text x="25.2124%" y="158.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (65 samples, 0.18%)</title><rect x="25.2073%" y="148" width="0.1808%" height="15" fill="rgb(251,123,47)" fg:x="9061" fg:w="65"/><text x="25.4573%" y="158.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (65 samples, 0.18%)</title><rect x="25.2073%" y="164" width="0.1808%" height="15" fill="rgb(221,13,13)" fg:x="9061" fg:w="65"/><text x="25.4573%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (165 samples, 0.46%)</title><rect x="24.9513%" y="132" width="0.4590%" height="15" fill="rgb(238,131,9)" fg:x="8969" fg:w="165"/><text x="25.2013%" y="142.50"></text></g><g><title>forward (reward.py:54) (232 samples, 0.65%)</title><rect x="24.8818%" y="116" width="0.6454%" height="15" fill="rgb(211,50,8)" fg:x="8944" fg:w="232"/><text x="25.1318%" y="126.50"></text></g><g><title>relu (torch/nn/functional.py:1457) (41 samples, 0.11%)</title><rect x="25.4131%" y="132" width="0.1141%" height="15" fill="rgb(245,182,24)" fg:x="9135" fg:w="41"/><text x="25.6631%" y="142.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (79 samples, 0.22%)</title><rect x="25.6579%" y="148" width="0.2198%" height="15" fill="rgb(242,14,37)" fg:x="9223" fg:w="79"/><text x="25.9079%" y="158.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (76 samples, 0.21%)</title><rect x="25.8777%" y="148" width="0.2114%" height="15" fill="rgb(246,228,12)" fg:x="9302" fg:w="76"/><text x="26.1277%" y="158.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (73 samples, 0.20%)</title><rect x="25.8861%" y="164" width="0.2031%" height="15" fill="rgb(213,55,15)" fg:x="9305" fg:w="73"/><text x="26.1361%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (160 samples, 0.45%)</title><rect x="25.6579%" y="132" width="0.4451%" height="15" fill="rgb(209,9,3)" fg:x="9223" fg:w="160"/><text x="25.9079%" y="142.50"></text></g><g><title>forward (reward.py:56) (218 samples, 0.61%)</title><rect x="25.6051%" y="116" width="0.6065%" height="15" fill="rgb(230,59,30)" fg:x="9204" fg:w="218"/><text x="25.8551%" y="126.50"></text></g><g><title>relu (torch/nn/functional.py:1457) (39 samples, 0.11%)</title><rect x="26.1030%" y="132" width="0.1085%" height="15" fill="rgb(209,121,21)" fg:x="9383" fg:w="39"/><text x="26.3530%" y="142.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (69 samples, 0.19%)</title><rect x="26.3451%" y="148" width="0.1920%" height="15" fill="rgb(220,109,13)" fg:x="9470" fg:w="69"/><text x="26.5951%" y="158.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (66 samples, 0.18%)</title><rect x="26.5370%" y="148" width="0.1836%" height="15" fill="rgb(232,18,1)" fg:x="9539" fg:w="66"/><text x="26.7870%" y="158.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (62 samples, 0.17%)</title><rect x="26.5482%" y="164" width="0.1725%" height="15" fill="rgb(215,41,42)" fg:x="9543" fg:w="62"/><text x="26.7982%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (147 samples, 0.41%)</title><rect x="26.3395%" y="132" width="0.4089%" height="15" fill="rgb(224,123,36)" fg:x="9468" fg:w="147"/><text x="26.5895%" y="142.50"></text></g><g><title>forward (reward.py:58) (210 samples, 0.58%)</title><rect x="26.2700%" y="116" width="0.5842%" height="15" fill="rgb(240,125,3)" fg:x="9443" fg:w="210"/><text x="26.5200%" y="126.50"></text></g><g><title>relu (torch/nn/functional.py:1457) (38 samples, 0.11%)</title><rect x="26.7485%" y="132" width="0.1057%" height="15" fill="rgb(205,98,50)" fg:x="9615" fg:w="38"/><text x="26.9985%" y="142.50"></text></g><g><title>forward (reward.py:60) (140 samples, 0.39%)</title><rect x="26.9098%" y="116" width="0.3895%" height="15" fill="rgb(205,185,37)" fg:x="9673" fg:w="140"/><text x="27.1598%" y="126.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (130 samples, 0.36%)</title><rect x="26.9376%" y="132" width="0.3617%" height="15" fill="rgb(238,207,15)" fg:x="9683" fg:w="130"/><text x="27.1876%" y="142.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (128 samples, 0.36%)</title><rect x="26.9432%" y="148" width="0.3561%" height="15" fill="rgb(213,199,42)" fg:x="9685" fg:w="128"/><text x="27.1932%" y="158.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (1,408 samples, 3.92%)</title><rect x="23.7439%" y="100" width="3.9170%" height="15" fill="rgb(235,201,11)" fg:x="8535" fg:w="1408"/><text x="23.9939%" y="110.50">_cal..</text></g><g><title>forward (reward.py:61) (130 samples, 0.36%)</title><rect x="27.2993%" y="116" width="0.3617%" height="15" fill="rgb(207,46,11)" fg:x="9813" fg:w="130"/><text x="27.5493%" y="126.50"></text></g><g><title>transform (sklearn/preprocessing/_data.py:788) (49 samples, 0.14%)</title><rect x="27.6943%" y="116" width="0.1363%" height="15" fill="rgb(241,35,35)" fg:x="9955" fg:w="49"/><text x="27.9443%" y="126.50"></text></g><g><title>check_array (sklearn/utils/validation.py:647) (127 samples, 0.35%)</title><rect x="28.1867%" y="164" width="0.3533%" height="15" fill="rgb(243,32,47)" fg:x="10132" fg:w="127"/><text x="28.4367%" y="174.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:89) (102 samples, 0.28%)</title><rect x="28.2563%" y="180" width="0.2838%" height="15" fill="rgb(247,202,23)" fg:x="10157" fg:w="102"/><text x="28.5063%" y="190.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py:711) (68 samples, 0.19%)</title><rect x="28.3509%" y="196" width="0.1892%" height="15" fill="rgb(219,102,11)" fg:x="10191" fg:w="68"/><text x="28.6009%" y="206.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (65 samples, 0.18%)</title><rect x="28.3592%" y="212" width="0.1808%" height="15" fill="rgb(243,110,44)" fg:x="10194" fg:w="65"/><text x="28.6092%" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2259) (61 samples, 0.17%)</title><rect x="28.3703%" y="228" width="0.1697%" height="15" fill="rgb(222,74,54)" fg:x="10198" fg:w="61"/><text x="28.6203%" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (52 samples, 0.14%)</title><rect x="28.3954%" y="244" width="0.1447%" height="15" fill="rgb(216,99,12)" fg:x="10207" fg:w="52"/><text x="28.6454%" y="254.50"></text></g><g><title>_validate_data (sklearn/base.py:420) (264 samples, 0.73%)</title><rect x="27.9169%" y="132" width="0.7344%" height="15" fill="rgb(226,22,26)" fg:x="10035" fg:w="264"/><text x="28.1669%" y="142.50"></text></g><g><title>inner_f (sklearn/utils/validation.py:72) (252 samples, 0.70%)</title><rect x="27.9503%" y="148" width="0.7011%" height="15" fill="rgb(217,163,10)" fg:x="10047" fg:w="252"/><text x="28.2003%" y="158.50"></text></g><g><title>transform (sklearn/preprocessing/_data.py:791) (298 samples, 0.83%)</title><rect x="27.8306%" y="116" width="0.8290%" height="15" fill="rgb(213,25,53)" fg:x="10004" fg:w="298"/><text x="28.0806%" y="126.50"></text></g><g><title>prepare_single_trajectory (reward.py:132) (388 samples, 1.08%)</title><rect x="27.6915%" y="100" width="1.0794%" height="15" fill="rgb(252,105,26)" fg:x="9954" fg:w="388"/><text x="27.9415%" y="110.50"></text></g><g><title>prepare_single_trajectory (reward.py:135) (75 samples, 0.21%)</title><rect x="28.7709%" y="100" width="0.2086%" height="15" fill="rgb(220,39,43)" fg:x="10342" fg:w="75"/><text x="29.0209%" y="110.50"></text></g><g><title>populate_lists (plot.py:214) (2,173 samples, 6.05%)</title><rect x="23.2126%" y="84" width="6.0452%" height="15" fill="rgb(229,68,48)" fg:x="8344" fg:w="2173"/><text x="23.4626%" y="94.50">populate..</text></g><g><title>prepare_single_trajectory (reward.py:137) (100 samples, 0.28%)</title><rect x="28.9796%" y="100" width="0.2782%" height="15" fill="rgb(252,8,32)" fg:x="10417" fg:w="100"/><text x="29.2296%" y="110.50"></text></g><g><title>&lt;module&gt; (main.py:139) (2,206 samples, 6.14%)</title><rect x="23.1347%" y="68" width="6.1370%" height="15" fill="rgb(223,20,43)" fg:x="8316" fg:w="2206"/><text x="23.3847%" y="78.50">&lt;module&gt;..</text></g><g><title>savefig (matplotlib/pyplot.py:958) (44 samples, 0.12%)</title><rect x="29.4525%" y="116" width="0.1224%" height="15" fill="rgb(229,81,49)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="126.50"></text></g><g><title>savefig (matplotlib/figure.py:3019) (44 samples, 0.12%)</title><rect x="29.4525%" y="132" width="0.1224%" height="15" fill="rgb(236,28,36)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="142.50"></text></g><g><title>print_figure (matplotlib/backend_bases.py:2319) (44 samples, 0.12%)</title><rect x="29.4525%" y="148" width="0.1224%" height="15" fill="rgb(249,185,26)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="158.50"></text></g><g><title>wrapper (matplotlib/backend_bases.py:1648) (44 samples, 0.12%)</title><rect x="29.4525%" y="164" width="0.1224%" height="15" fill="rgb(249,174,33)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="174.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:412) (44 samples, 0.12%)</title><rect x="29.4525%" y="180" width="0.1224%" height="15" fill="rgb(233,201,37)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="190.50"></text></g><g><title>print_png (matplotlib/backends/backend_agg.py:540) (44 samples, 0.12%)</title><rect x="29.4525%" y="196" width="0.1224%" height="15" fill="rgb(221,78,26)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="206.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:436) (44 samples, 0.12%)</title><rect x="29.4525%" y="212" width="0.1224%" height="15" fill="rgb(250,127,30)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="222.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:73) (44 samples, 0.12%)</title><rect x="29.4525%" y="228" width="0.1224%" height="15" fill="rgb(230,49,44)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="238.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (44 samples, 0.12%)</title><rect x="29.4525%" y="244" width="0.1224%" height="15" fill="rgb(229,67,23)" fg:x="10587" fg:w="44"/><text x="29.7025%" y="254.50"></text></g><g><title>draw (matplotlib/figure.py:2810) (43 samples, 0.12%)</title><rect x="29.4553%" y="260" width="0.1196%" height="15" fill="rgb(249,83,47)" fg:x="10588" fg:w="43"/><text x="29.7053%" y="270.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (43 samples, 0.12%)</title><rect x="29.4553%" y="276" width="0.1196%" height="15" fill="rgb(215,43,3)" fg:x="10588" fg:w="43"/><text x="29.7053%" y="286.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (43 samples, 0.12%)</title><rect x="29.4553%" y="292" width="0.1196%" height="15" fill="rgb(238,154,13)" fg:x="10588" fg:w="43"/><text x="29.7053%" y="302.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3082) (43 samples, 0.12%)</title><rect x="29.4553%" y="308" width="0.1196%" height="15" fill="rgb(219,56,2)" fg:x="10588" fg:w="43"/><text x="29.7053%" y="318.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (43 samples, 0.12%)</title><rect x="29.4553%" y="324" width="0.1196%" height="15" fill="rgb(233,0,4)" fg:x="10588" fg:w="43"/><text x="29.7053%" y="334.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:50) (43 samples, 0.12%)</title><rect x="29.4553%" y="340" width="0.1196%" height="15" fill="rgb(235,30,7)" fg:x="10588" fg:w="43"/><text x="29.7053%" y="350.50"></text></g><g><title>graph_segment_distance_vs_reward (plot.py:544) (76 samples, 0.21%)</title><rect x="29.4525%" y="100" width="0.2114%" height="15" fill="rgb(250,79,13)" fg:x="10587" fg:w="76"/><text x="29.7025%" y="110.50"></text></g><g><title>&lt;module&gt; (main.py:148) (142 samples, 0.40%)</title><rect x="29.2717%" y="68" width="0.3950%" height="15" fill="rgb(211,146,34)" fg:x="10522" fg:w="142"/><text x="29.5217%" y="78.50"></text></g><g><title>handle_plotting (plot.py:332) (101 samples, 0.28%)</title><rect x="29.3857%" y="84" width="0.2810%" height="15" fill="rgb(228,22,38)" fg:x="10563" fg:w="101"/><text x="29.6357%" y="94.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (113 samples, 0.31%)</title><rect x="29.7697%" y="100" width="0.3144%" height="15" fill="rgb(235,168,5)" fg:x="10701" fg:w="113"/><text x="30.0197%" y="110.50"></text></g><g><title>prepare_single_trajectory (reward.py:132) (37 samples, 0.10%)</title><rect x="30.1814%" y="100" width="0.1029%" height="15" fill="rgb(221,155,16)" fg:x="10849" fg:w="37"/><text x="30.4314%" y="110.50"></text></g><g><title>prepare_data (plot.py:114) (198 samples, 0.55%)</title><rect x="29.7669%" y="84" width="0.5508%" height="15" fill="rgb(215,215,53)" fg:x="10700" fg:w="198"/><text x="30.0169%" y="94.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (120 samples, 0.33%)</title><rect x="30.3817%" y="100" width="0.3338%" height="15" fill="rgb(223,4,10)" fg:x="10921" fg:w="120"/><text x="30.6317%" y="110.50"></text></g><g><title>prepare_data (plot.py:117) (162 samples, 0.45%)</title><rect x="30.3789%" y="84" width="0.4507%" height="15" fill="rgb(234,103,6)" fg:x="10920" fg:w="162"/><text x="30.6289%" y="94.50"></text></g><g><title>prepare_data (plot.py:130) (119 samples, 0.33%)</title><rect x="30.8852%" y="84" width="0.3311%" height="15" fill="rgb(227,97,0)" fg:x="11102" fg:w="119"/><text x="31.1352%" y="94.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (168 samples, 0.47%)</title><rect x="31.8005%" y="148" width="0.4674%" height="15" fill="rgb(234,150,53)" fg:x="11431" fg:w="168"/><text x="32.0505%" y="158.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (115 samples, 0.32%)</title><rect x="32.2678%" y="148" width="0.3199%" height="15" fill="rgb(228,201,54)" fg:x="11599" fg:w="115"/><text x="32.5178%" y="158.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (111 samples, 0.31%)</title><rect x="32.2790%" y="164" width="0.3088%" height="15" fill="rgb(222,22,37)" fg:x="11603" fg:w="111"/><text x="32.5290%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (294 samples, 0.82%)</title><rect x="31.7921%" y="132" width="0.8179%" height="15" fill="rgb(237,53,32)" fg:x="11428" fg:w="294"/><text x="32.0421%" y="142.50"></text></g><g><title>forward (reward.py:52) (385 samples, 1.07%)</title><rect x="31.6781%" y="116" width="1.0711%" height="15" fill="rgb(233,25,53)" fg:x="11387" fg:w="385"/><text x="31.9281%" y="126.50"></text></g><g><title>relu (torch/nn/functional.py:1457) (49 samples, 0.14%)</title><rect x="32.6128%" y="132" width="0.1363%" height="15" fill="rgb(210,40,34)" fg:x="11723" fg:w="49"/><text x="32.8628%" y="142.50"></text></g><g><title>forward (reward.py:53) (36 samples, 0.10%)</title><rect x="32.7491%" y="116" width="0.1002%" height="15" fill="rgb(241,220,44)" fg:x="11772" fg:w="36"/><text x="32.9991%" y="126.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (97 samples, 0.27%)</title><rect x="32.9244%" y="148" width="0.2698%" height="15" fill="rgb(235,28,35)" fg:x="11835" fg:w="97"/><text x="33.1744%" y="158.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (64 samples, 0.18%)</title><rect x="33.1942%" y="148" width="0.1780%" height="15" fill="rgb(210,56,17)" fg:x="11932" fg:w="64"/><text x="33.4442%" y="158.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (64 samples, 0.18%)</title><rect x="33.1942%" y="164" width="0.1780%" height="15" fill="rgb(224,130,29)" fg:x="11932" fg:w="64"/><text x="33.4442%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (176 samples, 0.49%)</title><rect x="32.9160%" y="132" width="0.4896%" height="15" fill="rgb(235,212,8)" fg:x="11832" fg:w="176"/><text x="33.1660%" y="142.50"></text></g><g><title>forward (reward.py:54) (250 samples, 0.70%)</title><rect x="32.8493%" y="116" width="0.6955%" height="15" fill="rgb(223,33,50)" fg:x="11808" fg:w="250"/><text x="33.0993%" y="126.50"></text></g><g><title>relu (torch/nn/functional.py:1457) (49 samples, 0.14%)</title><rect x="33.4084%" y="132" width="0.1363%" height="15" fill="rgb(219,149,13)" fg:x="12009" fg:w="49"/><text x="33.6584%" y="142.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (79 samples, 0.22%)</title><rect x="33.6616%" y="148" width="0.2198%" height="15" fill="rgb(250,156,29)" fg:x="12100" fg:w="79"/><text x="33.9116%" y="158.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (59 samples, 0.16%)</title><rect x="33.8814%" y="148" width="0.1641%" height="15" fill="rgb(216,193,19)" fg:x="12179" fg:w="59"/><text x="34.1314%" y="158.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (59 samples, 0.16%)</title><rect x="33.8814%" y="164" width="0.1641%" height="15" fill="rgb(216,135,14)" fg:x="12179" fg:w="59"/><text x="34.1314%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (144 samples, 0.40%)</title><rect x="33.6588%" y="132" width="0.4006%" height="15" fill="rgb(241,47,5)" fg:x="12099" fg:w="144"/><text x="33.9088%" y="142.50"></text></g><g><title>forward (reward.py:56) (199 samples, 0.55%)</title><rect x="33.6032%" y="116" width="0.5536%" height="15" fill="rgb(233,42,35)" fg:x="12079" fg:w="199"/><text x="33.8532%" y="126.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (87 samples, 0.24%)</title><rect x="34.2653%" y="148" width="0.2420%" height="15" fill="rgb(231,13,6)" fg:x="12317" fg:w="87"/><text x="34.5153%" y="158.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:190) (65 samples, 0.18%)</title><rect x="34.5073%" y="148" width="0.1808%" height="15" fill="rgb(207,181,40)" fg:x="12404" fg:w="65"/><text x="34.7573%" y="158.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2515) (62 samples, 0.17%)</title><rect x="34.5157%" y="164" width="0.1725%" height="15" fill="rgb(254,173,49)" fg:x="12407" fg:w="62"/><text x="34.7657%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (161 samples, 0.45%)</title><rect x="34.2597%" y="132" width="0.4479%" height="15" fill="rgb(221,1,38)" fg:x="12315" fg:w="161"/><text x="34.5097%" y="142.50"></text></g><g><title>forward (reward.py:58) (211 samples, 0.59%)</title><rect x="34.2124%" y="116" width="0.5870%" height="15" fill="rgb(206,124,46)" fg:x="12298" fg:w="211"/><text x="34.4624%" y="126.50"></text></g><g><title>forward (reward.py:60) (145 samples, 0.40%)</title><rect x="34.8384%" y="116" width="0.4034%" height="15" fill="rgb(249,21,11)" fg:x="12523" fg:w="145"/><text x="35.0884%" y="126.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (127 samples, 0.35%)</title><rect x="34.8884%" y="132" width="0.3533%" height="15" fill="rgb(222,201,40)" fg:x="12541" fg:w="127"/><text x="35.1384%" y="142.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (126 samples, 0.35%)</title><rect x="34.8912%" y="148" width="0.3505%" height="15" fill="rgb(235,61,29)" fg:x="12542" fg:w="126"/><text x="35.1412%" y="158.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (1,409 samples, 3.92%)</title><rect x="31.6753%" y="100" width="3.9198%" height="15" fill="rgb(219,207,3)" fg:x="11386" fg:w="1409"/><text x="31.9253%" y="110.50">_cal..</text></g><g><title>forward (reward.py:61) (127 samples, 0.35%)</title><rect x="35.2418%" y="116" width="0.3533%" height="15" fill="rgb(222,56,46)" fg:x="12668" fg:w="127"/><text x="35.4918%" y="126.50"></text></g><g><title>transform (sklearn/preprocessing/_data.py:788) (42 samples, 0.12%)</title><rect x="35.6284%" y="116" width="0.1168%" height="15" fill="rgb(239,76,54)" fg:x="12807" fg:w="42"/><text x="35.8784%" y="126.50"></text></g><g><title>check_array (sklearn/utils/validation.py:647) (132 samples, 0.37%)</title><rect x="36.1626%" y="164" width="0.3672%" height="15" fill="rgb(231,124,27)" fg:x="12999" fg:w="132"/><text x="36.4126%" y="174.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:89) (103 samples, 0.29%)</title><rect x="36.2433%" y="180" width="0.2865%" height="15" fill="rgb(249,195,6)" fg:x="13028" fg:w="103"/><text x="36.4933%" y="190.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py:711) (67 samples, 0.19%)</title><rect x="36.3434%" y="196" width="0.1864%" height="15" fill="rgb(237,174,47)" fg:x="13064" fg:w="67"/><text x="36.5934%" y="206.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (60 samples, 0.17%)</title><rect x="36.3629%" y="212" width="0.1669%" height="15" fill="rgb(206,201,31)" fg:x="13071" fg:w="60"/><text x="36.6129%" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2259) (56 samples, 0.16%)</title><rect x="36.3740%" y="228" width="0.1558%" height="15" fill="rgb(231,57,52)" fg:x="13075" fg:w="56"/><text x="36.6240%" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (51 samples, 0.14%)</title><rect x="36.3879%" y="244" width="0.1419%" height="15" fill="rgb(248,177,22)" fg:x="13080" fg:w="51"/><text x="36.6379%" y="254.50"></text></g><g><title>_validate_data (sklearn/base.py:420) (297 samples, 0.83%)</title><rect x="35.8315%" y="132" width="0.8262%" height="15" fill="rgb(215,211,37)" fg:x="12880" fg:w="297"/><text x="36.0815%" y="142.50"></text></g><g><title>inner_f (sklearn/utils/validation.py:72) (286 samples, 0.80%)</title><rect x="35.8621%" y="148" width="0.7956%" height="15" fill="rgb(241,128,51)" fg:x="12891" fg:w="286"/><text x="36.1121%" y="158.50"></text></g><g><title>transform (sklearn/preprocessing/_data.py:791) (334 samples, 0.93%)</title><rect x="35.7453%" y="116" width="0.9292%" height="15" fill="rgb(227,165,31)" fg:x="12849" fg:w="334"/><text x="35.9953%" y="126.50"></text></g><g><title>prepare_single_trajectory (reward.py:132) (420 samples, 1.17%)</title><rect x="35.6145%" y="100" width="1.1684%" height="15" fill="rgb(228,167,24)" fg:x="12802" fg:w="420"/><text x="35.8645%" y="110.50"></text></g><g><title>prepare_single_trajectory (reward.py:135) (66 samples, 0.18%)</title><rect x="36.7830%" y="100" width="0.1836%" height="15" fill="rgb(228,143,12)" fg:x="13222" fg:w="66"/><text x="37.0330%" y="110.50"></text></g><g><title>prepare_data (plot.py:86) (2,132 samples, 5.93%)</title><rect x="31.2997%" y="84" width="5.9311%" height="15" fill="rgb(249,149,8)" fg:x="11251" fg:w="2132"/><text x="31.5497%" y="94.50">prepare_..</text></g><g><title>prepare_single_trajectory (reward.py:137) (95 samples, 0.26%)</title><rect x="36.9666%" y="100" width="0.2643%" height="15" fill="rgb(243,35,44)" fg:x="13288" fg:w="95"/><text x="37.2166%" y="110.50"></text></g><g><title>prepare_data (plot.py:87) (123 samples, 0.34%)</title><rect x="37.2308%" y="84" width="0.3422%" height="15" fill="rgb(246,89,9)" fg:x="13383" fg:w="123"/><text x="37.4808%" y="94.50"></text></g><g><title>prepare_data (plot.py:88) (96 samples, 0.27%)</title><rect x="37.5730%" y="84" width="0.2671%" height="15" fill="rgb(233,213,13)" fg:x="13506" fg:w="96"/><text x="37.8230%" y="94.50"></text></g><g><title>&lt;module&gt; (main.py:156) (2,926 samples, 8.14%)</title><rect x="29.7196%" y="68" width="8.1400%" height="15" fill="rgb(233,141,41)" fg:x="10683" fg:w="2926"/><text x="29.9696%" y="78.50">&lt;module&gt; (m..</text></g><g><title>run_simulation (agent.py:500) (87 samples, 0.24%)</title><rect x="38.0710%" y="132" width="0.2420%" height="15" fill="rgb(239,167,4)" fg:x="13685" fg:w="87"/><text x="38.3210%" y="142.50"></text></g><g><title>__init__ (agent.py:57) (906 samples, 2.52%)</title><rect x="38.3214%" y="148" width="2.5204%" height="15" fill="rgb(209,217,16)" fg:x="13775" fg:w="906"/><text x="38.5714%" y="158.50">__..</text></g><g><title>run_simulation (agent.py:508) (938 samples, 2.61%)</title><rect x="38.3214%" y="132" width="2.6095%" height="15" fill="rgb(219,88,35)" fg:x="13775" fg:w="938"/><text x="38.5714%" y="142.50">ru..</text></g><g><title>activate (neat/nn/feed_forward.py:21) (39 samples, 0.11%)</title><rect x="41.1784%" y="148" width="0.1085%" height="15" fill="rgb(220,193,23)" fg:x="14802" fg:w="39"/><text x="41.4284%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:22) (63 samples, 0.18%)</title><rect x="41.2869%" y="148" width="0.1753%" height="15" fill="rgb(230,90,52)" fg:x="14841" fg:w="63"/><text x="41.5369%" y="158.50"></text></g><g><title>tanh_activation (neat/activations.py:17) (47 samples, 0.13%)</title><rect x="41.5902%" y="164" width="0.1308%" height="15" fill="rgb(252,106,19)" fg:x="14950" fg:w="47"/><text x="41.8402%" y="174.50"></text></g><g><title>activate (neat/nn/feed_forward.py:24) (89 samples, 0.25%)</title><rect x="41.5345%" y="148" width="0.2476%" height="15" fill="rgb(206,74,20)" fg:x="14930" fg:w="89"/><text x="41.7845%" y="158.50"></text></g><g><title>run_simulation (agent.py:534) (318 samples, 0.88%)</title><rect x="41.0171%" y="132" width="0.8847%" height="15" fill="rgb(230,138,44)" fg:x="14744" fg:w="318"/><text x="41.2671%" y="142.50"></text></g><g><title>rotate_center (agent.py:240) (199 samples, 0.55%)</title><rect x="42.0408%" y="164" width="0.5536%" height="15" fill="rgb(235,182,43)" fg:x="15112" fg:w="199"/><text x="42.2908%" y="174.50"></text></g><g><title>update (agent.py:148) (582 samples, 1.62%)</title><rect x="42.0019%" y="148" width="1.6191%" height="15" fill="rgb(242,16,51)" fg:x="15098" fg:w="582"/><text x="42.2519%" y="158.50"></text></g><g><title>rotate_center (agent.py:243) (360 samples, 1.00%)</title><rect x="42.6195%" y="164" width="1.0015%" height="15" fill="rgb(248,9,4)" fg:x="15320" fg:w="360"/><text x="42.8695%" y="174.50"></text></g><g><title>check_collision (agent.py:103) (95 samples, 0.26%)</title><rect x="43.9159%" y="164" width="0.2643%" height="15" fill="rgb(210,31,22)" fg:x="15786" fg:w="95"/><text x="44.1659%" y="174.50"></text></g><g><title>update (agent.py:203) (101 samples, 0.28%)</title><rect x="43.9020%" y="148" width="0.2810%" height="15" fill="rgb(239,54,39)" fg:x="15781" fg:w="101"/><text x="44.1520%" y="158.50"></text></g><g><title>check_radar (agent.py:119) (4,725 samples, 13.14%)</title><rect x="44.4639%" y="164" width="13.1447%" height="15" fill="rgb(230,99,41)" fg:x="15983" fg:w="4725"/><text x="44.7139%" y="174.50">check_radar (agent.p..</text></g><g><title>check_radar (agent.py:120) (266 samples, 0.74%)</title><rect x="57.6086%" y="164" width="0.7400%" height="15" fill="rgb(253,106,12)" fg:x="20708" fg:w="266"/><text x="57.8586%" y="174.50"></text></g><g><title>check_radar (agent.py:121) (691 samples, 1.92%)</title><rect x="58.3486%" y="164" width="1.9223%" height="15" fill="rgb(213,46,41)" fg:x="20974" fg:w="691"/><text x="58.5986%" y="174.50">c..</text></g><g><title>check_radar (agent.py:122) (609 samples, 1.69%)</title><rect x="60.2710%" y="164" width="1.6942%" height="15" fill="rgb(215,133,35)" fg:x="21665" fg:w="609"/><text x="60.5210%" y="174.50"></text></g><g><title>check_radar (agent.py:123) (2,596 samples, 7.22%)</title><rect x="61.9652%" y="164" width="7.2219%" height="15" fill="rgb(213,28,5)" fg:x="22274" fg:w="2596"/><text x="62.2152%" y="174.50">check_rada..</text></g><g><title>check_radar (agent.py:125) (537 samples, 1.49%)</title><rect x="69.1871%" y="164" width="1.4939%" height="15" fill="rgb(215,77,49)" fg:x="24870" fg:w="537"/><text x="69.4371%" y="174.50"></text></g><g><title>check_radar (agent.py:126) (518 samples, 1.44%)</title><rect x="70.6810%" y="164" width="1.4411%" height="15" fill="rgb(248,100,22)" fg:x="25407" fg:w="518"/><text x="70.9310%" y="174.50"></text></g><g><title>check_radar (agent.py:127) (2,338 samples, 6.50%)</title><rect x="72.1221%" y="164" width="6.5042%" height="15" fill="rgb(208,67,9)" fg:x="25925" fg:w="2338"/><text x="72.3721%" y="174.50">check_rad..</text></g><g><title>run_simulation (agent.py:553) (13,232 samples, 36.81%)</title><rect x="41.9908%" y="132" width="36.8108%" height="15" fill="rgb(219,133,21)" fg:x="15094" fg:w="13232"/><text x="42.2408%" y="142.50">run_simulation (agent.py:553)</text></g><g><title>update (agent.py:208) (12,427 samples, 34.57%)</title><rect x="44.2302%" y="148" width="34.5713%" height="15" fill="rgb(246,46,29)" fg:x="15899" fg:w="12427"/><text x="44.4802%" y="158.50">update (agent.py:208)</text></g><g><title>run_simulation (agent.py:595) (326 samples, 0.91%)</title><rect x="78.9323%" y="132" width="0.9069%" height="15" fill="rgb(246,185,52)" fg:x="28373" fg:w="326"/><text x="79.1823%" y="142.50"></text></g><g><title>run_simulation (agent.py:600) (223 samples, 0.62%)</title><rect x="79.8615%" y="132" width="0.6204%" height="15" fill="rgb(252,136,11)" fg:x="28707" fg:w="223"/><text x="80.1115%" y="142.50"></text></g><g><title>draw (agent.py:88) (223 samples, 0.62%)</title><rect x="79.8615%" y="148" width="0.6204%" height="15" fill="rgb(219,138,53)" fg:x="28707" fg:w="223"/><text x="80.1115%" y="158.50"></text></g><g><title>run_simulation (agent.py:614) (1,669 samples, 4.64%)</title><rect x="80.5458%" y="132" width="4.6431%" height="15" fill="rgb(211,51,23)" fg:x="28953" fg:w="1669"/><text x="80.7958%" y="142.50">run_s..</text></g><g><title>run (neat/population.py:89) (17,094 samples, 47.55%)</title><rect x="38.0293%" y="116" width="47.5547%" height="15" fill="rgb(247,221,28)" fg:x="13670" fg:w="17094"/><text x="38.2793%" y="126.50">run (neat/population.py:89)</text></g><g><title>run_simulation (agent.py:615) (142 samples, 0.40%)</title><rect x="85.1889%" y="132" width="0.3950%" height="15" fill="rgb(251,222,45)" fg:x="30622" fg:w="142"/><text x="85.4389%" y="142.50"></text></g><g><title>run_population (agent.py:653) (17,124 samples, 47.64%)</title><rect x="37.9486%" y="100" width="47.6381%" height="15" fill="rgb(217,162,53)" fg:x="13641" fg:w="17124"/><text x="38.1986%" y="110.50">run_population (agent.py:653)</text></g><g><title>&lt;module&gt; (main.py:86) (17,126 samples, 47.64%)</title><rect x="37.9486%" y="68" width="47.6437%" height="15" fill="rgb(229,93,14)" fg:x="13641" fg:w="17126"/><text x="38.1986%" y="78.50">&lt;module&gt; (main.py:86)</text></g><g><title>start_simulation (main.py:35) (17,126 samples, 47.64%)</title><rect x="37.9486%" y="84" width="47.6437%" height="15" fill="rgb(209,67,49)" fg:x="13641" fg:w="17126"/><text x="38.1986%" y="94.50">start_simulation (main.py:35)</text></g><g><title>&lt;module&gt; (main.py:9) (83 samples, 0.23%)</title><rect x="85.5923%" y="68" width="0.2309%" height="15" fill="rgb(213,87,29)" fg:x="30767" fg:w="83"/><text x="85.8423%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (83 samples, 0.23%)</title><rect x="85.5923%" y="84" width="0.2309%" height="15" fill="rgb(205,151,52)" fg:x="30767" fg:w="83"/><text x="85.8423%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (83 samples, 0.23%)</title><rect x="85.5923%" y="100" width="0.2309%" height="15" fill="rgb(253,215,39)" fg:x="30767" fg:w="83"/><text x="85.8423%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (83 samples, 0.23%)</title><rect x="85.5923%" y="116" width="0.2309%" height="15" fill="rgb(221,220,41)" fg:x="30767" fg:w="83"/><text x="85.8423%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (83 samples, 0.23%)</title><rect x="85.5923%" y="132" width="0.2309%" height="15" fill="rgb(218,133,21)" fg:x="30767" fg:w="83"/><text x="85.8423%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (83 samples, 0.23%)</title><rect x="85.5923%" y="148" width="0.2309%" height="15" fill="rgb(221,193,43)" fg:x="30767" fg:w="83"/><text x="85.8423%" y="158.50"></text></g><g><title>__getitem__ (reward.py:100) (88 samples, 0.24%)</title><rect x="86.1681%" y="196" width="0.2448%" height="15" fill="rgb(240,128,52)" fg:x="30974" fg:w="88"/><text x="86.4181%" y="206.50"></text></g><g><title>__getitem__ (reward.py:101) (83 samples, 0.23%)</title><rect x="86.4130%" y="196" width="0.2309%" height="15" fill="rgb(253,114,12)" fg:x="31062" fg:w="83"/><text x="86.6630%" y="206.50"></text></g><g><title>__getitem__ (reward.py:102) (76 samples, 0.21%)</title><rect x="86.6439%" y="196" width="0.2114%" height="15" fill="rgb(215,223,47)" fg:x="31145" fg:w="76"/><text x="86.8939%" y="206.50"></text></g><g><title>__getitem__ (reward.py:103) (76 samples, 0.21%)</title><rect x="86.8553%" y="196" width="0.2114%" height="15" fill="rgb(248,225,23)" fg:x="31221" fg:w="76"/><text x="87.1053%" y="206.50"></text></g><g><title>__getitem__ (reward.py:104) (109 samples, 0.30%)</title><rect x="87.0667%" y="196" width="0.3032%" height="15" fill="rgb(250,108,0)" fg:x="31297" fg:w="109"/><text x="87.3167%" y="206.50"></text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:51) (458 samples, 1.27%)</title><rect x="86.1042%" y="148" width="1.2741%" height="15" fill="rgb(228,208,7)" fg:x="30951" fg:w="458"/><text x="86.3542%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/data/_utils/fetch.py:51) (458 samples, 1.27%)</title><rect x="86.1042%" y="164" width="1.2741%" height="15" fill="rgb(244,45,10)" fg:x="30951" fg:w="458"/><text x="86.3542%" y="174.50"></text></g><g><title>__getitem__ (torch/utils/data/dataset.py:298) (442 samples, 1.23%)</title><rect x="86.1487%" y="180" width="1.2296%" height="15" fill="rgb(207,125,25)" fg:x="30967" fg:w="442"/><text x="86.3987%" y="190.50"></text></g><g><title>collate (torch/utils/data/_utils/collate.py:139) (110 samples, 0.31%)</title><rect x="87.4033%" y="180" width="0.3060%" height="15" fill="rgb(210,195,18)" fg:x="31418" fg:w="110"/><text x="87.6533%" y="190.50"></text></g><g><title>_next_data (torch/utils/data/dataloader.py:677) (773 samples, 2.15%)</title><rect x="85.9233%" y="132" width="2.1504%" height="15" fill="rgb(249,80,12)" fg:x="30886" fg:w="773"/><text x="86.1733%" y="142.50">_..</text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:54) (250 samples, 0.70%)</title><rect x="87.3783%" y="148" width="0.6955%" height="15" fill="rgb(221,65,9)" fg:x="31409" fg:w="250"/><text x="87.6283%" y="158.50"></text></g><g><title>default_collate (torch/utils/data/_utils/collate.py:265) (250 samples, 0.70%)</title><rect x="87.3783%" y="164" width="0.6955%" height="15" fill="rgb(235,49,36)" fg:x="31409" fg:w="250"/><text x="87.6283%" y="174.50"></text></g><g><title>collate (torch/utils/data/_utils/collate.py:142) (131 samples, 0.36%)</title><rect x="87.7093%" y="180" width="0.3644%" height="15" fill="rgb(225,32,20)" fg:x="31528" fg:w="131"/><text x="87.9593%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/data/_utils/collate.py:142) (131 samples, 0.36%)</title><rect x="87.7093%" y="196" width="0.3644%" height="15" fill="rgb(215,141,46)" fg:x="31528" fg:w="131"/><text x="87.9593%" y="206.50"></text></g><g><title>collate (torch/utils/data/_utils/collate.py:119) (130 samples, 0.36%)</title><rect x="87.7121%" y="212" width="0.3617%" height="15" fill="rgb(250,160,47)" fg:x="31529" fg:w="130"/><text x="87.9621%" y="222.50"></text></g><g><title>collate_tensor_fn (torch/utils/data/_utils/collate.py:162) (130 samples, 0.36%)</title><rect x="87.7121%" y="228" width="0.3617%" height="15" fill="rgb(216,222,40)" fg:x="31529" fg:w="130"/><text x="87.9621%" y="238.50"></text></g><g><title>train_model (reward.py:210) (795 samples, 2.21%)</title><rect x="85.8649%" y="100" width="2.2117%" height="15" fill="rgb(234,217,39)" fg:x="30865" fg:w="795"/><text x="86.1149%" y="110.50">t..</text></g><g><title>__next__ (torch/utils/data/dataloader.py:633) (784 samples, 2.18%)</title><rect x="85.8955%" y="116" width="2.1810%" height="15" fill="rgb(207,178,40)" fg:x="30876" fg:w="784"/><text x="86.1455%" y="126.50">_..</text></g><g><title>train_model (reward.py:217) (38 samples, 0.11%)</title><rect x="88.0793%" y="100" width="0.1057%" height="15" fill="rgb(221,136,13)" fg:x="31661" fg:w="38"/><text x="88.3293%" y="110.50"></text></g><g><title>train_model (reward.py:218) (39 samples, 0.11%)</title><rect x="88.1851%" y="100" width="0.1085%" height="15" fill="rgb(249,199,10)" fg:x="31699" fg:w="39"/><text x="88.4351%" y="110.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1538) (38 samples, 0.11%)</title><rect x="88.1878%" y="116" width="0.1057%" height="15" fill="rgb(249,222,13)" fg:x="31700" fg:w="38"/><text x="88.4378%" y="126.50"></text></g><g><title>_next_data (torch/utils/data/dataloader.py:676) (38 samples, 0.11%)</title><rect x="88.4160%" y="132" width="0.1057%" height="15" fill="rgb(244,185,38)" fg:x="31782" fg:w="38"/><text x="88.6660%" y="142.50"></text></g><g><title>_next_index (torch/utils/data/dataloader.py:623) (38 samples, 0.11%)</title><rect x="88.4160%" y="148" width="0.1057%" height="15" fill="rgb(236,202,9)" fg:x="31782" fg:w="38"/><text x="88.6660%" y="158.50"></text></g><g><title>__getitem__ (reward.py:100) (388 samples, 1.08%)</title><rect x="89.4842%" y="196" width="1.0794%" height="15" fill="rgb(250,229,37)" fg:x="32166" fg:w="388"/><text x="89.7342%" y="206.50"></text></g><g><title>__getitem__ (reward.py:101) (330 samples, 0.92%)</title><rect x="90.5636%" y="196" width="0.9180%" height="15" fill="rgb(206,174,23)" fg:x="32554" fg:w="330"/><text x="90.8136%" y="206.50"></text></g><g><title>__getitem__ (reward.py:102) (317 samples, 0.88%)</title><rect x="91.4817%" y="196" width="0.8819%" height="15" fill="rgb(211,33,43)" fg:x="32884" fg:w="317"/><text x="91.7317%" y="206.50"></text></g><g><title>__getitem__ (reward.py:103) (381 samples, 1.06%)</title><rect x="92.3635%" y="196" width="1.0599%" height="15" fill="rgb(245,58,50)" fg:x="33201" fg:w="381"/><text x="92.6135%" y="206.50"></text></g><g><title>__getitem__ (reward.py:104) (979 samples, 2.72%)</title><rect x="93.4235%" y="196" width="2.7235%" height="15" fill="rgb(244,68,36)" fg:x="33582" fg:w="979"/><text x="93.6735%" y="206.50">__..</text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:51) (2,500 samples, 6.95%)</title><rect x="89.2255%" y="148" width="6.9549%" height="15" fill="rgb(232,229,15)" fg:x="32073" fg:w="2500"/><text x="89.4755%" y="158.50">fetch (to..</text></g><g><title>&lt;listcomp&gt; (torch/utils/data/_utils/fetch.py:51) (2,498 samples, 6.95%)</title><rect x="89.2311%" y="164" width="6.9493%" height="15" fill="rgb(254,30,23)" fg:x="32075" fg:w="2498"/><text x="89.4811%" y="174.50">&lt;listcomp..</text></g><g><title>__getitem__ (torch/utils/data/dataset.py:298) (2,438 samples, 6.78%)</title><rect x="89.3980%" y="180" width="6.7824%" height="15" fill="rgb(235,160,14)" fg:x="32135" fg:w="2438"/><text x="89.6480%" y="190.50">__getitem..</text></g><g><title>collate (torch/utils/data/_utils/collate.py:139) (66 samples, 0.18%)</title><rect x="96.2277%" y="180" width="0.1836%" height="15" fill="rgb(212,155,44)" fg:x="34590" fg:w="66"/><text x="96.4777%" y="190.50"></text></g><g><title>train_model (reward.py:238) (3,364 samples, 9.36%)</title><rect x="88.3826%" y="100" width="9.3585%" height="15" fill="rgb(226,2,50)" fg:x="31770" fg:w="3364"/><text x="88.6326%" y="110.50">train_model (..</text></g><g><title>__next__ (torch/utils/data/dataloader.py:633) (3,352 samples, 9.33%)</title><rect x="88.4160%" y="116" width="9.3251%" height="15" fill="rgb(234,177,6)" fg:x="31782" fg:w="3352"/><text x="88.6660%" y="126.50">__next__ (tor..</text></g><g><title>_next_data (torch/utils/data/dataloader.py:677) (3,314 samples, 9.22%)</title><rect x="88.5217%" y="132" width="9.2194%" height="15" fill="rgb(217,24,9)" fg:x="31820" fg:w="3314"/><text x="88.7717%" y="142.50">_next_data (t..</text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:54) (561 samples, 1.56%)</title><rect x="96.1804%" y="148" width="1.5607%" height="15" fill="rgb(220,13,46)" fg:x="34573" fg:w="561"/><text x="96.4304%" y="158.50"></text></g><g><title>default_collate (torch/utils/data/_utils/collate.py:265) (561 samples, 1.56%)</title><rect x="96.1804%" y="164" width="1.5607%" height="15" fill="rgb(239,221,27)" fg:x="34573" fg:w="561"/><text x="96.4304%" y="174.50"></text></g><g><title>collate (torch/utils/data/_utils/collate.py:142) (478 samples, 1.33%)</title><rect x="96.4113%" y="180" width="1.3298%" height="15" fill="rgb(222,198,25)" fg:x="34656" fg:w="478"/><text x="96.6613%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/data/_utils/collate.py:142) (478 samples, 1.33%)</title><rect x="96.4113%" y="196" width="1.3298%" height="15" fill="rgb(211,99,13)" fg:x="34656" fg:w="478"/><text x="96.6613%" y="206.50"></text></g><g><title>collate (torch/utils/data/_utils/collate.py:119) (478 samples, 1.33%)</title><rect x="96.4113%" y="212" width="1.3298%" height="15" fill="rgb(232,111,31)" fg:x="34656" fg:w="478"/><text x="96.6613%" y="222.50"></text></g><g><title>collate_tensor_fn (torch/utils/data/_utils/collate.py:162) (475 samples, 1.32%)</title><rect x="96.4196%" y="228" width="1.3214%" height="15" fill="rgb(245,82,37)" fg:x="34659" fg:w="475"/><text x="96.6696%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1501) (39 samples, 0.11%)</title><rect x="97.7550%" y="148" width="0.1085%" height="15" fill="rgb(227,149,46)" fg:x="35139" fg:w="39"/><text x="98.0050%" y="158.50"></text></g><g><title>forward (reward.py:52) (46 samples, 0.13%)</title><rect x="97.7466%" y="132" width="0.1280%" height="15" fill="rgb(218,36,50)" fg:x="35136" fg:w="46"/><text x="97.9966%" y="142.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1538) (145 samples, 0.40%)</title><rect x="97.7466%" y="116" width="0.4034%" height="15" fill="rgb(226,80,48)" fg:x="35136" fg:w="145"/><text x="97.9966%" y="126.50"></text></g><g><title>train_model (reward.py:247) (147 samples, 0.41%)</title><rect x="97.7438%" y="100" width="0.4089%" height="15" fill="rgb(238,224,15)" fg:x="35135" fg:w="147"/><text x="97.9938%" y="110.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1538) (110 samples, 0.31%)</title><rect x="98.1556%" y="116" width="0.3060%" height="15" fill="rgb(241,136,10)" fg:x="35283" fg:w="110"/><text x="98.4056%" y="126.50"></text></g><g><title>train_model (reward.py:248) (124 samples, 0.34%)</title><rect x="98.1528%" y="100" width="0.3450%" height="15" fill="rgb(208,32,45)" fg:x="35282" fg:w="124"/><text x="98.4028%" y="110.50"></text></g><g><title>train_model (reward.py:267) (388 samples, 1.08%)</title><rect x="98.7759%" y="100" width="1.0794%" height="15" fill="rgb(207,135,9)" fg:x="35506" fg:w="388"/><text x="99.0259%" y="110.50"></text></g><g><title>backward (torch/_tensor.py:487) (388 samples, 1.08%)</title><rect x="98.7759%" y="116" width="1.0794%" height="15" fill="rgb(206,86,44)" fg:x="35506" fg:w="388"/><text x="99.0259%" y="126.50"></text></g><g><title>backward (torch/autograd/__init__.py:200) (379 samples, 1.05%)</title><rect x="98.8010%" y="132" width="1.0544%" height="15" fill="rgb(245,177,15)" fg:x="35515" fg:w="379"/><text x="99.0510%" y="142.50"></text></g><g><title>&lt;module&gt; (main.py:97) (5,088 samples, 14.15%)</title><rect x="85.8232%" y="68" width="14.1546%" height="15" fill="rgb(206,64,50)" fg:x="30850" fg:w="5088"/><text x="86.0732%" y="78.50">&lt;module&gt; (main.py:97)</text></g><g><title>train_reward_function (reward.py:374) (5,078 samples, 14.13%)</title><rect x="85.8510%" y="84" width="14.1267%" height="15" fill="rgb(234,36,40)" fg:x="30860" fg:w="5078"/><text x="86.1010%" y="94.50">train_reward_function..</text></g><g><title>all (35,946 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="35946"/><text x="0.2500%" y="62.50"></text></g></svg></svg>