<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1242" onload="init(evt)" viewBox="0 0 1200 1242" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1242" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">/Users/alextang/.pyenv/versions/nocturne_lab/bin/py-spy record -o profile.svg -- python main.py -t 200 -e 1000 -g 10 --headless -p /Users/alextang/Documents/EmergeLab/ai-car-preference-learning/best_params.yaml</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1231.00"> </text><svg id="frames" x="10" width="1180" total_samples="19654"><g><title>run_simulation (agent.py:301) (388 samples, 1.97%)</title><rect x="0.1628%" y="132" width="1.9742%" height="15" fill="rgb(227,0,7)" fg:x="32" fg:w="388"/><text x="0.4128%" y="142.50">r..</text></g><g><title>__init__ (agent.py:55) (388 samples, 1.97%)</title><rect x="0.1628%" y="148" width="1.9742%" height="15" fill="rgb(217,0,24)" fg:x="32" fg:w="388"/><text x="0.4128%" y="158.50">_..</text></g><g><title>activate (neat/nn/feed_forward.py:22) (65 samples, 0.33%)</title><rect x="2.4677%" y="148" width="0.3307%" height="15" fill="rgb(221,193,54)" fg:x="485" fg:w="65"/><text x="2.7177%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:23) (22 samples, 0.11%)</title><rect x="2.7984%" y="148" width="0.1119%" height="15" fill="rgb(248,212,6)" fg:x="550" fg:w="22"/><text x="3.0484%" y="158.50"></text></g><g><title>tanh_activation (neat/activations.py:17) (41 samples, 0.21%)</title><rect x="2.9918%" y="164" width="0.2086%" height="15" fill="rgb(208,68,35)" fg:x="588" fg:w="41"/><text x="3.2418%" y="174.50"></text></g><g><title>activate (neat/nn/feed_forward.py:24) (66 samples, 0.34%)</title><rect x="2.9103%" y="148" width="0.3358%" height="15" fill="rgb(232,128,0)" fg:x="572" fg:w="66"/><text x="3.1603%" y="158.50"></text></g><g><title>run_simulation (agent.py:324) (262 samples, 1.33%)</title><rect x="2.1675%" y="132" width="1.3331%" height="15" fill="rgb(207,160,47)" fg:x="426" fg:w="262"/><text x="2.4175%" y="142.50"></text></g><g><title>get_data (agent.py:194) (20 samples, 0.10%)</title><rect x="3.3988%" y="148" width="0.1018%" height="15" fill="rgb(228,23,34)" fg:x="668" fg:w="20"/><text x="3.6488%" y="158.50"></text></g><g><title>rotate_center (agent.py:214) (22 samples, 0.11%)</title><rect x="3.6328%" y="164" width="0.1119%" height="15" fill="rgb(218,30,26)" fg:x="714" fg:w="22"/><text x="3.8828%" y="174.50"></text></g><g><title>update (agent.py:138) (38 samples, 0.19%)</title><rect x="3.6176%" y="148" width="0.1933%" height="15" fill="rgb(220,122,19)" fg:x="711" fg:w="38"/><text x="3.8676%" y="158.50"></text></g><g><title>check_radar (agent.py:112) (673 samples, 3.42%)</title><rect x="4.0195%" y="164" width="3.4242%" height="15" fill="rgb(250,228,42)" fg:x="790" fg:w="673"/><text x="4.2695%" y="174.50">che..</text></g><g><title>check_radar (agent.py:113) (38 samples, 0.19%)</title><rect x="7.4438%" y="164" width="0.1933%" height="15" fill="rgb(240,193,28)" fg:x="1463" fg:w="38"/><text x="7.6938%" y="174.50"></text></g><g><title>check_radar (agent.py:114) (110 samples, 0.56%)</title><rect x="7.6371%" y="164" width="0.5597%" height="15" fill="rgb(216,20,37)" fg:x="1501" fg:w="110"/><text x="7.8871%" y="174.50"></text></g><g><title>check_radar (agent.py:115) (62 samples, 0.32%)</title><rect x="8.1968%" y="164" width="0.3155%" height="15" fill="rgb(206,188,39)" fg:x="1611" fg:w="62"/><text x="8.4468%" y="174.50"></text></g><g><title>check_radar (agent.py:116) (357 samples, 1.82%)</title><rect x="8.5123%" y="164" width="1.8164%" height="15" fill="rgb(217,207,13)" fg:x="1673" fg:w="357"/><text x="8.7623%" y="174.50">c..</text></g><g><title>check_radar (agent.py:118) (121 samples, 0.62%)</title><rect x="10.3287%" y="164" width="0.6157%" height="15" fill="rgb(231,73,38)" fg:x="2030" fg:w="121"/><text x="10.5787%" y="174.50"></text></g><g><title>check_radar (agent.py:119) (59 samples, 0.30%)</title><rect x="10.9443%" y="164" width="0.3002%" height="15" fill="rgb(225,20,46)" fg:x="2151" fg:w="59"/><text x="11.1943%" y="174.50"></text></g><g><title>check_radar (agent.py:120) (319 samples, 1.62%)</title><rect x="11.2445%" y="164" width="1.6231%" height="15" fill="rgb(210,31,41)" fg:x="2210" fg:w="319"/><text x="11.4945%" y="174.50"></text></g><g><title>update (agent.py:185) (1,762 samples, 8.97%)</title><rect x="3.9432%" y="148" width="8.9651%" height="15" fill="rgb(221,200,47)" fg:x="775" fg:w="1762"/><text x="4.1932%" y="158.50">update (agent..</text></g><g><title>run_simulation (agent.py:343) (1,827 samples, 9.30%)</title><rect x="3.6176%" y="132" width="9.2958%" height="15" fill="rgb(226,26,5)" fg:x="711" fg:w="1827"/><text x="3.8676%" y="142.50">run_simulatio..</text></g><g><title>run (neat/population.py:89) (2,514 samples, 12.79%)</title><rect x="0.1323%" y="116" width="12.7913%" height="15" fill="rgb(249,33,26)" fg:x="26" fg:w="2514"/><text x="0.3823%" y="126.50">run (neat/populatio..</text></g><g><title>&lt;module&gt; (main.py:187) (2,541 samples, 12.93%)</title><rect x="0.0000%" y="68" width="12.9287%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="2541"/><text x="0.2500%" y="78.50">&lt;module&gt; (main.py:1..</text></g><g><title>start_simulation (main.py:27) (2,541 samples, 12.93%)</title><rect x="0.0000%" y="84" width="12.9287%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="2541"/><text x="0.2500%" y="94.50">start_simulation (m..</text></g><g><title>run_population (agent.py:432) (2,531 samples, 12.88%)</title><rect x="0.0509%" y="100" width="12.8778%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="2531"/><text x="0.3009%" y="110.50">run_population (age..</text></g><g><title>&lt;module&gt; (torch/_dynamo/allowed_functions.py:30) (27 samples, 0.14%)</title><rect x="12.9287%" y="356" width="0.1374%" height="15" fill="rgb(241,131,45)" fg:x="2541" fg:w="27"/><text x="13.1787%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (27 samples, 0.14%)</title><rect x="12.9287%" y="372" width="0.1374%" height="15" fill="rgb(249,31,29)" fg:x="2541" fg:w="27"/><text x="13.1787%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (27 samples, 0.14%)</title><rect x="12.9287%" y="388" width="0.1374%" height="15" fill="rgb(225,111,53)" fg:x="2541" fg:w="27"/><text x="13.1787%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (27 samples, 0.14%)</title><rect x="12.9287%" y="404" width="0.1374%" height="15" fill="rgb(238,160,17)" fg:x="2541" fg:w="27"/><text x="13.1787%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (27 samples, 0.14%)</title><rect x="12.9287%" y="420" width="0.1374%" height="15" fill="rgb(214,148,48)" fg:x="2541" fg:w="27"/><text x="13.1787%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (27 samples, 0.14%)</title><rect x="12.9287%" y="436" width="0.1374%" height="15" fill="rgb(232,36,49)" fg:x="2541" fg:w="27"/><text x="13.1787%" y="446.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/utils.py:89) (26 samples, 0.13%)</title><rect x="12.9338%" y="452" width="0.1323%" height="15" fill="rgb(209,103,24)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (26 samples, 0.13%)</title><rect x="12.9338%" y="468" width="0.1323%" height="15" fill="rgb(229,88,8)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (26 samples, 0.13%)</title><rect x="12.9338%" y="484" width="0.1323%" height="15" fill="rgb(213,181,19)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (26 samples, 0.13%)</title><rect x="12.9338%" y="500" width="0.1323%" height="15" fill="rgb(254,191,54)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (26 samples, 0.13%)</title><rect x="12.9338%" y="516" width="0.1323%" height="15" fill="rgb(241,83,37)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (26 samples, 0.13%)</title><rect x="12.9338%" y="532" width="0.1323%" height="15" fill="rgb(233,36,39)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="542.50"></text></g><g><title>&lt;module&gt; (torch/fx/experimental/symbolic_shapes.py:38) (26 samples, 0.13%)</title><rect x="12.9338%" y="548" width="0.1323%" height="15" fill="rgb(226,3,54)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (26 samples, 0.13%)</title><rect x="12.9338%" y="564" width="0.1323%" height="15" fill="rgb(245,192,40)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (26 samples, 0.13%)</title><rect x="12.9338%" y="580" width="0.1323%" height="15" fill="rgb(238,167,29)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (26 samples, 0.13%)</title><rect x="12.9338%" y="596" width="0.1323%" height="15" fill="rgb(232,182,51)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (26 samples, 0.13%)</title><rect x="12.9338%" y="612" width="0.1323%" height="15" fill="rgb(231,60,39)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (26 samples, 0.13%)</title><rect x="12.9338%" y="628" width="0.1323%" height="15" fill="rgb(208,69,12)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="638.50"></text></g><g><title>&lt;module&gt; (torch/utils/_sympy/functions.py:1) (26 samples, 0.13%)</title><rect x="12.9338%" y="644" width="0.1323%" height="15" fill="rgb(235,93,37)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (26 samples, 0.13%)</title><rect x="12.9338%" y="660" width="0.1323%" height="15" fill="rgb(213,116,39)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (26 samples, 0.13%)</title><rect x="12.9338%" y="676" width="0.1323%" height="15" fill="rgb(222,207,29)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (26 samples, 0.13%)</title><rect x="12.9338%" y="692" width="0.1323%" height="15" fill="rgb(206,96,30)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (26 samples, 0.13%)</title><rect x="12.9338%" y="708" width="0.1323%" height="15" fill="rgb(218,138,4)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (26 samples, 0.13%)</title><rect x="12.9338%" y="724" width="0.1323%" height="15" fill="rgb(250,191,14)" fg:x="2542" fg:w="26"/><text x="13.1838%" y="734.50"></text></g><g><title>train_reward_function (reward.py:422) (52 samples, 0.26%)</title><rect x="12.9287%" y="84" width="0.2646%" height="15" fill="rgb(239,60,40)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="94.50"></text></g><g><title>__init__ (torch/optim/adam.py:45) (52 samples, 0.26%)</title><rect x="12.9287%" y="100" width="0.2646%" height="15" fill="rgb(206,27,48)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="110.50"></text></g><g><title>__init__ (torch/optim/optimizer.py:278) (52 samples, 0.26%)</title><rect x="12.9287%" y="116" width="0.2646%" height="15" fill="rgb(225,35,8)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="126.50"></text></g><g><title>inner (torch/_compile.py:22) (52 samples, 0.26%)</title><rect x="12.9287%" y="132" width="0.2646%" height="15" fill="rgb(250,213,24)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (52 samples, 0.26%)</title><rect x="12.9287%" y="148" width="0.2646%" height="15" fill="rgb(247,123,22)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (52 samples, 0.26%)</title><rect x="12.9287%" y="164" width="0.2646%" height="15" fill="rgb(231,138,38)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (52 samples, 0.26%)</title><rect x="12.9287%" y="180" width="0.2646%" height="15" fill="rgb(231,145,46)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (52 samples, 0.26%)</title><rect x="12.9287%" y="196" width="0.2646%" height="15" fill="rgb(251,118,11)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (52 samples, 0.26%)</title><rect x="12.9287%" y="212" width="0.2646%" height="15" fill="rgb(217,147,25)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="222.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:2) (52 samples, 0.26%)</title><rect x="12.9287%" y="228" width="0.2646%" height="15" fill="rgb(247,81,37)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (52 samples, 0.26%)</title><rect x="12.9287%" y="244" width="0.2646%" height="15" fill="rgb(209,12,38)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (52 samples, 0.26%)</title><rect x="12.9287%" y="260" width="0.2646%" height="15" fill="rgb(227,1,9)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (52 samples, 0.26%)</title><rect x="12.9287%" y="276" width="0.2646%" height="15" fill="rgb(248,47,43)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (52 samples, 0.26%)</title><rect x="12.9287%" y="292" width="0.2646%" height="15" fill="rgb(221,10,30)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (52 samples, 0.26%)</title><rect x="12.9287%" y="308" width="0.2646%" height="15" fill="rgb(210,229,1)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (52 samples, 0.26%)</title><rect x="12.9287%" y="324" width="0.2646%" height="15" fill="rgb(222,148,37)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (52 samples, 0.26%)</title><rect x="12.9287%" y="340" width="0.2646%" height="15" fill="rgb(234,67,33)" fg:x="2541" fg:w="52"/><text x="13.1787%" y="350.50"></text></g><g><title>train_model (reward.py:164) (23 samples, 0.12%)</title><rect x="13.1932%" y="100" width="0.1170%" height="15" fill="rgb(247,98,35)" fg:x="2593" fg:w="23"/><text x="13.4432%" y="110.50"></text></g><g><title>__next__ (torch/utils/data/dataloader.py:627) (21 samples, 0.11%)</title><rect x="13.3866%" y="116" width="0.1068%" height="15" fill="rgb(247,138,52)" fg:x="2631" fg:w="21"/><text x="13.6366%" y="126.50"></text></g><g><title>prepare_single_trajectory (reward.py:146) (235 samples, 1.20%)</title><rect x="13.8903%" y="212" width="1.1957%" height="15" fill="rgb(213,79,30)" fg:x="2730" fg:w="235"/><text x="14.1403%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (reward.py:146) (232 samples, 1.18%)</title><rect x="13.9056%" y="228" width="1.1804%" height="15" fill="rgb(246,177,23)" fg:x="2733" fg:w="232"/><text x="14.1556%" y="238.50"></text></g><g><title>__getitem__ (reward.py:66) (763 samples, 3.88%)</title><rect x="13.6970%" y="196" width="3.8822%" height="15" fill="rgb(230,62,27)" fg:x="2692" fg:w="763"/><text x="13.9470%" y="206.50">__ge..</text></g><g><title>prepare_single_trajectory (reward.py:149) (490 samples, 2.49%)</title><rect x="15.0860%" y="212" width="2.4931%" height="15" fill="rgb(216,154,8)" fg:x="2965" fg:w="490"/><text x="15.3360%" y="222.50">pr..</text></g><g><title>prepare_single_trajectory (reward.py:146) (256 samples, 1.30%)</title><rect x="17.7470%" y="212" width="1.3025%" height="15" fill="rgb(244,35,45)" fg:x="3488" fg:w="256"/><text x="17.9970%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (reward.py:146) (254 samples, 1.29%)</title><rect x="17.7572%" y="228" width="1.2924%" height="15" fill="rgb(251,115,12)" fg:x="3490" fg:w="254"/><text x="18.0072%" y="238.50"></text></g><g><title>__getitem__ (reward.py:67) (829 samples, 4.22%)</title><rect x="17.5791%" y="196" width="4.2180%" height="15" fill="rgb(240,54,50)" fg:x="3455" fg:w="829"/><text x="17.8291%" y="206.50">__get..</text></g><g><title>prepare_single_trajectory (reward.py:149) (540 samples, 2.75%)</title><rect x="19.0496%" y="212" width="2.7475%" height="15" fill="rgb(233,84,52)" fg:x="3744" fg:w="540"/><text x="19.2996%" y="222.50">pr..</text></g><g><title>__getitem__ (reward.py:68) (64 samples, 0.33%)</title><rect x="21.7971%" y="196" width="0.3256%" height="15" fill="rgb(207,117,47)" fg:x="4284" fg:w="64"/><text x="22.0471%" y="206.50"></text></g><g><title>__getitem__ (reward.py:69) (33 samples, 0.17%)</title><rect x="22.1227%" y="196" width="0.1679%" height="15" fill="rgb(249,43,39)" fg:x="4348" fg:w="33"/><text x="22.3727%" y="206.50"></text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:49) (1,735 samples, 8.83%)</title><rect x="13.6563%" y="148" width="8.8277%" height="15" fill="rgb(209,38,44)" fg:x="2684" fg:w="1735"/><text x="13.9063%" y="158.50">fetch (torch..</text></g><g><title>__getitems__ (torch/utils/data/dataset.py:399) (1,734 samples, 8.82%)</title><rect x="13.6613%" y="164" width="8.8226%" height="15" fill="rgb(236,212,23)" fg:x="2685" fg:w="1734"/><text x="13.9113%" y="174.50">__getitems__..</text></g><g><title>&lt;listcomp&gt; (torch/utils/data/dataset.py:399) (1,734 samples, 8.82%)</title><rect x="13.6613%" y="180" width="8.8226%" height="15" fill="rgb(242,79,21)" fg:x="2685" fg:w="1734"/><text x="13.9113%" y="190.50">&lt;listcomp&gt; (..</text></g><g><title>__getitem__ (reward.py:70) (38 samples, 0.19%)</title><rect x="22.2906%" y="196" width="0.1933%" height="15" fill="rgb(211,96,35)" fg:x="4381" fg:w="38"/><text x="22.5406%" y="206.50"></text></g><g><title>_next_data (torch/utils/data/dataloader.py:675) (1,781 samples, 9.06%)</title><rect x="13.5596%" y="132" width="9.0618%" height="15" fill="rgb(253,215,40)" fg:x="2665" fg:w="1781"/><text x="13.8096%" y="142.50">_next_data (t..</text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:54) (27 samples, 0.14%)</title><rect x="22.4840%" y="148" width="0.1374%" height="15" fill="rgb(211,81,21)" fg:x="4419" fg:w="27"/><text x="22.7340%" y="158.50"></text></g><g><title>default_collate (torch/utils/data/_utils/collate.py:277) (27 samples, 0.14%)</title><rect x="22.4840%" y="164" width="0.1374%" height="15" fill="rgb(208,190,38)" fg:x="4419" fg:w="27"/><text x="22.7340%" y="174.50"></text></g><g><title>collate (torch/utils/data/_utils/collate.py:144) (22 samples, 0.11%)</title><rect x="22.5094%" y="180" width="0.1119%" height="15" fill="rgb(235,213,38)" fg:x="4424" fg:w="22"/><text x="22.7594%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/data/_utils/collate.py:144) (22 samples, 0.11%)</title><rect x="22.5094%" y="196" width="0.1119%" height="15" fill="rgb(237,122,38)" fg:x="4424" fg:w="22"/><text x="22.7594%" y="206.50"></text></g><g><title>collate (torch/utils/data/_utils/collate.py:121) (22 samples, 0.11%)</title><rect x="22.5094%" y="212" width="0.1119%" height="15" fill="rgb(244,218,35)" fg:x="4424" fg:w="22"/><text x="22.7594%" y="222.50"></text></g><g><title>collate_tensor_fn (torch/utils/data/_utils/collate.py:174) (20 samples, 0.10%)</title><rect x="22.5196%" y="228" width="0.1018%" height="15" fill="rgb(240,68,47)" fg:x="4426" fg:w="20"/><text x="22.7696%" y="238.50"></text></g><g><title>train_model (reward.py:232) (1,828 samples, 9.30%)</title><rect x="13.3255%" y="100" width="9.3009%" height="15" fill="rgb(210,16,53)" fg:x="2619" fg:w="1828"/><text x="13.5755%" y="110.50">train_model (..</text></g><g><title>__next__ (torch/utils/data/dataloader.py:631) (1,795 samples, 9.13%)</title><rect x="13.4934%" y="116" width="9.1330%" height="15" fill="rgb(235,124,12)" fg:x="2652" fg:w="1795"/><text x="13.7434%" y="126.50">__next__ (tor..</text></g><g><title>forward (torch/nn/modules/linear.py:116) (158 samples, 0.80%)</title><rect x="22.6977%" y="196" width="0.8039%" height="15" fill="rgb(224,169,11)" fg:x="4461" fg:w="158"/><text x="22.9477%" y="206.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:201) (28 samples, 0.14%)</title><rect x="23.5016%" y="196" width="0.1425%" height="15" fill="rgb(250,166,2)" fg:x="4619" fg:w="28"/><text x="23.7516%" y="206.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2546) (27 samples, 0.14%)</title><rect x="23.5067%" y="212" width="0.1374%" height="15" fill="rgb(242,216,29)" fg:x="4620" fg:w="27"/><text x="23.7567%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (192 samples, 0.98%)</title><rect x="22.6926%" y="164" width="0.9769%" height="15" fill="rgb(230,116,27)" fg:x="4460" fg:w="192"/><text x="22.9426%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (191 samples, 0.97%)</title><rect x="22.6977%" y="180" width="0.9718%" height="15" fill="rgb(228,99,48)" fg:x="4461" fg:w="191"/><text x="22.9477%" y="190.50"></text></g><g><title>forward (reward.py:45) (199 samples, 1.01%)</title><rect x="22.6671%" y="148" width="1.0125%" height="15" fill="rgb(253,11,6)" fg:x="4455" fg:w="199"/><text x="22.9171%" y="158.50"></text></g><g><title>forward (reward.py:46) (32 samples, 0.16%)</title><rect x="23.6797%" y="148" width="0.1628%" height="15" fill="rgb(247,143,39)" fg:x="4654" fg:w="32"/><text x="23.9297%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (30 samples, 0.15%)</title><rect x="23.6898%" y="164" width="0.1526%" height="15" fill="rgb(236,97,10)" fg:x="4656" fg:w="30"/><text x="23.9398%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (28 samples, 0.14%)</title><rect x="23.7000%" y="180" width="0.1425%" height="15" fill="rgb(233,208,19)" fg:x="4658" fg:w="28"/><text x="23.9500%" y="190.50"></text></g><g><title>forward (torch/nn/modules/dropout.py:59) (27 samples, 0.14%)</title><rect x="23.7051%" y="196" width="0.1374%" height="15" fill="rgb(216,164,2)" fg:x="4659" fg:w="27"/><text x="23.9551%" y="206.50"></text></g><g><title>dropout (torch/nn/functional.py:1268) (25 samples, 0.13%)</title><rect x="23.7153%" y="212" width="0.1272%" height="15" fill="rgb(220,129,5)" fg:x="4661" fg:w="25"/><text x="23.9653%" y="222.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (97 samples, 0.49%)</title><rect x="23.8527%" y="196" width="0.4935%" height="15" fill="rgb(242,17,10)" fg:x="4688" fg:w="97"/><text x="24.1027%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (111 samples, 0.56%)</title><rect x="23.8476%" y="164" width="0.5648%" height="15" fill="rgb(242,107,0)" fg:x="4687" fg:w="111"/><text x="24.0976%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (110 samples, 0.56%)</title><rect x="23.8527%" y="180" width="0.5597%" height="15" fill="rgb(251,28,31)" fg:x="4688" fg:w="110"/><text x="24.1027%" y="190.50"></text></g><g><title>forward (reward.py:47) (114 samples, 0.58%)</title><rect x="23.8425%" y="148" width="0.5800%" height="15" fill="rgb(233,223,10)" fg:x="4686" fg:w="114"/><text x="24.0925%" y="158.50"></text></g><g><title>forward (reward.py:48) (23 samples, 0.12%)</title><rect x="24.4225%" y="148" width="0.1170%" height="15" fill="rgb(215,21,27)" fg:x="4800" fg:w="23"/><text x="24.6725%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (22 samples, 0.11%)</title><rect x="24.4276%" y="164" width="0.1119%" height="15" fill="rgb(232,23,21)" fg:x="4801" fg:w="22"/><text x="24.6776%" y="174.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (53 samples, 0.27%)</title><rect x="24.5802%" y="196" width="0.2697%" height="15" fill="rgb(244,5,23)" fg:x="4831" fg:w="53"/><text x="24.8302%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (70 samples, 0.36%)</title><rect x="24.5497%" y="164" width="0.3562%" height="15" fill="rgb(226,81,46)" fg:x="4825" fg:w="70"/><text x="24.7997%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (65 samples, 0.33%)</title><rect x="24.5752%" y="180" width="0.3307%" height="15" fill="rgb(247,70,30)" fg:x="4830" fg:w="65"/><text x="24.8252%" y="190.50"></text></g><g><title>forward (reward.py:49) (73 samples, 0.37%)</title><rect x="24.5395%" y="148" width="0.3714%" height="15" fill="rgb(212,68,19)" fg:x="4823" fg:w="73"/><text x="24.7895%" y="158.50"></text></g><g><title>forward (reward.py:50) (20 samples, 0.10%)</title><rect x="24.9110%" y="148" width="0.1018%" height="15" fill="rgb(240,187,13)" fg:x="4896" fg:w="20"/><text x="25.1610%" y="158.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (36 samples, 0.18%)</title><rect x="25.0483%" y="196" width="0.1832%" height="15" fill="rgb(223,113,26)" fg:x="4923" fg:w="36"/><text x="25.2983%" y="206.50"></text></g><g><title>forward (reward.py:51) (63 samples, 0.32%)</title><rect x="25.0127%" y="148" width="0.3205%" height="15" fill="rgb(206,192,2)" fg:x="4916" fg:w="63"/><text x="25.2627%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (59 samples, 0.30%)</title><rect x="25.0331%" y="164" width="0.3002%" height="15" fill="rgb(241,108,4)" fg:x="4920" fg:w="59"/><text x="25.2831%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (57 samples, 0.29%)</title><rect x="25.0432%" y="180" width="0.2900%" height="15" fill="rgb(247,173,49)" fg:x="4922" fg:w="57"/><text x="25.2932%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1561) (537 samples, 2.73%)</title><rect x="22.6671%" y="132" width="2.7323%" height="15" fill="rgb(224,114,35)" fg:x="4455" fg:w="537"/><text x="22.9171%" y="142.50">_c..</text></g><g><title>train_model (reward.py:239) (547 samples, 2.78%)</title><rect x="22.6315%" y="100" width="2.7831%" height="15" fill="rgb(245,159,27)" fg:x="4448" fg:w="547"/><text x="22.8815%" y="110.50">tr..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (543 samples, 2.76%)</title><rect x="22.6519%" y="116" width="2.7628%" height="15" fill="rgb(245,172,44)" fg:x="4452" fg:w="543"/><text x="22.9019%" y="126.50">_w..</text></g><g><title>forward (torch/nn/modules/linear.py:116) (126 samples, 0.64%)</title><rect x="25.4503%" y="196" width="0.6411%" height="15" fill="rgb(236,23,11)" fg:x="5002" fg:w="126"/><text x="25.7003%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (148 samples, 0.75%)</title><rect x="25.4350%" y="164" width="0.7530%" height="15" fill="rgb(205,117,38)" fg:x="4999" fg:w="148"/><text x="25.6850%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (145 samples, 0.74%)</title><rect x="25.4503%" y="180" width="0.7378%" height="15" fill="rgb(237,72,25)" fg:x="5002" fg:w="145"/><text x="25.7003%" y="190.50"></text></g><g><title>forward (reward.py:45) (154 samples, 0.78%)</title><rect x="25.4147%" y="148" width="0.7836%" height="15" fill="rgb(244,70,9)" fg:x="4995" fg:w="154"/><text x="25.6647%" y="158.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (92 samples, 0.47%)</title><rect x="26.2796%" y="196" width="0.4681%" height="15" fill="rgb(217,125,39)" fg:x="5165" fg:w="92"/><text x="26.5296%" y="206.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:201) (23 samples, 0.12%)</title><rect x="26.7477%" y="196" width="0.1170%" height="15" fill="rgb(235,36,10)" fg:x="5257" fg:w="23"/><text x="26.9977%" y="206.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2546) (22 samples, 0.11%)</title><rect x="26.7528%" y="212" width="0.1119%" height="15" fill="rgb(251,123,47)" fg:x="5258" fg:w="22"/><text x="27.0028%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (118 samples, 0.60%)</title><rect x="26.2745%" y="164" width="0.6004%" height="15" fill="rgb(221,13,13)" fg:x="5164" fg:w="118"/><text x="26.5245%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (118 samples, 0.60%)</title><rect x="26.2745%" y="180" width="0.6004%" height="15" fill="rgb(238,131,9)" fg:x="5164" fg:w="118"/><text x="26.5245%" y="190.50"></text></g><g><title>forward (reward.py:47) (127 samples, 0.65%)</title><rect x="26.2440%" y="148" width="0.6462%" height="15" fill="rgb(211,50,8)" fg:x="5158" fg:w="127"/><text x="26.4940%" y="158.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (77 samples, 0.39%)</title><rect x="26.9818%" y="196" width="0.3918%" height="15" fill="rgb(245,182,24)" fg:x="5303" fg:w="77"/><text x="27.2318%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (103 samples, 0.52%)</title><rect x="26.9818%" y="164" width="0.5241%" height="15" fill="rgb(242,14,37)" fg:x="5303" fg:w="103"/><text x="27.2318%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (103 samples, 0.52%)</title><rect x="26.9818%" y="180" width="0.5241%" height="15" fill="rgb(246,228,12)" fg:x="5303" fg:w="103"/><text x="27.2318%" y="190.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:201) (26 samples, 0.13%)</title><rect x="27.3736%" y="196" width="0.1323%" height="15" fill="rgb(213,55,15)" fg:x="5380" fg:w="26"/><text x="27.6236%" y="206.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2546) (26 samples, 0.13%)</title><rect x="27.3736%" y="212" width="0.1323%" height="15" fill="rgb(209,9,3)" fg:x="5380" fg:w="26"/><text x="27.6236%" y="222.50"></text></g><g><title>forward (reward.py:49) (106 samples, 0.54%)</title><rect x="26.9818%" y="148" width="0.5393%" height="15" fill="rgb(230,59,30)" fg:x="5303" fg:w="106"/><text x="27.2318%" y="158.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (23 samples, 0.12%)</title><rect x="27.6178%" y="196" width="0.1170%" height="15" fill="rgb(209,121,21)" fg:x="5428" fg:w="23"/><text x="27.8678%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (32 samples, 0.16%)</title><rect x="27.6178%" y="164" width="0.1628%" height="15" fill="rgb(220,109,13)" fg:x="5428" fg:w="32"/><text x="27.8678%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (32 samples, 0.16%)</title><rect x="27.6178%" y="180" width="0.1628%" height="15" fill="rgb(232,18,1)" fg:x="5428" fg:w="32"/><text x="27.8678%" y="190.50"></text></g><g><title>forward (reward.py:51) (34 samples, 0.17%)</title><rect x="27.6127%" y="148" width="0.1730%" height="15" fill="rgb(215,41,42)" fg:x="5427" fg:w="34"/><text x="27.8627%" y="158.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1561) (482 samples, 2.45%)</title><rect x="25.4147%" y="132" width="2.4524%" height="15" fill="rgb(224,123,36)" fg:x="4995" fg:w="482"/><text x="25.6647%" y="142.50">_c..</text></g><g><title>train_model (reward.py:240) (483 samples, 2.46%)</title><rect x="25.4147%" y="100" width="2.4575%" height="15" fill="rgb(240,125,3)" fg:x="4995" fg:w="483"/><text x="25.6647%" y="110.50">tr..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (483 samples, 2.46%)</title><rect x="25.4147%" y="116" width="2.4575%" height="15" fill="rgb(205,98,50)" fg:x="4995" fg:w="483"/><text x="25.6647%" y="126.50">_w..</text></g><g><title>train_model (reward.py:255) (1,581 samples, 8.04%)</title><rect x="28.1215%" y="100" width="8.0442%" height="15" fill="rgb(205,185,37)" fg:x="5527" fg:w="1581"/><text x="28.3715%" y="110.50">train_model..</text></g><g><title>backward (torch/_tensor.py:522) (1,581 samples, 8.04%)</title><rect x="28.1215%" y="116" width="8.0442%" height="15" fill="rgb(238,207,15)" fg:x="5527" fg:w="1581"/><text x="28.3715%" y="126.50">backward (t..</text></g><g><title>backward (torch/autograd/__init__.py:266) (1,571 samples, 7.99%)</title><rect x="28.1724%" y="132" width="7.9933%" height="15" fill="rgb(213,199,42)" fg:x="5537" fg:w="1571"/><text x="28.4224%" y="142.50">backward (t..</text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:39) (30 samples, 0.15%)</title><rect x="36.2216%" y="116" width="0.1526%" height="15" fill="rgb(235,201,11)" fg:x="7119" fg:w="30"/><text x="36.4716%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (torch/nn/utils/clip_grad.py:39) (27 samples, 0.14%)</title><rect x="36.2369%" y="132" width="0.1374%" height="15" fill="rgb(207,46,11)" fg:x="7122" fg:w="27"/><text x="36.4869%" y="142.50"></text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:55) (79 samples, 0.40%)</title><rect x="36.4964%" y="116" width="0.4020%" height="15" fill="rgb(241,35,35)" fg:x="7173" fg:w="79"/><text x="36.7464%" y="126.50"></text></g><g><title>train_model (reward.py:256) (301 samples, 1.53%)</title><rect x="36.1657%" y="100" width="1.5315%" height="15" fill="rgb(243,32,47)" fg:x="7108" fg:w="301"/><text x="36.4157%" y="110.50"></text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:76) (128 samples, 0.65%)</title><rect x="37.0459%" y="116" width="0.6513%" height="15" fill="rgb(247,202,23)" fg:x="7281" fg:w="128"/><text x="37.2959%" y="126.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:377) (40 samples, 0.20%)</title><rect x="37.9567%" y="196" width="0.2035%" height="15" fill="rgb(219,102,11)" fg:x="7460" fg:w="40"/><text x="38.2067%" y="206.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:380) (123 samples, 0.63%)</title><rect x="38.1703%" y="196" width="0.6258%" height="15" fill="rgb(243,110,44)" fg:x="7502" fg:w="123"/><text x="38.4203%" y="206.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:391) (93 samples, 0.47%)</title><rect x="38.8063%" y="196" width="0.4732%" height="15" fill="rgb(222,74,54)" fg:x="7627" fg:w="93"/><text x="39.0563%" y="206.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:392) (172 samples, 0.88%)</title><rect x="39.2795%" y="196" width="0.8751%" height="15" fill="rgb(216,99,12)" fg:x="7720" fg:w="172"/><text x="39.5295%" y="206.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:439) (245 samples, 1.25%)</title><rect x="40.2768%" y="196" width="1.2466%" height="15" fill="rgb(226,22,26)" fg:x="7916" fg:w="245"/><text x="40.5268%" y="206.50"></text></g><g><title>_single_tensor_adam (torch/optim/adam.py:441) (90 samples, 0.46%)</title><rect x="41.5234%" y="196" width="0.4579%" height="15" fill="rgb(217,163,10)" fg:x="8161" fg:w="90"/><text x="41.7734%" y="206.50"></text></g><g><title>_use_grad (torch/optim/optimizer.py:76) (821 samples, 4.18%)</title><rect x="37.8091%" y="148" width="4.1773%" height="15" fill="rgb(213,25,53)" fg:x="7431" fg:w="821"/><text x="38.0591%" y="158.50">_use_..</text></g><g><title>step (torch/optim/adam.py:166) (809 samples, 4.12%)</title><rect x="37.8702%" y="164" width="4.1162%" height="15" fill="rgb(252,105,26)" fg:x="7443" fg:w="809"/><text x="38.1202%" y="174.50">step..</text></g><g><title>adam (torch/optim/adam.py:316) (803 samples, 4.09%)</title><rect x="37.9007%" y="180" width="4.0857%" height="15" fill="rgb(220,39,43)" fg:x="7449" fg:w="803"/><text x="38.1507%" y="190.50">adam..</text></g><g><title>train_model (reward.py:257) (844 samples, 4.29%)</title><rect x="37.6972%" y="100" width="4.2943%" height="15" fill="rgb(229,68,48)" fg:x="7409" fg:w="844"/><text x="37.9472%" y="110.50">train..</text></g><g><title>wrapper (torch/optim/lr_scheduler.py:75) (841 samples, 4.28%)</title><rect x="37.7124%" y="116" width="4.2790%" height="15" fill="rgb(252,8,32)" fg:x="7412" fg:w="841"/><text x="37.9624%" y="126.50">wrapp..</text></g><g><title>wrapper (torch/optim/optimizer.py:385) (824 samples, 4.19%)</title><rect x="37.7989%" y="132" width="4.1925%" height="15" fill="rgb(223,20,43)" fg:x="7429" fg:w="824"/><text x="38.0489%" y="142.50">wrapp..</text></g><g><title>prepare_single_trajectory (reward.py:146) (68 samples, 0.35%)</title><rect x="42.2357%" y="212" width="0.3460%" height="15" fill="rgb(229,81,49)" fg:x="8301" fg:w="68"/><text x="42.4857%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (reward.py:146) (68 samples, 0.35%)</title><rect x="42.2357%" y="228" width="0.3460%" height="15" fill="rgb(236,28,36)" fg:x="8301" fg:w="68"/><text x="42.4857%" y="238.50"></text></g><g><title>__getitem__ (reward.py:66) (222 samples, 1.13%)</title><rect x="42.1695%" y="196" width="1.1295%" height="15" fill="rgb(249,185,26)" fg:x="8288" fg:w="222"/><text x="42.4195%" y="206.50"></text></g><g><title>prepare_single_trajectory (reward.py:149) (141 samples, 0.72%)</title><rect x="42.5817%" y="212" width="0.7174%" height="15" fill="rgb(249,174,33)" fg:x="8369" fg:w="141"/><text x="42.8317%" y="222.50"></text></g><g><title>prepare_single_trajectory (reward.py:146) (80 samples, 0.41%)</title><rect x="43.3601%" y="212" width="0.4070%" height="15" fill="rgb(233,201,37)" fg:x="8522" fg:w="80"/><text x="43.6101%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (reward.py:146) (79 samples, 0.40%)</title><rect x="43.3652%" y="228" width="0.4020%" height="15" fill="rgb(221,78,26)" fg:x="8523" fg:w="79"/><text x="43.6152%" y="238.50"></text></g><g><title>__getitem__ (reward.py:67) (216 samples, 1.10%)</title><rect x="43.2991%" y="196" width="1.0990%" height="15" fill="rgb(250,127,30)" fg:x="8510" fg:w="216"/><text x="43.5491%" y="206.50"></text></g><g><title>prepare_single_trajectory (reward.py:149) (124 samples, 0.63%)</title><rect x="43.7672%" y="212" width="0.6309%" height="15" fill="rgb(230,49,44)" fg:x="8602" fg:w="124"/><text x="44.0172%" y="222.50"></text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:49) (467 samples, 2.38%)</title><rect x="42.1594%" y="148" width="2.3761%" height="15" fill="rgb(229,67,23)" fg:x="8286" fg:w="467"/><text x="42.4094%" y="158.50">fe..</text></g><g><title>__getitems__ (torch/utils/data/dataset.py:399) (466 samples, 2.37%)</title><rect x="42.1644%" y="164" width="2.3710%" height="15" fill="rgb(249,83,47)" fg:x="8287" fg:w="466"/><text x="42.4144%" y="174.50">__..</text></g><g><title>&lt;listcomp&gt; (torch/utils/data/dataset.py:399) (466 samples, 2.37%)</title><rect x="42.1644%" y="180" width="2.3710%" height="15" fill="rgb(215,43,3)" fg:x="8287" fg:w="466"/><text x="42.4144%" y="190.50">&lt;l..</text></g><g><title>train_model (reward.py:281) (491 samples, 2.50%)</title><rect x="42.0678%" y="100" width="2.4982%" height="15" fill="rgb(238,154,13)" fg:x="8268" fg:w="491"/><text x="42.3178%" y="110.50">tr..</text></g><g><title>__next__ (torch/utils/data/dataloader.py:631) (478 samples, 2.43%)</title><rect x="42.1339%" y="116" width="2.4321%" height="15" fill="rgb(219,56,2)" fg:x="8281" fg:w="478"/><text x="42.3839%" y="126.50">__..</text></g><g><title>_next_data (torch/utils/data/dataloader.py:675) (475 samples, 2.42%)</title><rect x="42.1492%" y="132" width="2.4168%" height="15" fill="rgb(233,0,4)" fg:x="8284" fg:w="475"/><text x="42.3992%" y="142.50">_n..</text></g><g><title>forward (torch/nn/modules/linear.py:116) (34 samples, 0.17%)</title><rect x="44.5813%" y="196" width="0.1730%" height="15" fill="rgb(235,30,7)" fg:x="8762" fg:w="34"/><text x="44.8313%" y="206.50"></text></g><g><title>forward (reward.py:45) (40 samples, 0.20%)</title><rect x="44.5711%" y="148" width="0.2035%" height="15" fill="rgb(250,79,13)" fg:x="8760" fg:w="40"/><text x="44.8211%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (40 samples, 0.20%)</title><rect x="44.5711%" y="164" width="0.2035%" height="15" fill="rgb(211,146,34)" fg:x="8760" fg:w="40"/><text x="44.8211%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (39 samples, 0.20%)</title><rect x="44.5762%" y="180" width="0.1984%" height="15" fill="rgb(228,22,38)" fg:x="8761" fg:w="39"/><text x="44.8262%" y="190.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (26 samples, 0.13%)</title><rect x="44.8764%" y="196" width="0.1323%" height="15" fill="rgb(235,168,5)" fg:x="8820" fg:w="26"/><text x="45.1264%" y="206.50"></text></g><g><title>forward (reward.py:49) (34 samples, 0.17%)</title><rect x="44.8713%" y="148" width="0.1730%" height="15" fill="rgb(221,155,16)" fg:x="8819" fg:w="34"/><text x="45.1213%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (34 samples, 0.17%)</title><rect x="44.8713%" y="164" width="0.1730%" height="15" fill="rgb(215,215,53)" fg:x="8819" fg:w="34"/><text x="45.1213%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (33 samples, 0.17%)</title><rect x="44.8764%" y="180" width="0.1679%" height="15" fill="rgb(223,4,10)" fg:x="8820" fg:w="33"/><text x="45.1264%" y="190.50"></text></g><g><title>train_model (reward.py:288) (101 samples, 0.51%)</title><rect x="44.5660%" y="100" width="0.5139%" height="15" fill="rgb(234,103,6)" fg:x="8759" fg:w="101"/><text x="44.8160%" y="110.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (100 samples, 0.51%)</title><rect x="44.5711%" y="116" width="0.5088%" height="15" fill="rgb(227,97,0)" fg:x="8760" fg:w="100"/><text x="44.8211%" y="126.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1561) (100 samples, 0.51%)</title><rect x="44.5711%" y="132" width="0.5088%" height="15" fill="rgb(234,150,53)" fg:x="8760" fg:w="100"/><text x="44.8211%" y="142.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (25 samples, 0.13%)</title><rect x="45.0850%" y="196" width="0.1272%" height="15" fill="rgb(228,201,54)" fg:x="8861" fg:w="25"/><text x="45.3350%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (29 samples, 0.15%)</title><rect x="45.0850%" y="164" width="0.1476%" height="15" fill="rgb(222,22,37)" fg:x="8861" fg:w="29"/><text x="45.3350%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (29 samples, 0.15%)</title><rect x="45.0850%" y="180" width="0.1476%" height="15" fill="rgb(237,53,32)" fg:x="8861" fg:w="29"/><text x="45.3350%" y="190.50"></text></g><g><title>forward (reward.py:45) (31 samples, 0.16%)</title><rect x="45.0799%" y="148" width="0.1577%" height="15" fill="rgb(233,25,53)" fg:x="8860" fg:w="31"/><text x="45.3299%" y="158.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (34 samples, 0.17%)</title><rect x="45.2478%" y="196" width="0.1730%" height="15" fill="rgb(210,40,34)" fg:x="8893" fg:w="34"/><text x="45.4978%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (39 samples, 0.20%)</title><rect x="45.2478%" y="164" width="0.1984%" height="15" fill="rgb(241,220,44)" fg:x="8893" fg:w="39"/><text x="45.4978%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (39 samples, 0.20%)</title><rect x="45.2478%" y="180" width="0.1984%" height="15" fill="rgb(235,28,35)" fg:x="8893" fg:w="39"/><text x="45.4978%" y="190.50"></text></g><g><title>forward (reward.py:47) (42 samples, 0.21%)</title><rect x="45.2427%" y="148" width="0.2137%" height="15" fill="rgb(210,56,17)" fg:x="8892" fg:w="42"/><text x="45.4927%" y="158.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (24 samples, 0.12%)</title><rect x="45.4666%" y="196" width="0.1221%" height="15" fill="rgb(224,130,29)" fg:x="8936" fg:w="24"/><text x="45.7166%" y="206.50"></text></g><g><title>forward (reward.py:49) (27 samples, 0.14%)</title><rect x="45.4615%" y="148" width="0.1374%" height="15" fill="rgb(235,212,8)" fg:x="8935" fg:w="27"/><text x="45.7115%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (26 samples, 0.13%)</title><rect x="45.4666%" y="164" width="0.1323%" height="15" fill="rgb(223,33,50)" fg:x="8936" fg:w="26"/><text x="45.7166%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (26 samples, 0.13%)</title><rect x="45.4666%" y="180" width="0.1323%" height="15" fill="rgb(219,149,13)" fg:x="8936" fg:w="26"/><text x="45.7166%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1561) (117 samples, 0.60%)</title><rect x="45.0799%" y="132" width="0.5953%" height="15" fill="rgb(250,156,29)" fg:x="8860" fg:w="117"/><text x="45.3299%" y="142.50"></text></g><g><title>train_model (reward.py:289) (127 samples, 0.65%)</title><rect x="45.0799%" y="100" width="0.6462%" height="15" fill="rgb(216,193,19)" fg:x="8860" fg:w="127"/><text x="45.3299%" y="110.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (127 samples, 0.65%)</title><rect x="45.0799%" y="116" width="0.6462%" height="15" fill="rgb(216,135,14)" fg:x="8860" fg:w="127"/><text x="45.3299%" y="126.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:26) (20 samples, 0.10%)</title><rect x="46.1229%" y="356" width="0.1018%" height="15" fill="rgb(241,47,5)" fg:x="9065" fg:w="20"/><text x="46.3729%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (20 samples, 0.10%)</title><rect x="46.1229%" y="372" width="0.1018%" height="15" fill="rgb(233,42,35)" fg:x="9065" fg:w="20"/><text x="46.3729%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (20 samples, 0.10%)</title><rect x="46.1229%" y="388" width="0.1018%" height="15" fill="rgb(231,13,6)" fg:x="9065" fg:w="20"/><text x="46.3729%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (20 samples, 0.10%)</title><rect x="46.1229%" y="404" width="0.1018%" height="15" fill="rgb(207,181,40)" fg:x="9065" fg:w="20"/><text x="46.3729%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (20 samples, 0.10%)</title><rect x="46.1229%" y="420" width="0.1018%" height="15" fill="rgb(254,173,49)" fg:x="9065" fg:w="20"/><text x="46.3729%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (20 samples, 0.10%)</title><rect x="46.1229%" y="436" width="0.1018%" height="15" fill="rgb(221,1,38)" fg:x="9065" fg:w="20"/><text x="46.3729%" y="446.50"></text></g><g><title>_wrap_function (pyarrow/compute.py:299) (23 samples, 0.12%)</title><rect x="46.3570%" y="868" width="0.1170%" height="15" fill="rgb(206,124,46)" fg:x="9111" fg:w="23"/><text x="46.6070%" y="878.50"></text></g><g><title>_make_generic_wrapper (pyarrow/compute.py:248) (23 samples, 0.12%)</title><rect x="46.3570%" y="884" width="0.1170%" height="15" fill="rgb(249,21,11)" fg:x="9111" fg:w="23"/><text x="46.6070%" y="894.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/arrow/__init__.py:1) (33 samples, 0.17%)</title><rect x="46.3366%" y="644" width="0.1679%" height="15" fill="rgb(222,201,40)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (33 samples, 0.17%)</title><rect x="46.3366%" y="660" width="0.1679%" height="15" fill="rgb(235,61,29)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (33 samples, 0.17%)</title><rect x="46.3366%" y="676" width="0.1679%" height="15" fill="rgb(219,207,3)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (33 samples, 0.17%)</title><rect x="46.3366%" y="692" width="0.1679%" height="15" fill="rgb(222,56,46)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (33 samples, 0.17%)</title><rect x="46.3366%" y="708" width="0.1679%" height="15" fill="rgb(239,76,54)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (33 samples, 0.17%)</title><rect x="46.3366%" y="724" width="0.1679%" height="15" fill="rgb(231,124,27)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="734.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/arrow/accessors.py:23) (33 samples, 0.17%)</title><rect x="46.3366%" y="740" width="0.1679%" height="15" fill="rgb(249,195,6)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (33 samples, 0.17%)</title><rect x="46.3366%" y="756" width="0.1679%" height="15" fill="rgb(237,174,47)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (33 samples, 0.17%)</title><rect x="46.3366%" y="772" width="0.1679%" height="15" fill="rgb(206,201,31)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (33 samples, 0.17%)</title><rect x="46.3366%" y="788" width="0.1679%" height="15" fill="rgb(231,57,52)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (33 samples, 0.17%)</title><rect x="46.3366%" y="804" width="0.1679%" height="15" fill="rgb(248,177,22)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (33 samples, 0.17%)</title><rect x="46.3366%" y="820" width="0.1679%" height="15" fill="rgb(215,211,37)" fg:x="9107" fg:w="33"/><text x="46.5866%" y="830.50"></text></g><g><title>&lt;module&gt; (pyarrow/compute.py:335) (29 samples, 0.15%)</title><rect x="46.3570%" y="836" width="0.1476%" height="15" fill="rgb(241,128,51)" fg:x="9111" fg:w="29"/><text x="46.6070%" y="846.50"></text></g><g><title>_make_global_functions (pyarrow/compute.py:332) (29 samples, 0.15%)</title><rect x="46.3570%" y="852" width="0.1476%" height="15" fill="rgb(227,165,31)" fg:x="9111" fg:w="29"/><text x="46.6070%" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:28) (35 samples, 0.18%)</title><rect x="46.3366%" y="452" width="0.1781%" height="15" fill="rgb(228,167,24)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (35 samples, 0.18%)</title><rect x="46.3366%" y="468" width="0.1781%" height="15" fill="rgb(228,143,12)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (35 samples, 0.18%)</title><rect x="46.3366%" y="484" width="0.1781%" height="15" fill="rgb(249,149,8)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (35 samples, 0.18%)</title><rect x="46.3366%" y="500" width="0.1781%" height="15" fill="rgb(243,35,44)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (35 samples, 0.18%)</title><rect x="46.3366%" y="516" width="0.1781%" height="15" fill="rgb(246,89,9)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (35 samples, 0.18%)</title><rect x="46.3366%" y="532" width="0.1781%" height="15" fill="rgb(233,213,13)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="542.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:1) (35 samples, 0.18%)</title><rect x="46.3366%" y="548" width="0.1781%" height="15" fill="rgb(233,141,41)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (35 samples, 0.18%)</title><rect x="46.3366%" y="564" width="0.1781%" height="15" fill="rgb(239,167,4)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (35 samples, 0.18%)</title><rect x="46.3366%" y="580" width="0.1781%" height="15" fill="rgb(209,217,16)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (35 samples, 0.18%)</title><rect x="46.3366%" y="596" width="0.1781%" height="15" fill="rgb(219,88,35)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (35 samples, 0.18%)</title><rect x="46.3366%" y="612" width="0.1781%" height="15" fill="rgb(220,193,23)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (35 samples, 0.18%)</title><rect x="46.3366%" y="628" width="0.1781%" height="15" fill="rgb(230,90,52)" fg:x="9107" fg:w="35"/><text x="46.5866%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (63 samples, 0.32%)</title><rect x="46.2450%" y="388" width="0.3205%" height="15" fill="rgb(252,106,19)" fg:x="9089" fg:w="63"/><text x="46.4950%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (63 samples, 0.32%)</title><rect x="46.2450%" y="404" width="0.3205%" height="15" fill="rgb(206,74,20)" fg:x="9089" fg:w="63"/><text x="46.4950%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (63 samples, 0.32%)</title><rect x="46.2450%" y="420" width="0.3205%" height="15" fill="rgb(230,138,44)" fg:x="9089" fg:w="63"/><text x="46.4950%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (63 samples, 0.32%)</title><rect x="46.2450%" y="436" width="0.3205%" height="15" fill="rgb(235,182,43)" fg:x="9089" fg:w="63"/><text x="46.4950%" y="446.50"></text></g><g><title>val_to_json (wandb/sdk/data_types/utils.py:82) (102 samples, 0.52%)</title><rect x="46.0517%" y="244" width="0.5190%" height="15" fill="rgb(242,16,51)" fg:x="9051" fg:w="102"/><text x="46.3017%" y="254.50"></text></g><g><title>is_pandas_data_frame (wandb/util.py:449) (101 samples, 0.51%)</title><rect x="46.0568%" y="260" width="0.5139%" height="15" fill="rgb(248,9,4)" fg:x="9052" fg:w="101"/><text x="46.3068%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (100 samples, 0.51%)</title><rect x="46.0619%" y="276" width="0.5088%" height="15" fill="rgb(210,31,22)" fg:x="9053" fg:w="100"/><text x="46.3119%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (100 samples, 0.51%)</title><rect x="46.0619%" y="292" width="0.5088%" height="15" fill="rgb(239,54,39)" fg:x="9053" fg:w="100"/><text x="46.3119%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (100 samples, 0.51%)</title><rect x="46.0619%" y="308" width="0.5088%" height="15" fill="rgb(230,99,41)" fg:x="9053" fg:w="100"/><text x="46.3119%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (100 samples, 0.51%)</title><rect x="46.0619%" y="324" width="0.5088%" height="15" fill="rgb(253,106,12)" fg:x="9053" fg:w="100"/><text x="46.3119%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (100 samples, 0.51%)</title><rect x="46.0619%" y="340" width="0.5088%" height="15" fill="rgb(213,46,41)" fg:x="9053" fg:w="100"/><text x="46.3119%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:49) (64 samples, 0.33%)</title><rect x="46.2450%" y="356" width="0.3256%" height="15" fill="rgb(215,133,35)" fg:x="9089" fg:w="64"/><text x="46.4950%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (64 samples, 0.33%)</title><rect x="46.2450%" y="372" width="0.3256%" height="15" fill="rgb(213,28,5)" fg:x="9089" fg:w="64"/><text x="46.4950%" y="382.50"></text></g><g><title>publish_partial_history (wandb/sdk/interface/interface.py:528) (113 samples, 0.57%)</title><rect x="46.0110%" y="212" width="0.5749%" height="15" fill="rgb(215,77,49)" fg:x="9043" fg:w="113"/><text x="46.2610%" y="222.50"></text></g><g><title>history_dict_to_json (wandb/sdk/data_types/utils.py:52) (111 samples, 0.56%)</title><rect x="46.0212%" y="228" width="0.5648%" height="15" fill="rgb(248,100,22)" fg:x="9045" fg:w="111"/><text x="46.2712%" y="238.50"></text></g><g><title>encode (json/encoder.py:199) (91 samples, 0.46%)</title><rect x="46.6877%" y="260" width="0.4630%" height="15" fill="rgb(208,67,9)" fg:x="9176" fg:w="91"/><text x="46.9377%" y="270.50"></text></g><g><title>iterencode (json/encoder.py:257) (85 samples, 0.43%)</title><rect x="46.7182%" y="276" width="0.4325%" height="15" fill="rgb(219,133,21)" fg:x="9182" fg:w="85"/><text x="46.9682%" y="286.50"></text></g><g><title>publish_partial_history (wandb/sdk/interface/interface.py:540) (104 samples, 0.53%)</title><rect x="46.6368%" y="212" width="0.5292%" height="15" fill="rgb(246,46,29)" fg:x="9166" fg:w="104"/><text x="46.8868%" y="222.50"></text></g><g><title>json_dumps_safer_history (wandb/util.py:839) (102 samples, 0.52%)</title><rect x="46.6470%" y="228" width="0.5190%" height="15" fill="rgb(246,185,52)" fg:x="9168" fg:w="102"/><text x="46.8970%" y="238.50"></text></g><g><title>dumps (json/__init__.py:238) (94 samples, 0.48%)</title><rect x="46.6877%" y="244" width="0.4783%" height="15" fill="rgb(252,136,11)" fg:x="9176" fg:w="94"/><text x="46.9377%" y="254.50"></text></g><g><title>_log (wandb/sdk/wandb_run.py:1567) (287 samples, 1.46%)</title><rect x="45.9856%" y="180" width="1.4603%" height="15" fill="rgb(219,138,53)" fg:x="9038" fg:w="287"/><text x="46.2356%" y="190.50"></text></g><g><title>_partial_history_callback (wandb/sdk/wandb_run.py:1439) (282 samples, 1.43%)</title><rect x="46.0110%" y="196" width="1.4348%" height="15" fill="rgb(211,51,23)" fg:x="9043" fg:w="282"/><text x="46.2610%" y="206.50"></text></g><g><title>publish_partial_history (wandb/sdk/interface/interface.py:546) (53 samples, 0.27%)</title><rect x="47.1761%" y="212" width="0.2697%" height="15" fill="rgb(247,221,28)" fg:x="9272" fg:w="53"/><text x="47.4261%" y="222.50"></text></g><g><title>_publish_partial_history (wandb/sdk/interface/interface_shared.py:89) (35 samples, 0.18%)</title><rect x="47.2677%" y="228" width="0.1781%" height="15" fill="rgb(251,222,45)" fg:x="9290" fg:w="35"/><text x="47.5177%" y="238.50"></text></g><g><title>_publish (wandb/sdk/interface/interface_sock.py:51) (35 samples, 0.18%)</title><rect x="47.2677%" y="244" width="0.1781%" height="15" fill="rgb(217,162,53)" fg:x="9290" fg:w="35"/><text x="47.5177%" y="254.50"></text></g><g><title>send_record_publish (wandb/sdk/lib/sock_client.py:221) (27 samples, 0.14%)</title><rect x="47.3084%" y="260" width="0.1374%" height="15" fill="rgb(229,93,14)" fg:x="9298" fg:w="27"/><text x="47.5584%" y="270.50"></text></g><g><title>send_server_request (wandb/sdk/lib/sock_client.py:155) (27 samples, 0.14%)</title><rect x="47.3084%" y="276" width="0.1374%" height="15" fill="rgb(209,67,49)" fg:x="9298" fg:w="27"/><text x="47.5584%" y="286.50"></text></g><g><title>_send_message (wandb/sdk/lib/sock_client.py:152) (21 samples, 0.11%)</title><rect x="47.3390%" y="292" width="0.1068%" height="15" fill="rgb(213,87,29)" fg:x="9304" fg:w="21"/><text x="47.5890%" y="302.50"></text></g><g><title>train_model (reward.py:315) (298 samples, 1.52%)</title><rect x="45.9448%" y="100" width="1.5162%" height="15" fill="rgb(205,151,52)" fg:x="9030" fg:w="298"/><text x="46.1948%" y="110.50"></text></g><g><title>wrapper (wandb/sdk/wandb_run.py:419) (295 samples, 1.50%)</title><rect x="45.9601%" y="116" width="1.5010%" height="15" fill="rgb(253,215,39)" fg:x="9033" fg:w="295"/><text x="46.2101%" y="126.50"></text></g><g><title>wrapper_fn (wandb/sdk/wandb_run.py:370) (293 samples, 1.49%)</title><rect x="45.9703%" y="132" width="1.4908%" height="15" fill="rgb(221,220,41)" fg:x="9035" fg:w="293"/><text x="46.2203%" y="142.50"></text></g><g><title>wrapper (wandb/sdk/wandb_run.py:360) (292 samples, 1.49%)</title><rect x="45.9754%" y="148" width="1.4857%" height="15" fill="rgb(218,133,21)" fg:x="9036" fg:w="292"/><text x="46.2254%" y="158.50"></text></g><g><title>log (wandb/sdk/wandb_run.py:1792) (292 samples, 1.49%)</title><rect x="45.9754%" y="164" width="1.4857%" height="15" fill="rgb(221,193,43)" fg:x="9036" fg:w="292"/><text x="46.2254%" y="174.50"></text></g><g><title>_amax (numpy/core/_methods.py:41) (22 samples, 0.11%)</title><rect x="47.6595%" y="180" width="0.1119%" height="15" fill="rgb(240,128,52)" fg:x="9367" fg:w="22"/><text x="47.9095%" y="190.50"></text></g><g><title>_get_outer_edges (numpy/lib/histograms.py:321) (52 samples, 0.26%)</title><rect x="47.6544%" y="164" width="0.2646%" height="15" fill="rgb(253,114,12)" fg:x="9366" fg:w="52"/><text x="47.9044%" y="174.50"></text></g><g><title>_amin (numpy/core/_methods.py:45) (29 samples, 0.15%)</title><rect x="47.7714%" y="180" width="0.1476%" height="15" fill="rgb(215,223,47)" fg:x="9389" fg:w="29"/><text x="48.0214%" y="190.50"></text></g><g><title>_get_bin_edges (numpy/lib/histograms.py:426) (60 samples, 0.31%)</title><rect x="47.6544%" y="148" width="0.3053%" height="15" fill="rgb(248,225,23)" fg:x="9366" fg:w="60"/><text x="47.9044%" y="158.50"></text></g><g><title>histogram (numpy/lib/histograms.py:780) (107 samples, 0.54%)</title><rect x="47.6188%" y="132" width="0.5444%" height="15" fill="rgb(250,108,0)" fg:x="9359" fg:w="107"/><text x="47.8688%" y="142.50"></text></g><g><title>_get_bin_edges (numpy/lib/histograms.py:449) (27 samples, 0.14%)</title><rect x="48.0258%" y="148" width="0.1374%" height="15" fill="rgb(228,208,7)" fg:x="9439" fg:w="27"/><text x="48.2758%" y="158.50"></text></g><g><title>histogram (numpy/lib/histograms.py:826) (21 samples, 0.11%)</title><rect x="48.3362%" y="132" width="0.1068%" height="15" fill="rgb(244,45,10)" fg:x="9500" fg:w="21"/><text x="48.5862%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:839) (82 samples, 0.42%)</title><rect x="48.4889%" y="132" width="0.4172%" height="15" fill="rgb(207,125,25)" fg:x="9530" fg:w="82"/><text x="48.7389%" y="142.50"></text></g><g><title>_unsigned_subtract (numpy/lib/histograms.py:353) (22 samples, 0.11%)</title><rect x="48.7941%" y="148" width="0.1119%" height="15" fill="rgb(210,195,18)" fg:x="9590" fg:w="22"/><text x="49.0441%" y="158.50"></text></g><g><title>histogram (numpy/lib/histograms.py:841) (36 samples, 0.18%)</title><rect x="48.9061%" y="132" width="0.1832%" height="15" fill="rgb(249,80,12)" fg:x="9612" fg:w="36"/><text x="49.1561%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:842) (61 samples, 0.31%)</title><rect x="49.0892%" y="132" width="0.3104%" height="15" fill="rgb(221,65,9)" fg:x="9648" fg:w="61"/><text x="49.3392%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:846) (167 samples, 0.85%)</title><rect x="49.3996%" y="132" width="0.8497%" height="15" fill="rgb(235,49,36)" fg:x="9709" fg:w="167"/><text x="49.6496%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:847) (29 samples, 0.15%)</title><rect x="50.2493%" y="132" width="0.1476%" height="15" fill="rgb(225,32,20)" fg:x="9876" fg:w="29"/><text x="50.4993%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:849) (198 samples, 1.01%)</title><rect x="50.3969%" y="132" width="1.0074%" height="15" fill="rgb(215,141,46)" fg:x="9905" fg:w="198"/><text x="50.6469%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:850) (46 samples, 0.23%)</title><rect x="51.4043%" y="132" width="0.2340%" height="15" fill="rgb(250,160,47)" fg:x="10103" fg:w="46"/><text x="51.6543%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:851) (26 samples, 0.13%)</title><rect x="51.6383%" y="132" width="0.1323%" height="15" fill="rgb(216,222,40)" fg:x="10149" fg:w="26"/><text x="51.8883%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:860) (207 samples, 1.05%)</title><rect x="51.7808%" y="132" width="1.0532%" height="15" fill="rgb(234,217,39)" fg:x="10177" fg:w="207"/><text x="52.0308%" y="142.50"></text></g><g><title>__init__ (wandb/sdk/data_types/histogram.py:77) (1,041 samples, 5.30%)</title><rect x="47.5476%" y="116" width="5.2966%" height="15" fill="rgb(207,178,40)" fg:x="9345" fg:w="1041"/><text x="47.7976%" y="126.50">__init..</text></g><g><title>train_model (reward.py:316) (1,062 samples, 5.40%)</title><rect x="47.4611%" y="100" width="5.4035%" height="15" fill="rgb(221,136,13)" fg:x="9328" fg:w="1062"/><text x="47.7111%" y="110.50">train_m..</text></g><g><title>encode (json/encoder.py:199) (73 samples, 0.37%)</title><rect x="53.0833%" y="260" width="0.3714%" height="15" fill="rgb(249,199,10)" fg:x="10433" fg:w="73"/><text x="53.3333%" y="270.50"></text></g><g><title>iterencode (json/encoder.py:257) (69 samples, 0.35%)</title><rect x="53.1037%" y="276" width="0.3511%" height="15" fill="rgb(249,222,13)" fg:x="10437" fg:w="69"/><text x="53.3537%" y="286.50"></text></g><g><title>publish_partial_history (wandb/sdk/interface/interface.py:540) (93 samples, 0.47%)</title><rect x="53.0019%" y="212" width="0.4732%" height="15" fill="rgb(244,185,38)" fg:x="10417" fg:w="93"/><text x="53.2519%" y="222.50"></text></g><g><title>json_dumps_safer_history (wandb/util.py:839) (88 samples, 0.45%)</title><rect x="53.0274%" y="228" width="0.4477%" height="15" fill="rgb(236,202,9)" fg:x="10422" fg:w="88"/><text x="53.2774%" y="238.50"></text></g><g><title>dumps (json/__init__.py:238) (80 samples, 0.41%)</title><rect x="53.0681%" y="244" width="0.4070%" height="15" fill="rgb(250,229,37)" fg:x="10430" fg:w="80"/><text x="53.3181%" y="254.50"></text></g><g><title>_log (wandb/sdk/wandb_run.py:1567) (165 samples, 0.84%)</title><rect x="52.9103%" y="180" width="0.8395%" height="15" fill="rgb(206,174,23)" fg:x="10399" fg:w="165"/><text x="53.1603%" y="190.50"></text></g><g><title>_partial_history_callback (wandb/sdk/wandb_run.py:1439) (161 samples, 0.82%)</title><rect x="52.9307%" y="196" width="0.8192%" height="15" fill="rgb(211,33,43)" fg:x="10403" fg:w="161"/><text x="53.1807%" y="206.50"></text></g><g><title>publish_partial_history (wandb/sdk/interface/interface.py:546) (52 samples, 0.26%)</title><rect x="53.4853%" y="212" width="0.2646%" height="15" fill="rgb(245,58,50)" fg:x="10512" fg:w="52"/><text x="53.7353%" y="222.50"></text></g><g><title>_publish_partial_history (wandb/sdk/interface/interface_shared.py:89) (33 samples, 0.17%)</title><rect x="53.5820%" y="228" width="0.1679%" height="15" fill="rgb(244,68,36)" fg:x="10531" fg:w="33"/><text x="53.8320%" y="238.50"></text></g><g><title>_publish (wandb/sdk/interface/interface_sock.py:51) (29 samples, 0.15%)</title><rect x="53.6023%" y="244" width="0.1476%" height="15" fill="rgb(232,229,15)" fg:x="10535" fg:w="29"/><text x="53.8523%" y="254.50"></text></g><g><title>send_record_publish (wandb/sdk/lib/sock_client.py:221) (28 samples, 0.14%)</title><rect x="53.6074%" y="260" width="0.1425%" height="15" fill="rgb(254,30,23)" fg:x="10536" fg:w="28"/><text x="53.8574%" y="270.50"></text></g><g><title>send_server_request (wandb/sdk/lib/sock_client.py:155) (28 samples, 0.14%)</title><rect x="53.6074%" y="276" width="0.1425%" height="15" fill="rgb(235,160,14)" fg:x="10536" fg:w="28"/><text x="53.8574%" y="286.50"></text></g><g><title>_send_message (wandb/sdk/lib/sock_client.py:152) (24 samples, 0.12%)</title><rect x="53.6278%" y="292" width="0.1221%" height="15" fill="rgb(212,155,44)" fg:x="10540" fg:w="24"/><text x="53.8778%" y="302.50"></text></g><g><title>_sendall_with_error_handle (wandb/sdk/lib/sock_client.py:130) (23 samples, 0.12%)</title><rect x="53.6328%" y="308" width="0.1170%" height="15" fill="rgb(226,2,50)" fg:x="10541" fg:w="23"/><text x="53.8828%" y="318.50"></text></g><g><title>train_model (reward.py:322) (172 samples, 0.88%)</title><rect x="52.8849%" y="100" width="0.8751%" height="15" fill="rgb(234,177,6)" fg:x="10394" fg:w="172"/><text x="53.1349%" y="110.50"></text></g><g><title>wrapper (wandb/sdk/wandb_run.py:419) (171 samples, 0.87%)</title><rect x="52.8900%" y="116" width="0.8701%" height="15" fill="rgb(217,24,9)" fg:x="10395" fg:w="171"/><text x="53.1400%" y="126.50"></text></g><g><title>wrapper_fn (wandb/sdk/wandb_run.py:370) (171 samples, 0.87%)</title><rect x="52.8900%" y="132" width="0.8701%" height="15" fill="rgb(220,13,46)" fg:x="10395" fg:w="171"/><text x="53.1400%" y="142.50"></text></g><g><title>wrapper (wandb/sdk/wandb_run.py:360) (171 samples, 0.87%)</title><rect x="52.8900%" y="148" width="0.8701%" height="15" fill="rgb(239,221,27)" fg:x="10395" fg:w="171"/><text x="53.1400%" y="158.50"></text></g><g><title>log (wandb/sdk/wandb_run.py:1792) (169 samples, 0.86%)</title><rect x="52.9002%" y="164" width="0.8599%" height="15" fill="rgb(222,198,25)" fg:x="10397" fg:w="169"/><text x="53.1502%" y="174.50"></text></g><g><title>_amax (numpy/core/_methods.py:41) (34 samples, 0.17%)</title><rect x="53.8923%" y="180" width="0.1730%" height="15" fill="rgb(211,99,13)" fg:x="10592" fg:w="34"/><text x="54.1423%" y="190.50"></text></g><g><title>_get_outer_edges (numpy/lib/histograms.py:321) (59 samples, 0.30%)</title><rect x="53.8923%" y="164" width="0.3002%" height="15" fill="rgb(232,111,31)" fg:x="10592" fg:w="59"/><text x="54.1423%" y="174.50"></text></g><g><title>_amin (numpy/core/_methods.py:45) (25 samples, 0.13%)</title><rect x="54.0653%" y="180" width="0.1272%" height="15" fill="rgb(245,82,37)" fg:x="10626" fg:w="25"/><text x="54.3153%" y="190.50"></text></g><g><title>_get_bin_edges (numpy/lib/histograms.py:426) (65 samples, 0.33%)</title><rect x="53.8923%" y="148" width="0.3307%" height="15" fill="rgb(227,149,46)" fg:x="10592" fg:w="65"/><text x="54.1423%" y="158.50"></text></g><g><title>histogram (numpy/lib/histograms.py:780) (127 samples, 0.65%)</title><rect x="53.8720%" y="132" width="0.6462%" height="15" fill="rgb(218,36,50)" fg:x="10588" fg:w="127"/><text x="54.1220%" y="142.50"></text></g><g><title>_get_bin_edges (numpy/lib/histograms.py:449) (48 samples, 0.24%)</title><rect x="54.2739%" y="148" width="0.2442%" height="15" fill="rgb(226,80,48)" fg:x="10667" fg:w="48"/><text x="54.5239%" y="158.50"></text></g><g><title>histogram (numpy/lib/histograms.py:825) (20 samples, 0.10%)</title><rect x="54.5843%" y="132" width="0.1018%" height="15" fill="rgb(238,224,15)" fg:x="10728" fg:w="20"/><text x="54.8343%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:839) (66 samples, 0.34%)</title><rect x="54.8692%" y="132" width="0.3358%" height="15" fill="rgb(241,136,10)" fg:x="10784" fg:w="66"/><text x="55.1192%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:841) (57 samples, 0.29%)</title><rect x="55.2050%" y="132" width="0.2900%" height="15" fill="rgb(208,32,45)" fg:x="10850" fg:w="57"/><text x="55.4550%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:842) (61 samples, 0.31%)</title><rect x="55.4951%" y="132" width="0.3104%" height="15" fill="rgb(207,135,9)" fg:x="10907" fg:w="61"/><text x="55.7451%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:846) (131 samples, 0.67%)</title><rect x="55.8054%" y="132" width="0.6665%" height="15" fill="rgb(206,86,44)" fg:x="10968" fg:w="131"/><text x="56.0554%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:849) (197 samples, 1.00%)</title><rect x="56.5686%" y="132" width="1.0023%" height="15" fill="rgb(245,177,15)" fg:x="11118" fg:w="197"/><text x="56.8186%" y="142.50"></text></g><g><title>histogram (numpy/lib/histograms.py:850) (45 samples, 0.23%)</title><rect x="57.5710%" y="132" width="0.2290%" height="15" fill="rgb(206,64,50)" fg:x="11315" fg:w="45"/><text x="57.8210%" y="142.50"></text></g><g><title>__init__ (wandb/sdk/data_types/histogram.py:77) (975 samples, 4.96%)</title><rect x="53.8058%" y="116" width="4.9608%" height="15" fill="rgb(234,36,40)" fg:x="10575" fg:w="975"/><text x="54.0558%" y="126.50">__init..</text></g><g><title>histogram (numpy/lib/histograms.py:860) (179 samples, 0.91%)</title><rect x="57.8559%" y="132" width="0.9108%" height="15" fill="rgb(213,64,8)" fg:x="11371" fg:w="179"/><text x="58.1059%" y="142.50"></text></g><g><title>train_model (reward.py:323) (991 samples, 5.04%)</title><rect x="53.7600%" y="100" width="5.0422%" height="15" fill="rgb(210,75,36)" fg:x="10566" fg:w="991"/><text x="54.0100%" y="110.50">train_..</text></g><g><title>train_model (reward.py:354) (34 samples, 0.17%)</title><rect x="58.8023%" y="100" width="0.1730%" height="15" fill="rgb(229,88,21)" fg:x="11557" fg:w="34"/><text x="59.0523%" y="110.50"></text></g><g><title>figure (matplotlib/pyplot.py:934) (34 samples, 0.17%)</title><rect x="58.8023%" y="116" width="0.1730%" height="15" fill="rgb(252,204,47)" fg:x="11557" fg:w="34"/><text x="59.0523%" y="126.50"></text></g><g><title>new_figure_manager (matplotlib/pyplot.py:465) (31 samples, 0.16%)</title><rect x="58.8175%" y="132" width="0.1577%" height="15" fill="rgb(208,77,27)" fg:x="11560" fg:w="31"/><text x="59.0675%" y="142.50"></text></g><g><title>new_figure_manager (matplotlib/backend_bases.py:3411) (31 samples, 0.16%)</title><rect x="58.8175%" y="148" width="0.1577%" height="15" fill="rgb(221,76,26)" fg:x="11560" fg:w="31"/><text x="59.0675%" y="158.50"></text></g><g><title>new_figure_manager_given_figure (matplotlib/backend_bases.py:3416) (31 samples, 0.16%)</title><rect x="58.8175%" y="164" width="0.1577%" height="15" fill="rgb(225,139,18)" fg:x="11560" fg:w="31"/><text x="59.0675%" y="174.50"></text></g><g><title>new_manager (matplotlib/backend_bases.py:1785) (31 samples, 0.16%)</title><rect x="58.8175%" y="180" width="0.1577%" height="15" fill="rgb(230,137,11)" fg:x="11560" fg:w="31"/><text x="59.0675%" y="190.50"></text></g><g><title>create_with_canvas (matplotlib/backend_bases.py:2690) (31 samples, 0.16%)</title><rect x="58.8175%" y="196" width="0.1577%" height="15" fill="rgb(212,28,1)" fg:x="11560" fg:w="31"/><text x="59.0675%" y="206.50"></text></g><g><title>&lt;module&gt; (main.py:198) (9,062 samples, 46.11%)</title><rect x="12.9287%" y="68" width="46.1077%" height="15" fill="rgb(248,164,17)" fg:x="2541" fg:w="9062"/><text x="13.1787%" y="78.50">&lt;module&gt; (main.py:198)</text></g><g><title>train_reward_function (reward.py:425) (9,010 samples, 45.84%)</title><rect x="13.1932%" y="84" width="45.8431%" height="15" fill="rgb(222,171,42)" fg:x="2593" fg:w="9010"/><text x="13.4432%" y="94.50">train_reward_function (reward.py:425)</text></g><g><title>run_simulation (agent.py:301) (97 samples, 0.49%)</title><rect x="59.0821%" y="132" width="0.4935%" height="15" fill="rgb(243,84,45)" fg:x="11612" fg:w="97"/><text x="59.3321%" y="142.50"></text></g><g><title>__init__ (agent.py:55) (97 samples, 0.49%)</title><rect x="59.0821%" y="148" width="0.4935%" height="15" fill="rgb(252,49,23)" fg:x="11612" fg:w="97"/><text x="59.3321%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:16) (31 samples, 0.16%)</title><rect x="59.9827%" y="148" width="0.1577%" height="15" fill="rgb(215,19,7)" fg:x="11789" fg:w="31"/><text x="60.2327%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:19) (22 samples, 0.11%)</title><rect x="60.2015%" y="148" width="0.1119%" height="15" fill="rgb(238,81,41)" fg:x="11832" fg:w="22"/><text x="60.4515%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:21) (38 samples, 0.19%)</title><rect x="60.4050%" y="148" width="0.1933%" height="15" fill="rgb(210,199,37)" fg:x="11872" fg:w="38"/><text x="60.6550%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:22) (195 samples, 0.99%)</title><rect x="60.5984%" y="148" width="0.9922%" height="15" fill="rgb(244,192,49)" fg:x="11910" fg:w="195"/><text x="60.8484%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:23) (98 samples, 0.50%)</title><rect x="61.5905%" y="148" width="0.4986%" height="15" fill="rgb(226,211,11)" fg:x="12105" fg:w="98"/><text x="61.8405%" y="158.50"></text></g><g><title>sum_aggregation (neat/aggregations.py:21) (61 samples, 0.31%)</title><rect x="61.7788%" y="164" width="0.3104%" height="15" fill="rgb(236,162,54)" fg:x="12142" fg:w="61"/><text x="62.0288%" y="174.50"></text></g><g><title>tanh_activation (neat/activations.py:17) (104 samples, 0.53%)</title><rect x="62.4962%" y="164" width="0.5292%" height="15" fill="rgb(220,229,9)" fg:x="12283" fg:w="104"/><text x="62.7462%" y="174.50"></text></g><g><title>activate (neat/nn/feed_forward.py:24) (209 samples, 1.06%)</title><rect x="62.0891%" y="148" width="1.0634%" height="15" fill="rgb(250,87,22)" fg:x="12203" fg:w="209"/><text x="62.3391%" y="158.50"></text></g><g><title>tanh_activation (neat/activations.py:18) (25 samples, 0.13%)</title><rect x="63.0253%" y="164" width="0.1272%" height="15" fill="rgb(239,43,17)" fg:x="12387" fg:w="25"/><text x="63.2753%" y="174.50"></text></g><g><title>activate (neat/nn/feed_forward.py:26) (41 samples, 0.21%)</title><rect x="63.1525%" y="148" width="0.2086%" height="15" fill="rgb(231,177,25)" fg:x="12412" fg:w="41"/><text x="63.4025%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (neat/nn/feed_forward.py:26) (23 samples, 0.12%)</title><rect x="63.2441%" y="164" width="0.1170%" height="15" fill="rgb(219,179,1)" fg:x="12430" fg:w="23"/><text x="63.4941%" y="174.50"></text></g><g><title>get_data (agent.py:193) (32 samples, 0.16%)</title><rect x="63.3815%" y="148" width="0.1628%" height="15" fill="rgb(238,219,53)" fg:x="12457" fg:w="32"/><text x="63.6315%" y="158.50"></text></g><g><title>run_simulation (agent.py:324) (806 samples, 4.10%)</title><rect x="59.7232%" y="132" width="4.1009%" height="15" fill="rgb(232,167,36)" fg:x="11738" fg:w="806"/><text x="59.9732%" y="142.50">run_..</text></g><g><title>get_data (agent.py:194) (55 samples, 0.28%)</title><rect x="63.5443%" y="148" width="0.2798%" height="15" fill="rgb(244,19,51)" fg:x="12489" fg:w="55"/><text x="63.7943%" y="158.50"></text></g><g><title>run_simulation (agent.py:325) (20 samples, 0.10%)</title><rect x="63.8242%" y="132" width="0.1018%" height="15" fill="rgb(224,6,22)" fg:x="12544" fg:w="20"/><text x="64.0742%" y="142.50"></text></g><g><title>rotate_center (agent.py:214) (26 samples, 0.13%)</title><rect x="64.1244%" y="164" width="0.1323%" height="15" fill="rgb(224,145,5)" fg:x="12603" fg:w="26"/><text x="64.3744%" y="174.50"></text></g><g><title>update (agent.py:138) (36 samples, 0.18%)</title><rect x="64.1193%" y="148" width="0.1832%" height="15" fill="rgb(234,130,49)" fg:x="12602" fg:w="36"/><text x="64.3693%" y="158.50"></text></g><g><title>check_radar (agent.py:112) (656 samples, 3.34%)</title><rect x="64.5263%" y="164" width="3.3377%" height="15" fill="rgb(254,6,2)" fg:x="12682" fg:w="656"/><text x="64.7763%" y="174.50">che..</text></g><g><title>check_radar (agent.py:113) (29 samples, 0.15%)</title><rect x="67.8640%" y="164" width="0.1476%" height="15" fill="rgb(208,96,46)" fg:x="13338" fg:w="29"/><text x="68.1140%" y="174.50"></text></g><g><title>check_radar (agent.py:114) (96 samples, 0.49%)</title><rect x="68.0116%" y="164" width="0.4885%" height="15" fill="rgb(239,3,39)" fg:x="13367" fg:w="96"/><text x="68.2616%" y="174.50"></text></g><g><title>check_radar (agent.py:115) (68 samples, 0.35%)</title><rect x="68.5001%" y="164" width="0.3460%" height="15" fill="rgb(233,210,1)" fg:x="13463" fg:w="68"/><text x="68.7501%" y="174.50"></text></g><g><title>check_radar (agent.py:116) (317 samples, 1.61%)</title><rect x="68.8460%" y="164" width="1.6129%" height="15" fill="rgb(244,137,37)" fg:x="13531" fg:w="317"/><text x="69.0960%" y="174.50"></text></g><g><title>check_radar (agent.py:118) (123 samples, 0.63%)</title><rect x="70.4589%" y="164" width="0.6258%" height="15" fill="rgb(240,136,2)" fg:x="13848" fg:w="123"/><text x="70.7089%" y="174.50"></text></g><g><title>check_radar (agent.py:119) (64 samples, 0.33%)</title><rect x="71.0848%" y="164" width="0.3256%" height="15" fill="rgb(239,18,37)" fg:x="13971" fg:w="64"/><text x="71.3348%" y="174.50"></text></g><g><title>check_radar (agent.py:120) (315 samples, 1.60%)</title><rect x="71.4104%" y="164" width="1.6027%" height="15" fill="rgb(218,185,22)" fg:x="14035" fg:w="315"/><text x="71.6604%" y="174.50"></text></g><g><title>update (agent.py:185) (1,692 samples, 8.61%)</title><rect x="64.4347%" y="148" width="8.6089%" height="15" fill="rgb(225,218,4)" fg:x="12664" fg:w="1692"/><text x="64.6847%" y="158.50">update (agen..</text></g><g><title>run_simulation (agent.py:343) (1,760 samples, 8.95%)</title><rect x="64.1091%" y="132" width="8.9549%" height="15" fill="rgb(230,182,32)" fg:x="12600" fg:w="1760"/><text x="64.3591%" y="142.50">run_simulatio..</text></g><g><title>run_simulation (agent.py:380) (129 samples, 0.66%)</title><rect x="73.0793%" y="132" width="0.6564%" height="15" fill="rgb(242,56,43)" fg:x="14363" fg:w="129"/><text x="73.3293%" y="142.50"></text></g><g><title>run_population (agent.py:432) (2,921 samples, 14.86%)</title><rect x="59.0363%" y="100" width="14.8621%" height="15" fill="rgb(233,99,24)" fg:x="11603" fg:w="2921"/><text x="59.2863%" y="110.50">run_population (agent.p..</text></g><g><title>run (neat/population.py:89) (2,916 samples, 14.84%)</title><rect x="59.0618%" y="116" width="14.8367%" height="15" fill="rgb(234,209,42)" fg:x="11608" fg:w="2916"/><text x="59.3118%" y="126.50">run (neat/population.py..</text></g><g><title>&lt;module&gt; (main.py:203) (2,928 samples, 14.90%)</title><rect x="59.0363%" y="68" width="14.8977%" height="15" fill="rgb(227,7,12)" fg:x="11603" fg:w="2928"/><text x="59.2863%" y="78.50">&lt;module&gt; (main.py:203)</text></g><g><title>start_simulation (main.py:27) (2,928 samples, 14.90%)</title><rect x="59.0363%" y="84" width="14.8977%" height="15" fill="rgb(245,203,43)" fg:x="11603" fg:w="2928"/><text x="59.2863%" y="94.50">start_simulation (main...</text></g><g><title>run_simulation (agent.py:301) (96 samples, 0.49%)</title><rect x="73.9493%" y="132" width="0.4885%" height="15" fill="rgb(238,205,33)" fg:x="14534" fg:w="96"/><text x="74.1993%" y="142.50"></text></g><g><title>__init__ (agent.py:55) (96 samples, 0.49%)</title><rect x="73.9493%" y="148" width="0.4885%" height="15" fill="rgb(231,56,7)" fg:x="14534" fg:w="96"/><text x="74.1993%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:22) (111 samples, 0.56%)</title><rect x="75.0178%" y="148" width="0.5648%" height="15" fill="rgb(244,186,29)" fg:x="14744" fg:w="111"/><text x="75.2678%" y="158.50"></text></g><g><title>activate (neat/nn/feed_forward.py:23) (39 samples, 0.20%)</title><rect x="75.5826%" y="148" width="0.1984%" height="15" fill="rgb(234,111,31)" fg:x="14855" fg:w="39"/><text x="75.8326%" y="158.50"></text></g><g><title>sum_aggregation (neat/aggregations.py:21) (27 samples, 0.14%)</title><rect x="75.6436%" y="164" width="0.1374%" height="15" fill="rgb(241,149,10)" fg:x="14867" fg:w="27"/><text x="75.8936%" y="174.50"></text></g><g><title>tanh_activation (neat/activations.py:17) (58 samples, 0.30%)</title><rect x="75.9184%" y="164" width="0.2951%" height="15" fill="rgb(249,206,44)" fg:x="14921" fg:w="58"/><text x="76.1684%" y="174.50"></text></g><g><title>activate (neat/nn/feed_forward.py:24) (99 samples, 0.50%)</title><rect x="75.7810%" y="148" width="0.5037%" height="15" fill="rgb(251,153,30)" fg:x="14894" fg:w="99"/><text x="76.0310%" y="158.50"></text></g><g><title>run_simulation (agent.py:324) (408 samples, 2.08%)</title><rect x="74.6006%" y="132" width="2.0759%" height="15" fill="rgb(239,152,38)" fg:x="14662" fg:w="408"/><text x="74.8506%" y="142.50">r..</text></g><g><title>get_data (agent.py:194) (37 samples, 0.19%)</title><rect x="76.4882%" y="148" width="0.1883%" height="15" fill="rgb(249,139,47)" fg:x="15033" fg:w="37"/><text x="76.7382%" y="158.50"></text></g><g><title>prepare_single_trajectory (reward.py:146) (131 samples, 0.67%)</title><rect x="77.2311%" y="164" width="0.6665%" height="15" fill="rgb(244,64,35)" fg:x="15179" fg:w="131"/><text x="77.4811%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (reward.py:146) (130 samples, 0.66%)</title><rect x="77.2362%" y="180" width="0.6614%" height="15" fill="rgb(216,46,15)" fg:x="15180" fg:w="130"/><text x="77.4862%" y="190.50"></text></g><g><title>get_reward (agent.py:206) (369 samples, 1.88%)</title><rect x="77.1344%" y="148" width="1.8775%" height="15" fill="rgb(250,74,19)" fg:x="15160" fg:w="369"/><text x="77.3844%" y="158.50">g..</text></g><g><title>prepare_single_trajectory (reward.py:149) (219 samples, 1.11%)</title><rect x="77.8976%" y="164" width="1.1143%" height="15" fill="rgb(249,42,33)" fg:x="15310" fg:w="219"/><text x="78.1476%" y="174.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (230 samples, 1.17%)</title><rect x="79.2103%" y="244" width="1.1702%" height="15" fill="rgb(242,149,17)" fg:x="15568" fg:w="230"/><text x="79.4603%" y="254.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:201) (38 samples, 0.19%)</title><rect x="80.3806%" y="244" width="0.1933%" height="15" fill="rgb(244,29,21)" fg:x="15798" fg:w="38"/><text x="80.6306%" y="254.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2546) (36 samples, 0.18%)</title><rect x="80.3908%" y="260" width="0.1832%" height="15" fill="rgb(220,130,37)" fg:x="15800" fg:w="36"/><text x="80.6408%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (296 samples, 1.51%)</title><rect x="79.1340%" y="212" width="1.5061%" height="15" fill="rgb(211,67,2)" fg:x="15553" fg:w="296"/><text x="79.3840%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (282 samples, 1.43%)</title><rect x="79.2053%" y="228" width="1.4348%" height="15" fill="rgb(235,68,52)" fg:x="15567" fg:w="282"/><text x="79.4553%" y="238.50"></text></g><g><title>forward (reward.py:45) (325 samples, 1.65%)</title><rect x="79.0628%" y="196" width="1.6536%" height="15" fill="rgb(246,142,3)" fg:x="15539" fg:w="325"/><text x="79.3128%" y="206.50"></text></g><g><title>forward (reward.py:46) (67 samples, 0.34%)</title><rect x="80.7164%" y="196" width="0.3409%" height="15" fill="rgb(241,25,7)" fg:x="15864" fg:w="67"/><text x="80.9664%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (54 samples, 0.27%)</title><rect x="80.7825%" y="212" width="0.2748%" height="15" fill="rgb(242,119,39)" fg:x="15877" fg:w="54"/><text x="81.0325%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (52 samples, 0.26%)</title><rect x="80.7927%" y="228" width="0.2646%" height="15" fill="rgb(241,98,45)" fg:x="15879" fg:w="52"/><text x="81.0427%" y="238.50"></text></g><g><title>forward (torch/nn/modules/dropout.py:59) (52 samples, 0.26%)</title><rect x="80.7927%" y="244" width="0.2646%" height="15" fill="rgb(254,28,30)" fg:x="15879" fg:w="52"/><text x="81.0427%" y="254.50"></text></g><g><title>dropout (torch/nn/functional.py:1268) (48 samples, 0.24%)</title><rect x="80.8131%" y="260" width="0.2442%" height="15" fill="rgb(241,142,54)" fg:x="15883" fg:w="48"/><text x="81.0631%" y="270.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (133 samples, 0.68%)</title><rect x="81.1896%" y="244" width="0.6767%" height="15" fill="rgb(222,85,15)" fg:x="15957" fg:w="133"/><text x="81.4396%" y="254.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:201) (22 samples, 0.11%)</title><rect x="81.8663%" y="244" width="0.1119%" height="15" fill="rgb(210,85,47)" fg:x="16090" fg:w="22"/><text x="82.1163%" y="254.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2546) (20 samples, 0.10%)</title><rect x="81.8765%" y="260" width="0.1018%" height="15" fill="rgb(224,206,25)" fg:x="16092" fg:w="20"/><text x="82.1265%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (171 samples, 0.87%)</title><rect x="81.1489%" y="212" width="0.8701%" height="15" fill="rgb(243,201,19)" fg:x="15949" fg:w="171"/><text x="81.3989%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (163 samples, 0.83%)</title><rect x="81.1896%" y="228" width="0.8293%" height="15" fill="rgb(236,59,4)" fg:x="15957" fg:w="163"/><text x="81.4396%" y="238.50"></text></g><g><title>forward (reward.py:47) (198 samples, 1.01%)</title><rect x="81.0573%" y="196" width="1.0074%" height="15" fill="rgb(254,179,45)" fg:x="15931" fg:w="198"/><text x="81.3073%" y="206.50"></text></g><g><title>forward (reward.py:48) (55 samples, 0.28%)</title><rect x="82.0647%" y="196" width="0.2798%" height="15" fill="rgb(226,14,10)" fg:x="16129" fg:w="55"/><text x="82.3147%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (44 samples, 0.22%)</title><rect x="82.1207%" y="212" width="0.2239%" height="15" fill="rgb(244,27,41)" fg:x="16140" fg:w="44"/><text x="82.3707%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (37 samples, 0.19%)</title><rect x="82.1563%" y="228" width="0.1883%" height="15" fill="rgb(235,35,32)" fg:x="16147" fg:w="37"/><text x="82.4063%" y="238.50"></text></g><g><title>forward (torch/nn/modules/dropout.py:59) (37 samples, 0.19%)</title><rect x="82.1563%" y="244" width="0.1883%" height="15" fill="rgb(218,68,31)" fg:x="16147" fg:w="37"/><text x="82.4063%" y="254.50"></text></g><g><title>dropout (torch/nn/functional.py:1268) (34 samples, 0.17%)</title><rect x="82.1716%" y="260" width="0.1730%" height="15" fill="rgb(207,120,37)" fg:x="16150" fg:w="34"/><text x="82.4216%" y="270.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (27 samples, 0.14%)</title><rect x="82.4158%" y="244" width="0.1374%" height="15" fill="rgb(227,98,0)" fg:x="16198" fg:w="27"/><text x="82.6658%" y="254.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:201) (29 samples, 0.15%)</title><rect x="82.5532%" y="244" width="0.1476%" height="15" fill="rgb(207,7,3)" fg:x="16225" fg:w="29"/><text x="82.8032%" y="254.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2546) (27 samples, 0.14%)</title><rect x="82.5633%" y="260" width="0.1374%" height="15" fill="rgb(206,98,19)" fg:x="16227" fg:w="27"/><text x="82.8133%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (65 samples, 0.33%)</title><rect x="82.3904%" y="212" width="0.3307%" height="15" fill="rgb(217,5,26)" fg:x="16193" fg:w="65"/><text x="82.6404%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (61 samples, 0.31%)</title><rect x="82.4107%" y="228" width="0.3104%" height="15" fill="rgb(235,190,38)" fg:x="16197" fg:w="61"/><text x="82.6607%" y="238.50"></text></g><g><title>forward (reward.py:49) (85 samples, 0.43%)</title><rect x="82.3446%" y="196" width="0.4325%" height="15" fill="rgb(247,86,24)" fg:x="16184" fg:w="85"/><text x="82.5946%" y="206.50"></text></g><g><title>forward (reward.py:50) (61 samples, 0.31%)</title><rect x="82.7770%" y="196" width="0.3104%" height="15" fill="rgb(205,101,16)" fg:x="16269" fg:w="61"/><text x="83.0270%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (54 samples, 0.27%)</title><rect x="82.8127%" y="212" width="0.2748%" height="15" fill="rgb(246,168,33)" fg:x="16276" fg:w="54"/><text x="83.0627%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (50 samples, 0.25%)</title><rect x="82.8330%" y="228" width="0.2544%" height="15" fill="rgb(231,114,1)" fg:x="16280" fg:w="50"/><text x="83.0830%" y="238.50"></text></g><g><title>forward (torch/nn/modules/dropout.py:59) (49 samples, 0.25%)</title><rect x="82.8381%" y="244" width="0.2493%" height="15" fill="rgb(207,184,53)" fg:x="16281" fg:w="49"/><text x="83.0881%" y="254.50"></text></g><g><title>dropout (torch/nn/functional.py:1268) (47 samples, 0.24%)</title><rect x="82.8483%" y="260" width="0.2391%" height="15" fill="rgb(224,95,51)" fg:x="16283" fg:w="47"/><text x="83.0983%" y="270.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (31 samples, 0.16%)</title><rect x="83.1586%" y="244" width="0.1577%" height="15" fill="rgb(212,188,45)" fg:x="16344" fg:w="31"/><text x="83.4086%" y="254.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:201) (25 samples, 0.13%)</title><rect x="83.3164%" y="244" width="0.1272%" height="15" fill="rgb(223,154,38)" fg:x="16375" fg:w="25"/><text x="83.5664%" y="254.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2546) (25 samples, 0.13%)</title><rect x="83.3164%" y="260" width="0.1272%" height="15" fill="rgb(251,22,52)" fg:x="16375" fg:w="25"/><text x="83.5664%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (65 samples, 0.33%)</title><rect x="83.1281%" y="212" width="0.3307%" height="15" fill="rgb(229,209,22)" fg:x="16338" fg:w="65"/><text x="83.3781%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (60 samples, 0.31%)</title><rect x="83.1536%" y="228" width="0.3053%" height="15" fill="rgb(234,138,34)" fg:x="16343" fg:w="60"/><text x="83.4036%" y="238.50"></text></g><g><title>forward (reward.py:51) (82 samples, 0.42%)</title><rect x="83.0874%" y="196" width="0.4172%" height="15" fill="rgb(212,95,11)" fg:x="16330" fg:w="82"/><text x="83.3374%" y="206.50"></text></g><g><title>forward (reward.py:52) (51 samples, 0.26%)</title><rect x="83.5046%" y="196" width="0.2595%" height="15" fill="rgb(240,179,47)" fg:x="16412" fg:w="51"/><text x="83.7546%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (44 samples, 0.22%)</title><rect x="83.5402%" y="212" width="0.2239%" height="15" fill="rgb(240,163,11)" fg:x="16419" fg:w="44"/><text x="83.7902%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (41 samples, 0.21%)</title><rect x="83.5555%" y="228" width="0.2086%" height="15" fill="rgb(236,37,12)" fg:x="16422" fg:w="41"/><text x="83.8055%" y="238.50"></text></g><g><title>forward (torch/nn/modules/dropout.py:59) (41 samples, 0.21%)</title><rect x="83.5555%" y="244" width="0.2086%" height="15" fill="rgb(232,164,16)" fg:x="16422" fg:w="41"/><text x="83.8055%" y="254.50"></text></g><g><title>dropout (torch/nn/functional.py:1268) (38 samples, 0.19%)</title><rect x="83.5708%" y="260" width="0.1933%" height="15" fill="rgb(244,205,15)" fg:x="16425" fg:w="38"/><text x="83.8208%" y="270.50"></text></g><g><title>get_reward (agent.py:207) (980 samples, 4.99%)</title><rect x="79.0119%" y="148" width="4.9863%" height="15" fill="rgb(223,117,47)" fg:x="15529" fg:w="980"/><text x="79.2619%" y="158.50">get_re..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (976 samples, 4.97%)</title><rect x="79.0323%" y="164" width="4.9659%" height="15" fill="rgb(244,107,35)" fg:x="15533" fg:w="976"/><text x="79.2823%" y="174.50">_wrapp..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (971 samples, 4.94%)</title><rect x="79.0577%" y="180" width="4.9405%" height="15" fill="rgb(205,140,8)" fg:x="15538" fg:w="971"/><text x="79.3077%" y="190.50">_call_..</text></g><g><title>forward (reward.py:53) (46 samples, 0.23%)</title><rect x="83.7641%" y="196" width="0.2340%" height="15" fill="rgb(228,84,46)" fg:x="16463" fg:w="46"/><text x="84.0141%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1511) (41 samples, 0.21%)</title><rect x="83.7896%" y="212" width="0.2086%" height="15" fill="rgb(254,188,9)" fg:x="16468" fg:w="41"/><text x="84.0396%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1520) (36 samples, 0.18%)</title><rect x="83.8150%" y="228" width="0.1832%" height="15" fill="rgb(206,112,54)" fg:x="16473" fg:w="36"/><text x="84.0650%" y="238.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (35 samples, 0.18%)</title><rect x="83.8201%" y="244" width="0.1781%" height="15" fill="rgb(216,84,49)" fg:x="16474" fg:w="35"/><text x="84.0701%" y="254.50"></text></g><g><title>rotate_center (agent.py:214) (39 samples, 0.20%)</title><rect x="84.0694%" y="164" width="0.1984%" height="15" fill="rgb(214,194,35)" fg:x="16523" fg:w="39"/><text x="84.3194%" y="174.50"></text></g><g><title>update (agent.py:138) (64 samples, 0.33%)</title><rect x="84.0389%" y="148" width="0.3256%" height="15" fill="rgb(249,28,3)" fg:x="16517" fg:w="64"/><text x="84.2889%" y="158.50"></text></g><g><title>check_radar (agent.py:112) (957 samples, 4.87%)</title><rect x="84.6647%" y="164" width="4.8692%" height="15" fill="rgb(222,56,52)" fg:x="16640" fg:w="957"/><text x="84.9147%" y="174.50">check_..</text></g><g><title>check_radar (agent.py:113) (35 samples, 0.18%)</title><rect x="89.5339%" y="164" width="0.1781%" height="15" fill="rgb(245,217,50)" fg:x="17597" fg:w="35"/><text x="89.7839%" y="174.50"></text></g><g><title>check_radar (agent.py:114) (149 samples, 0.76%)</title><rect x="89.7120%" y="164" width="0.7581%" height="15" fill="rgb(213,201,24)" fg:x="17632" fg:w="149"/><text x="89.9620%" y="174.50"></text></g><g><title>check_radar (agent.py:115) (98 samples, 0.50%)</title><rect x="90.4701%" y="164" width="0.4986%" height="15" fill="rgb(248,116,28)" fg:x="17781" fg:w="98"/><text x="90.7201%" y="174.50"></text></g><g><title>check_radar (agent.py:116) (451 samples, 2.29%)</title><rect x="90.9688%" y="164" width="2.2947%" height="15" fill="rgb(219,72,43)" fg:x="17879" fg:w="451"/><text x="91.2188%" y="174.50">c..</text></g><g><title>check_radar (agent.py:118) (144 samples, 0.73%)</title><rect x="93.2635%" y="164" width="0.7327%" height="15" fill="rgb(209,138,14)" fg:x="18330" fg:w="144"/><text x="93.5135%" y="174.50"></text></g><g><title>check_radar (agent.py:119) (73 samples, 0.37%)</title><rect x="93.9961%" y="164" width="0.3714%" height="15" fill="rgb(222,18,33)" fg:x="18474" fg:w="73"/><text x="94.2461%" y="174.50"></text></g><g><title>check_radar (agent.py:120) (447 samples, 2.27%)</title><rect x="94.3676%" y="164" width="2.2743%" height="15" fill="rgb(213,199,7)" fg:x="18547" fg:w="447"/><text x="94.6176%" y="174.50">c..</text></g><g><title>run_simulation (agent.py:343) (3,892 samples, 19.80%)</title><rect x="76.9004%" y="132" width="19.8026%" height="15" fill="rgb(250,110,10)" fg:x="15114" fg:w="3892"/><text x="77.1504%" y="142.50">run_simulation (agent.py:343)</text></g><g><title>update (agent.py:185) (2,382 samples, 12.12%)</title><rect x="84.5833%" y="148" width="12.1197%" height="15" fill="rgb(248,123,6)" fg:x="16624" fg:w="2382"/><text x="84.8333%" y="158.50">update (agent.py:1..</text></g><g><title>run_simulation (agent.py:380) (165 samples, 0.84%)</title><rect x="96.7844%" y="132" width="0.8395%" height="15" fill="rgb(206,91,31)" fg:x="19022" fg:w="165"/><text x="97.0344%" y="142.50"></text></g><g><title>run_population (agent.py:432) (4,696 samples, 23.89%)</title><rect x="73.9341%" y="100" width="23.8934%" height="15" fill="rgb(211,154,13)" fg:x="14531" fg:w="4696"/><text x="74.1841%" y="110.50">run_population (agent.py:432)</text></g><g><title>run (neat/population.py:89) (4,695 samples, 23.89%)</title><rect x="73.9391%" y="116" width="23.8883%" height="15" fill="rgb(225,148,7)" fg:x="14532" fg:w="4695"/><text x="74.1891%" y="126.50">run (neat/population.py:89)</text></g><g><title>generate_database (agent.py:231) (27 samples, 0.14%)</title><rect x="97.8376%" y="116" width="0.1374%" height="15" fill="rgb(220,160,43)" fg:x="19229" fg:w="27"/><text x="98.0876%" y="126.50"></text></g><g><title>&lt;module&gt; (main.py:213) (4,726 samples, 24.05%)</title><rect x="73.9341%" y="68" width="24.0460%" height="15" fill="rgb(213,52,39)" fg:x="14531" fg:w="4726"/><text x="74.1841%" y="78.50">&lt;module&gt; (main.py:213)</text></g><g><title>start_simulation (main.py:27) (4,726 samples, 24.05%)</title><rect x="73.9341%" y="84" width="24.0460%" height="15" fill="rgb(243,137,7)" fg:x="14531" fg:w="4726"/><text x="74.1841%" y="94.50">start_simulation (main.py:27)</text></g><g><title>run_population (agent.py:440) (30 samples, 0.15%)</title><rect x="97.8274%" y="100" width="0.1526%" height="15" fill="rgb(230,79,13)" fg:x="19227" fg:w="30"/><text x="98.0774%" y="110.50"></text></g><g><title>handle_plotting (main.py:48) (44 samples, 0.22%)</title><rect x="97.9801%" y="84" width="0.2239%" height="15" fill="rgb(247,105,23)" fg:x="19257" fg:w="44"/><text x="98.2301%" y="94.50"></text></g><g><title>&lt;module&gt; (main.py:220) (72 samples, 0.37%)</title><rect x="97.9801%" y="68" width="0.3663%" height="15" fill="rgb(223,179,41)" fg:x="19257" fg:w="72"/><text x="98.2301%" y="78.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1857) (22 samples, 0.11%)</title><rect x="98.5092%" y="260" width="0.1119%" height="15" fill="rgb(218,9,34)" fg:x="19361" fg:w="22"/><text x="98.7592%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (22 samples, 0.11%)</title><rect x="98.5092%" y="276" width="0.1119%" height="15" fill="rgb(222,106,8)" fg:x="19361" fg:w="22"/><text x="98.7592%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (22 samples, 0.11%)</title><rect x="98.5092%" y="292" width="0.1119%" height="15" fill="rgb(211,220,0)" fg:x="19361" fg:w="22"/><text x="98.7592%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (22 samples, 0.11%)</title><rect x="98.5092%" y="308" width="0.1119%" height="15" fill="rgb(229,52,16)" fg:x="19361" fg:w="22"/><text x="98.7592%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (22 samples, 0.11%)</title><rect x="98.5092%" y="324" width="0.1119%" height="15" fill="rgb(212,155,18)" fg:x="19361" fg:w="22"/><text x="98.7592%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (22 samples, 0.11%)</title><rect x="98.5092%" y="340" width="0.1119%" height="15" fill="rgb(242,21,14)" fg:x="19361" fg:w="22"/><text x="98.7592%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (22 samples, 0.11%)</title><rect x="98.5092%" y="356" width="0.1119%" height="15" fill="rgb(222,19,48)" fg:x="19361" fg:w="22"/><text x="98.7592%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (22 samples, 0.11%)</title><rect x="98.5092%" y="372" width="0.1119%" height="15" fill="rgb(232,45,27)" fg:x="19361" fg:w="22"/><text x="98.7592%" y="382.50"></text></g><g><title>&lt;module&gt; (reward.py:1) (120 samples, 0.61%)</title><rect x="98.3464%" y="164" width="0.6106%" height="15" fill="rgb(249,103,42)" fg:x="19329" fg:w="120"/><text x="98.5964%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (120 samples, 0.61%)</title><rect x="98.3464%" y="180" width="0.6106%" height="15" fill="rgb(246,81,33)" fg:x="19329" fg:w="120"/><text x="98.5964%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (120 samples, 0.61%)</title><rect x="98.3464%" y="196" width="0.6106%" height="15" fill="rgb(252,33,42)" fg:x="19329" fg:w="120"/><text x="98.5964%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (120 samples, 0.61%)</title><rect x="98.3464%" y="212" width="0.6106%" height="15" fill="rgb(209,212,41)" fg:x="19329" fg:w="120"/><text x="98.5964%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (120 samples, 0.61%)</title><rect x="98.3464%" y="228" width="0.6106%" height="15" fill="rgb(207,154,6)" fg:x="19329" fg:w="120"/><text x="98.5964%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (120 samples, 0.61%)</title><rect x="98.3464%" y="244" width="0.6106%" height="15" fill="rgb(223,64,47)" fg:x="19329" fg:w="120"/><text x="98.5964%" y="254.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:241) (66 samples, 0.34%)</title><rect x="98.6211%" y="260" width="0.3358%" height="15" fill="rgb(211,161,38)" fg:x="19383" fg:w="66"/><text x="98.8711%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (66 samples, 0.34%)</title><rect x="98.6211%" y="276" width="0.3358%" height="15" fill="rgb(219,138,40)" fg:x="19383" fg:w="66"/><text x="98.8711%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (66 samples, 0.34%)</title><rect x="98.6211%" y="292" width="0.3358%" height="15" fill="rgb(241,228,46)" fg:x="19383" fg:w="66"/><text x="98.8711%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:674) (66 samples, 0.34%)</title><rect x="98.6211%" y="308" width="0.3358%" height="15" fill="rgb(223,209,38)" fg:x="19383" fg:w="66"/><text x="98.8711%" y="318.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:571) (66 samples, 0.34%)</title><rect x="98.6211%" y="324" width="0.3358%" height="15" fill="rgb(236,164,45)" fg:x="19383" fg:w="66"/><text x="98.8711%" y="334.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1176) (66 samples, 0.34%)</title><rect x="98.6211%" y="340" width="0.3358%" height="15" fill="rgb(231,15,5)" fg:x="19383" fg:w="66"/><text x="98.8711%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (66 samples, 0.34%)</title><rect x="98.6211%" y="356" width="0.3358%" height="15" fill="rgb(252,35,15)" fg:x="19383" fg:w="66"/><text x="98.8711%" y="366.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:606) (38 samples, 0.19%)</title><rect x="99.0587%" y="1124" width="0.1933%" height="15" fill="rgb(248,181,18)" fg:x="19469" fg:w="38"/><text x="99.3087%" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (38 samples, 0.19%)</title><rect x="99.0587%" y="1140" width="0.1933%" height="15" fill="rgb(233,39,42)" fg:x="19469" fg:w="38"/><text x="99.3087%" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (38 samples, 0.19%)</title><rect x="99.0587%" y="1156" width="0.1933%" height="15" fill="rgb(238,110,33)" fg:x="19469" fg:w="38"/><text x="99.3087%" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (38 samples, 0.19%)</title><rect x="99.0587%" y="1172" width="0.1933%" height="15" fill="rgb(233,195,10)" fg:x="19469" fg:w="38"/><text x="99.3087%" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (38 samples, 0.19%)</title><rect x="99.0587%" y="1188" width="0.1933%" height="15" fill="rgb(254,105,3)" fg:x="19469" fg:w="38"/><text x="99.3087%" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (38 samples, 0.19%)</title><rect x="99.0587%" y="1204" width="0.1933%" height="15" fill="rgb(221,225,9)" fg:x="19469" fg:w="38"/><text x="99.3087%" y="1214.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_array_api.py:11) (40 samples, 0.20%)</title><rect x="99.0587%" y="932" width="0.2035%" height="15" fill="rgb(224,227,45)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (40 samples, 0.20%)</title><rect x="99.0587%" y="948" width="0.2035%" height="15" fill="rgb(229,198,43)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (40 samples, 0.20%)</title><rect x="99.0587%" y="964" width="0.2035%" height="15" fill="rgb(206,209,35)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (40 samples, 0.20%)</title><rect x="99.0587%" y="980" width="0.2035%" height="15" fill="rgb(245,195,53)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (40 samples, 0.20%)</title><rect x="99.0587%" y="996" width="0.2035%" height="15" fill="rgb(240,92,26)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (40 samples, 0.20%)</title><rect x="99.0587%" y="1012" width="0.2035%" height="15" fill="rgb(207,40,23)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="1022.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:20) (40 samples, 0.20%)</title><rect x="99.0587%" y="1028" width="0.2035%" height="15" fill="rgb(223,111,35)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (40 samples, 0.20%)</title><rect x="99.0587%" y="1044" width="0.2035%" height="15" fill="rgb(229,147,28)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (40 samples, 0.20%)</title><rect x="99.0587%" y="1060" width="0.2035%" height="15" fill="rgb(211,29,28)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (40 samples, 0.20%)</title><rect x="99.0587%" y="1076" width="0.2035%" height="15" fill="rgb(228,72,33)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (40 samples, 0.20%)</title><rect x="99.0587%" y="1092" width="0.2035%" height="15" fill="rgb(205,214,31)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (40 samples, 0.20%)</title><rect x="99.0587%" y="1108" width="0.2035%" height="15" fill="rgb(224,111,15)" fg:x="19469" fg:w="40"/><text x="99.3087%" y="1118.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/validation.py:29) (43 samples, 0.22%)</title><rect x="99.0587%" y="836" width="0.2188%" height="15" fill="rgb(253,21,26)" fg:x="19469" fg:w="43"/><text x="99.3087%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (43 samples, 0.22%)</title><rect x="99.0587%" y="852" width="0.2188%" height="15" fill="rgb(245,139,43)" fg:x="19469" fg:w="43"/><text x="99.3087%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (43 samples, 0.22%)</title><rect x="99.0587%" y="868" width="0.2188%" height="15" fill="rgb(252,170,7)" fg:x="19469" fg:w="43"/><text x="99.3087%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (43 samples, 0.22%)</title><rect x="99.0587%" y="884" width="0.2188%" height="15" fill="rgb(231,118,14)" fg:x="19469" fg:w="43"/><text x="99.3087%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (43 samples, 0.22%)</title><rect x="99.0587%" y="900" width="0.2188%" height="15" fill="rgb(238,83,0)" fg:x="19469" fg:w="43"/><text x="99.3087%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (43 samples, 0.22%)</title><rect x="99.0587%" y="916" width="0.2188%" height="15" fill="rgb(221,39,39)" fg:x="19469" fg:w="43"/><text x="99.3087%" y="926.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:96) (48 samples, 0.24%)</title><rect x="99.0536%" y="308" width="0.2442%" height="15" fill="rgb(222,119,46)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (48 samples, 0.24%)</title><rect x="99.0536%" y="324" width="0.2442%" height="15" fill="rgb(222,165,49)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (48 samples, 0.24%)</title><rect x="99.0536%" y="340" width="0.2442%" height="15" fill="rgb(219,113,52)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (48 samples, 0.24%)</title><rect x="99.0536%" y="356" width="0.2442%" height="15" fill="rgb(214,7,15)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (48 samples, 0.24%)</title><rect x="99.0536%" y="372" width="0.2442%" height="15" fill="rgb(235,32,4)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (48 samples, 0.24%)</title><rect x="99.0536%" y="388" width="0.2442%" height="15" fill="rgb(238,90,54)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="398.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:19) (48 samples, 0.24%)</title><rect x="99.0536%" y="404" width="0.2442%" height="15" fill="rgb(213,208,19)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (48 samples, 0.24%)</title><rect x="99.0536%" y="420" width="0.2442%" height="15" fill="rgb(233,156,4)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (48 samples, 0.24%)</title><rect x="99.0536%" y="436" width="0.2442%" height="15" fill="rgb(207,194,5)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (48 samples, 0.24%)</title><rect x="99.0536%" y="452" width="0.2442%" height="15" fill="rgb(206,111,30)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (48 samples, 0.24%)</title><rect x="99.0536%" y="468" width="0.2442%" height="15" fill="rgb(243,70,54)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (48 samples, 0.24%)</title><rect x="99.0536%" y="484" width="0.2442%" height="15" fill="rgb(242,28,8)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (48 samples, 0.24%)</title><rect x="99.0536%" y="500" width="0.2442%" height="15" fill="rgb(219,106,18)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (48 samples, 0.24%)</title><rect x="99.0536%" y="516" width="0.2442%" height="15" fill="rgb(244,222,10)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (48 samples, 0.24%)</title><rect x="99.0536%" y="532" width="0.2442%" height="15" fill="rgb(236,179,52)" fg:x="19468" fg:w="48"/><text x="99.3036%" y="542.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:13) (47 samples, 0.24%)</title><rect x="99.0587%" y="548" width="0.2391%" height="15" fill="rgb(213,23,39)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (47 samples, 0.24%)</title><rect x="99.0587%" y="564" width="0.2391%" height="15" fill="rgb(238,48,10)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (47 samples, 0.24%)</title><rect x="99.0587%" y="580" width="0.2391%" height="15" fill="rgb(251,196,23)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (47 samples, 0.24%)</title><rect x="99.0587%" y="596" width="0.2391%" height="15" fill="rgb(250,152,24)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (47 samples, 0.24%)</title><rect x="99.0587%" y="612" width="0.2391%" height="15" fill="rgb(209,150,17)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (47 samples, 0.24%)</title><rect x="99.0587%" y="628" width="0.2391%" height="15" fill="rgb(234,202,34)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="638.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_chunking.py:8) (47 samples, 0.24%)</title><rect x="99.0587%" y="644" width="0.2391%" height="15" fill="rgb(253,148,53)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (47 samples, 0.24%)</title><rect x="99.0587%" y="660" width="0.2391%" height="15" fill="rgb(218,129,16)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (47 samples, 0.24%)</title><rect x="99.0587%" y="676" width="0.2391%" height="15" fill="rgb(216,85,19)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (47 samples, 0.24%)</title><rect x="99.0587%" y="692" width="0.2391%" height="15" fill="rgb(235,228,7)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (47 samples, 0.24%)</title><rect x="99.0587%" y="708" width="0.2391%" height="15" fill="rgb(245,175,0)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (47 samples, 0.24%)</title><rect x="99.0587%" y="724" width="0.2391%" height="15" fill="rgb(208,168,36)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="734.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_param_validation.py:14) (47 samples, 0.24%)</title><rect x="99.0587%" y="740" width="0.2391%" height="15" fill="rgb(246,171,24)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (47 samples, 0.24%)</title><rect x="99.0587%" y="756" width="0.2391%" height="15" fill="rgb(215,142,24)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (47 samples, 0.24%)</title><rect x="99.0587%" y="772" width="0.2391%" height="15" fill="rgb(250,187,7)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (47 samples, 0.24%)</title><rect x="99.0587%" y="788" width="0.2391%" height="15" fill="rgb(228,66,33)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (47 samples, 0.24%)</title><rect x="99.0587%" y="804" width="0.2391%" height="15" fill="rgb(234,215,21)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (47 samples, 0.24%)</title><rect x="99.0587%" y="820" width="0.2391%" height="15" fill="rgb(222,191,20)" fg:x="19469" fg:w="47"/><text x="99.3087%" y="830.50"></text></g><g><title>&lt;module&gt; (reward.py:10) (68 samples, 0.35%)</title><rect x="98.9570%" y="164" width="0.3460%" height="15" fill="rgb(245,79,54)" fg:x="19449" fg:w="68"/><text x="99.2070%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (68 samples, 0.35%)</title><rect x="98.9570%" y="180" width="0.3460%" height="15" fill="rgb(240,10,37)" fg:x="19449" fg:w="68"/><text x="99.2070%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (59 samples, 0.30%)</title><rect x="99.0027%" y="196" width="0.3002%" height="15" fill="rgb(214,192,32)" fg:x="19458" fg:w="59"/><text x="99.2527%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (59 samples, 0.30%)</title><rect x="99.0027%" y="212" width="0.3002%" height="15" fill="rgb(209,36,54)" fg:x="19458" fg:w="59"/><text x="99.2527%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (59 samples, 0.30%)</title><rect x="99.0027%" y="228" width="0.3002%" height="15" fill="rgb(220,10,11)" fg:x="19458" fg:w="59"/><text x="99.2527%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (59 samples, 0.30%)</title><rect x="99.0027%" y="244" width="0.3002%" height="15" fill="rgb(221,106,17)" fg:x="19458" fg:w="59"/><text x="99.2527%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (59 samples, 0.30%)</title><rect x="99.0027%" y="260" width="0.3002%" height="15" fill="rgb(251,142,44)" fg:x="19458" fg:w="59"/><text x="99.2527%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (59 samples, 0.30%)</title><rect x="99.0027%" y="276" width="0.3002%" height="15" fill="rgb(238,13,15)" fg:x="19458" fg:w="59"/><text x="99.2527%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (59 samples, 0.30%)</title><rect x="99.0027%" y="292" width="0.3002%" height="15" fill="rgb(208,107,27)" fg:x="19458" fg:w="59"/><text x="99.2527%" y="302.50"></text></g><g><title>&lt;module&gt; (reward.py:11) (20 samples, 0.10%)</title><rect x="99.3029%" y="164" width="0.1018%" height="15" fill="rgb(205,136,37)" fg:x="19517" fg:w="20"/><text x="99.5529%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (20 samples, 0.10%)</title><rect x="99.3029%" y="180" width="0.1018%" height="15" fill="rgb(250,205,27)" fg:x="19517" fg:w="20"/><text x="99.5529%" y="190.50"></text></g><g><title>&lt;module&gt; (wandb/sdk/__init__.py:4) (26 samples, 0.13%)</title><rect x="99.4861%" y="388" width="0.1323%" height="15" fill="rgb(210,80,43)" fg:x="19553" fg:w="26"/><text x="99.7361%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (26 samples, 0.13%)</title><rect x="99.4861%" y="404" width="0.1323%" height="15" fill="rgb(247,160,36)" fg:x="19553" fg:w="26"/><text x="99.7361%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (26 samples, 0.13%)</title><rect x="99.4861%" y="420" width="0.1323%" height="15" fill="rgb(234,13,49)" fg:x="19553" fg:w="26"/><text x="99.7361%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (26 samples, 0.13%)</title><rect x="99.4861%" y="436" width="0.1323%" height="15" fill="rgb(234,122,0)" fg:x="19553" fg:w="26"/><text x="99.7361%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (26 samples, 0.13%)</title><rect x="99.4861%" y="452" width="0.1323%" height="15" fill="rgb(207,146,38)" fg:x="19553" fg:w="26"/><text x="99.7361%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (26 samples, 0.13%)</title><rect x="99.4861%" y="468" width="0.1323%" height="15" fill="rgb(207,177,25)" fg:x="19553" fg:w="26"/><text x="99.7361%" y="478.50"></text></g><g><title>&lt;module&gt; (reward.py:13) (46 samples, 0.23%)</title><rect x="99.4047%" y="164" width="0.2340%" height="15" fill="rgb(211,178,42)" fg:x="19537" fg:w="46"/><text x="99.6547%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (46 samples, 0.23%)</title><rect x="99.4047%" y="180" width="0.2340%" height="15" fill="rgb(230,69,54)" fg:x="19537" fg:w="46"/><text x="99.6547%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (46 samples, 0.23%)</title><rect x="99.4047%" y="196" width="0.2340%" height="15" fill="rgb(214,135,41)" fg:x="19537" fg:w="46"/><text x="99.6547%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (46 samples, 0.23%)</title><rect x="99.4047%" y="212" width="0.2340%" height="15" fill="rgb(237,67,25)" fg:x="19537" fg:w="46"/><text x="99.6547%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (46 samples, 0.23%)</title><rect x="99.4047%" y="228" width="0.2340%" height="15" fill="rgb(222,189,50)" fg:x="19537" fg:w="46"/><text x="99.6547%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (46 samples, 0.23%)</title><rect x="99.4047%" y="244" width="0.2340%" height="15" fill="rgb(245,148,34)" fg:x="19537" fg:w="46"/><text x="99.6547%" y="254.50"></text></g><g><title>&lt;module&gt; (wandb/__init__.py:27) (42 samples, 0.21%)</title><rect x="99.4251%" y="260" width="0.2137%" height="15" fill="rgb(222,29,6)" fg:x="19541" fg:w="42"/><text x="99.6751%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (42 samples, 0.21%)</title><rect x="99.4251%" y="276" width="0.2137%" height="15" fill="rgb(221,189,43)" fg:x="19541" fg:w="42"/><text x="99.6751%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (42 samples, 0.21%)</title><rect x="99.4251%" y="292" width="0.2137%" height="15" fill="rgb(207,36,27)" fg:x="19541" fg:w="42"/><text x="99.6751%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (42 samples, 0.21%)</title><rect x="99.4251%" y="308" width="0.2137%" height="15" fill="rgb(217,90,24)" fg:x="19541" fg:w="42"/><text x="99.6751%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (42 samples, 0.21%)</title><rect x="99.4251%" y="324" width="0.2137%" height="15" fill="rgb(224,66,35)" fg:x="19541" fg:w="42"/><text x="99.6751%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (42 samples, 0.21%)</title><rect x="99.4251%" y="340" width="0.2137%" height="15" fill="rgb(221,13,50)" fg:x="19541" fg:w="42"/><text x="99.6751%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (42 samples, 0.21%)</title><rect x="99.4251%" y="356" width="0.2137%" height="15" fill="rgb(236,68,49)" fg:x="19541" fg:w="42"/><text x="99.6751%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (42 samples, 0.21%)</title><rect x="99.4251%" y="372" width="0.2137%" height="15" fill="rgb(229,146,28)" fg:x="19541" fg:w="42"/><text x="99.6751%" y="382.50"></text></g><g><title>&lt;module&gt; (main.py:3) (255 samples, 1.30%)</title><rect x="98.3464%" y="68" width="1.2974%" height="15" fill="rgb(225,31,38)" fg:x="19329" fg:w="255"/><text x="98.5964%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (255 samples, 1.30%)</title><rect x="98.3464%" y="84" width="1.2974%" height="15" fill="rgb(250,208,3)" fg:x="19329" fg:w="255"/><text x="98.5964%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (255 samples, 1.30%)</title><rect x="98.3464%" y="100" width="1.2974%" height="15" fill="rgb(246,54,23)" fg:x="19329" fg:w="255"/><text x="98.5964%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (255 samples, 1.30%)</title><rect x="98.3464%" y="116" width="1.2974%" height="15" fill="rgb(243,76,11)" fg:x="19329" fg:w="255"/><text x="98.5964%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (255 samples, 1.30%)</title><rect x="98.3464%" y="132" width="1.2974%" height="15" fill="rgb(245,21,50)" fg:x="19329" fg:w="255"/><text x="98.5964%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (255 samples, 1.30%)</title><rect x="98.3464%" y="148" width="1.2974%" height="15" fill="rgb(228,9,43)" fg:x="19329" fg:w="255"/><text x="98.5964%" y="158.50"></text></g><g><title>_read_packet_bytes (wandb/sdk/lib/sock_client.py:255) (27 samples, 0.14%)</title><rect x="99.8117%" y="164" width="0.1374%" height="15" fill="rgb(208,100,47)" fg:x="19617" fg:w="27"/><text x="100.0617%" y="174.50"></text></g><g><title>message_loop (wandb/sdk/interface/router.py:70) (34 samples, 0.17%)</title><rect x="99.7965%" y="116" width="0.1730%" height="15" fill="rgb(232,26,8)" fg:x="19614" fg:w="34"/><text x="100.0465%" y="126.50"></text></g><g><title>_read_message (wandb/sdk/interface/router_sock.py:27) (34 samples, 0.17%)</title><rect x="99.7965%" y="132" width="0.1730%" height="15" fill="rgb(216,166,38)" fg:x="19614" fg:w="34"/><text x="100.0465%" y="142.50"></text></g><g><title>read_server_response (wandb/sdk/lib/sock_client.py:285) (33 samples, 0.17%)</title><rect x="99.8016%" y="148" width="0.1679%" height="15" fill="rgb(251,202,51)" fg:x="19615" fg:w="33"/><text x="100.0516%" y="158.50"></text></g><g><title>all (19,654 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(254,216,34)" fg:x="0" fg:w="19654"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:973) (54 samples, 0.27%)</title><rect x="99.7252%" y="68" width="0.2748%" height="15" fill="rgb(251,32,27)" fg:x="19600" fg:w="54"/><text x="99.9752%" y="78.50"></text></g><g><title>_bootstrap_inner (threading.py:1016) (54 samples, 0.27%)</title><rect x="99.7252%" y="84" width="0.2748%" height="15" fill="rgb(208,127,28)" fg:x="19600" fg:w="54"/><text x="99.9752%" y="94.50"></text></g><g><title>run (threading.py:953) (54 samples, 0.27%)</title><rect x="99.7252%" y="100" width="0.2748%" height="15" fill="rgb(224,137,22)" fg:x="19600" fg:w="54"/><text x="99.9752%" y="110.50"></text></g></svg></svg>